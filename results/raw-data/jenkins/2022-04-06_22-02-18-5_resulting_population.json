{
  "executionId" : "1fa19dd7-f947-4883-8036-31f9379f660f",
  "computingTime" : 767745,
  "maxEvaluations" : 10240,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 128,
  "algorithm" : "NSGAII",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.1241305510968433,
    "meanNumConcerns" : 1.6359516616314205,
    "meanMetricsIntensity" : 0.03296937024300846,
    "meanLackOfCohesion" : 0.48535030050355504
  },
  "population" : [ {
    "solutionId" : "46df2284-ea2c-4998-8557-d9cbeb199391",
    "objectives" : {
      "NumberOfConcerns" : 1.0018467220683287,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4870894457518549,
      "MetricsIntensity" : 0.032793124017956296,
      "Density" : 0.9982873779756808
    },
    "euclideanDistance" : 10.111310798343126,
    "generation" : 42,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6332162568991473,
      "LackOfCohesion" : 0.4870894457518549,
      "MetricsIntensity" : 0.032793124017956296,
      "Density" : 3.110458911419424
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners], extractedMethods=[hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.getJob(String), hudson.model.Hudson.isWindows(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.getInstance(), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.isDarwin()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.scm.ChangeLogSet.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "cfc99668-f6bd-448a-b743-5dfe893e791f",
    "objectives" : {
      "NumberOfConcerns" : 1.002770083102493,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4867889737797759,
      "MetricsIntensity" : 0.032719119654695206,
      "Density" : 0.9989724267854084
    },
    "euclideanDistance" : 10.111455275816011,
    "generation" : 46,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6330827067669176,
      "LackOfCohesion" : 0.4867889737797759,
      "MetricsIntensity" : 0.032719119654695206,
      "Density" : 3.109275053304903
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "1508cf98-2d53-4848-b3a8-15bf163930df",
    "objectives" : {
      "NumberOfConcerns" : 1.0036934441366574,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48636470939946796,
      "MetricsIntensity" : 0.032731593296081544,
      "Density" : 1.0003425244048638
    },
    "euclideanDistance" : 10.111661964468777,
    "generation" : 25,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.634586466165414,
      "LackOfCohesion" : 0.48636470939946796,
      "MetricsIntensity" : 0.032731593296081544,
      "Density" : 3.1102236421725236
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "b5694dda-547e-4023-9d7c-35faf16c877a",
    "objectives" : {
      "NumberOfConcerns" : 1.002770083102493,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4876772521680544,
      "MetricsIntensity" : 0.03271877387083779,
      "Density" : 1.0013700976194553
    },
    "euclideanDistance" : 10.111735238445355,
    "generation" : 45,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6330827067669176,
      "LackOfCohesion" : 0.4876772521680544,
      "MetricsIntensity" : 0.03271877387083779,
      "Density" : 3.116737739872069
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "cdbd0eaa-1e07-439e-9703-d231cc1602c7",
    "objectives" : {
      "NumberOfConcerns" : 1.0033856571252693,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4877596697504721,
      "MetricsIntensity" : 0.032718773870837776,
      "Density" : 1.0017126220243193
    },
    "euclideanDistance" : 10.111834203923948,
    "generation" : 47,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6340852130325816,
      "LackOfCohesion" : 0.4877596697504721,
      "MetricsIntensity" : 0.032718773870837776,
      "Density" : 3.1161427810335636
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "1a0710ab-1543-4d4d-b819-bdf797839a42",
    "objectives" : {
      "NumberOfConcerns" : 1.0018467220683287,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48728149487129696,
      "MetricsIntensity" : 0.032752705939247256,
      "Density" : 0.9981161157732489
    },
    "euclideanDistance" : 11.101281395860376,
    "generation" : 44,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6332162568991475,
      "LackOfCohesion" : 0.48728149487129696,
      "MetricsIntensity" : 0.032752705939247256,
      "Density" : 3.108266666666667
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "8c04b49c-e959-4891-86a2-ad813f112614",
    "objectives" : {
      "NumberOfConcerns" : 1.0021545090797168,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48607293537065843,
      "MetricsIntensity" : 0.03276824664928452,
      "Density" : 0.9994862133927043
    },
    "euclideanDistance" : 11.101379509201513,
    "generation" : 43,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6337180130456597,
      "LackOfCohesion" : 0.48607293537065843,
      "MetricsIntensity" : 0.03276824664928452,
      "Density" : 3.1108742004264394
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "b800c815-794e-4f2c-9a69-44c97a61c2da",
    "objectives" : {
      "NumberOfConcerns" : 1.0006155740227762,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48687289863583755,
      "MetricsIntensity" : 0.03281335297125909,
      "Density" : 0.9970885425586573
    },
    "euclideanDistance" : 12.092706025709793,
    "generation" : 35,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6320281124497984,
      "LackOfCohesion" : 0.48687289863583755,
      "MetricsIntensity" : 0.03281335297125909,
      "Density" : 3.1100427350427347
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners], extractedMethods=[hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.getJob(String), hudson.model.Hudson.isWindows(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.getInstance(), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.isDarwin()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.scm.ChangeLogSet.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "a4f700e4-9c4e-4a91-8860-566bee9a93c1",
    "objectives" : {
      "NumberOfConcerns" : 1.0021545090797168,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4877581159494408,
      "MetricsIntensity" : 0.03272112963153473,
      "Density" : 0.9988011645829765
    },
    "euclideanDistance" : 12.093010215758525,
    "generation" : 45,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6328986960882645,
      "LackOfCohesion" : 0.4877581159494408,
      "MetricsIntensity" : 0.03272112963153473,
      "Density" : 3.1104000000000003
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "a773528d-da8b-49ac-b1f4-6e34b385394d",
    "objectives" : {
      "NumberOfConcerns" : 1.0036934441366574,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48665172997018613,
      "MetricsIntensity" : 0.032728326270653495,
      "Density" : 1.0003425244048638
    },
    "euclideanDistance" : 12.093220693659694,
    "generation" : 47,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6354062186559677,
      "LackOfCohesion" : 0.48665172997018613,
      "MetricsIntensity" : 0.0327283262706535,
      "Density" : 3.111880660628662
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.util.VariableResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "3e5804f1-5638-4335-90d1-cf3ee21de5a0",
    "objectives" : {
      "NumberOfConcerns" : 1.0030778701138812,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48978244398709486,
      "MetricsIntensity" : 0.03271264141304801,
      "Density" : 1.0010275732145915
    },
    "euclideanDistance" : 12.093352652395211,
    "generation" : 30,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6344032096288867,
      "LackOfCohesion" : 0.48978244398709486,
      "MetricsIntensity" : 0.03271264141304801,
      "Density" : 3.115671641791044
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "f7ca474b-90cd-47c1-b261-9a2280404b3c",
    "objectives" : {
      "NumberOfConcerns" : 1.0003077870113881,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4870043729830523,
      "MetricsIntensity" : 0.032776660384397534,
      "Density" : 0.9965747559513616
    },
    "euclideanDistance" : 13.085565501029205,
    "generation" : 46,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.631526104417671,
      "LackOfCohesion" : 0.4870043729830523,
      "MetricsIntensity" : 0.032776660384397534,
      "Density" : 3.108440170940171
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners], extractedMethods=[hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.getJob(String), hudson.model.Hudson.isWindows(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.getInstance(), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.isDarwin()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "ca4ad090-8d0a-4f3b-9e54-71579cc14b92",
    "objectives" : {
      "NumberOfConcerns" : 1.0009233610341643,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4876025785669685,
      "MetricsIntensity" : 0.03275541312126268,
      "Density" : 0.9969172803562254
    },
    "euclideanDistance" : 13.085660886262133,
    "generation" : 47,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6317109884596082,
      "LackOfCohesion" : 0.4876025785669685,
      "MetricsIntensity" : 0.03275541312126268,
      "Density" : 3.10784837159637
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "6285b523-762d-4868-8e70-3a88a4d6ae01",
    "objectives" : {
      "NumberOfConcerns" : 1.0021545090797168,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4849118271963489,
      "MetricsIntensity" : 0.03276139614738449,
      "Density" : 1.000171262202432
    },
    "euclideanDistance" : 13.085903446191129,
    "generation" : 45,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6337180130456601,
      "LackOfCohesion" : 0.4849118271963489,
      "MetricsIntensity" : 0.0327613961473845,
      "Density" : 3.1130063965884855
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "9af0297e-6708-4402-bf40-326ad8994014",
    "objectives" : {
      "NumberOfConcerns" : 1.002462296091105,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48545024054823965,
      "MetricsIntensity" : 0.032743912572136276,
      "Density" : 1.000171262202432
    },
    "euclideanDistance" : 13.085946939701335,
    "generation" : 32,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6334002006018054,
      "LackOfCohesion" : 0.48545024054823965,
      "MetricsIntensity" : 0.032743912572136276,
      "Density" : 3.1130063965884864
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "24907d7e-a147-4d23-b5e2-86f8da0c326a",
    "objectives" : {
      "NumberOfConcerns" : 1.0009233610341643,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48824337588365085,
      "MetricsIntensity" : 0.032738254510654693,
      "Density" : 0.9972598047610892
    },
    "euclideanDistance" : 14.079624571708536,
    "generation" : 43,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6317109884596084,
      "LackOfCohesion" : 0.48824337588365085,
      "MetricsIntensity" : 0.0327382545106547,
      "Density" : 3.1089161772557405
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "b7ed9ea4-ce8f-4f19-98d2-44686c743813",
    "objectives" : {
      "NumberOfConcerns" : 1.002462296091105,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48697879916468023,
      "MetricsIntensity" : 0.03273623401437818,
      "Density" : 1.0015413598218874
    },
    "euclideanDistance" : 14.079994167696642,
    "generation" : 45,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6334002006018054,
      "LackOfCohesion" : 0.48697879916468023,
      "MetricsIntensity" : 0.03273623401437818,
      "Density" : 3.11727078891258
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "37c4f062-1687-49e9-9912-e8c857a32202",
    "objectives" : {
      "NumberOfConcerns" : 1.0003077870113881,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4858426257838806,
      "MetricsIntensity" : 0.03276980611227081,
      "Density" : 0.9972598047610892
    },
    "euclideanDistance" : 15.07422501172677,
    "generation" : 50,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6315261044176703,
      "LackOfCohesion" : 0.4858426257838806,
      "MetricsIntensity" : 0.03276980611227081,
      "Density" : 3.1105769230769234
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners], extractedMethods=[hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.getJob(String), hudson.model.Hudson.isWindows(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.getInstance(), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.isDarwin()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "e8e435d1-0e75-4beb-988e-96cdb60d8c6c",
    "objectives" : {
      "NumberOfConcerns" : 1.0003077870113881,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4886420321844086,
      "MetricsIntensity" : 0.03279547278585269,
      "Density" : 0.9962322315464976
    },
    "euclideanDistance" : 15.07424760664957,
    "generation" : 50,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6307074761665827,
      "LackOfCohesion" : 0.4886420321844086,
      "MetricsIntensity" : 0.03279547278585268,
      "Density" : 3.109032602886157
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners], extractedMethods=[hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.getJob(String), hudson.model.Hudson.isWindows(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.getInstance(), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.isDarwin()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "cfb2b9a7-2014-4c71-991b-1c5a2475c3ef",
    "objectives" : {
      "NumberOfConcerns" : 0.9996922129886119,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4861713448019947,
      "MetricsIntensity" : 0.032789024828357806,
      "Density" : 0.9967460181537935
    },
    "euclideanDistance" : 16.069546503933186,
    "generation" : 49,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6313410346559516,
      "LackOfCohesion" : 0.4861713448019947,
      "MetricsIntensity" : 0.032789024828357806,
      "Density" : 3.110636023516836
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners], extractedMethods=[hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.getJob(String), hudson.model.Hudson.isWindows(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.getInstance(), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.isDarwin()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "50df532e-bf44-4879-9395-5befd7a26321",
    "objectives" : {
      "NumberOfConcerns" : 1.0015389350569406,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48676845560295356,
      "MetricsIntensity" : 0.032763147383488254,
      "Density" : 0.9982873779756808
    },
    "euclideanDistance" : 16.0697751969546,
    "generation" : 50,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6327145007526345,
      "LackOfCohesion" : 0.48676845560295356,
      "MetricsIntensity" : 0.032763147383488254,
      "Density" : 3.1088000000000005
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "5bbc9c2e-88ad-475a-93b0-6f504324cb9c",
    "objectives" : {
      "NumberOfConcerns" : 1.0003077870113881,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48792839984924785,
      "MetricsIntensity" : 0.03275994182524235,
      "Density" : 0.9969172803562254
    },
    "euclideanDistance" : 17.06556788008522,
    "generation" : 36,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6323455549974895,
      "LackOfCohesion" : 0.48792839984924785,
      "MetricsIntensity" : 0.03275994182524234,
      "Density" : 3.1095085470085477
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "6f24191e-0f1e-4e9b-bbad-9a2c06009d65",
    "objectives" : {
      "NumberOfConcerns" : 1.0030778701138812,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48593000816559156,
      "MetricsIntensity" : 0.03266562647495461,
      "Density" : 0.9996574755951362
    },
    "euclideanDistance" : 17.065833565871145,
    "generation" : 43,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6344032096288867,
      "LackOfCohesion" : 0.48593000816559156,
      "MetricsIntensity" : 0.03266562647495461,
      "Density" : 3.1097496004262117
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "96ced06d-970b-4cd7-8dde-c2b9dad7b18c",
    "objectives" : {
      "NumberOfConcerns" : 1.002462296091105,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.4869597337537525,
      "MetricsIntensity" : 0.03268171339753552,
      "Density" : 0.9988011645829765
    },
    "euclideanDistance" : 18.062135319450597,
    "generation" : 44,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6342197691921727,
      "LackOfCohesion" : 0.4869597337537525,
      "MetricsIntensity" : 0.03268171339753552,
      "Density" : 3.108742004264392
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "f593afad-5a7c-4cc7-a127-aa35e4f1f278",
    "objectives" : {
      "NumberOfConcerns" : 0.9993844259772238,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4879241624689092,
      "MetricsIntensity" : 0.03279112453863155,
      "Density" : 0.9957184449392019
    },
    "euclideanDistance" : 19.05857732619745,
    "generation" : 36,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6308387744851827,
      "LackOfCohesion" : 0.4879241624689092,
      "MetricsIntensity" : 0.03279112453863155,
      "Density" : 3.1057692307692313
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners], extractedMethods=[hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.getJob(String), hudson.model.Hudson.isWindows(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.getInstance(), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.isDarwin()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "6d518962-6733-4511-99d0-41635f694792",
    "objectives" : {
      "NumberOfConcerns" : 1.0015389350569406,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4873239417618903,
      "MetricsIntensity" : 0.032655569009739344,
      "Density" : 0.9981161157732489
    },
    "euclideanDistance" : 19.05880025157415,
    "generation" : 44,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6327145007526345,
      "LackOfCohesion" : 0.4873239417618903,
      "MetricsIntensity" : 0.032655569009739344,
      "Density" : 3.1099252934898614
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "4ea857bd-6312-44a5-a851-fe0c40b0b5cd",
    "objectives" : {
      "NumberOfConcerns" : 1.0018467220683287,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4866312965358238,
      "MetricsIntensity" : 0.032679976681233576,
      "Density" : 0.9989724267854084
    },
    "euclideanDistance" : 19.05884363658091,
    "generation" : 45,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6340361445783131,
      "LackOfCohesion" : 0.4866312965358238,
      "MetricsIntensity" : 0.03267997668123357,
      "Density" : 3.1109333333333327
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "9af80510-0de9-49a3-a549-58935aae3bd4",
    "objectives" : {
      "NumberOfConcerns" : 1.002462296091105,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48864806345363343,
      "MetricsIntensity" : 0.032649685662134824,
      "Density" : 1.0006850488097276
    },
    "euclideanDistance" : 19.059017397386633,
    "generation" : 45,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6342197691921736,
      "LackOfCohesion" : 0.48864806345363343,
      "MetricsIntensity" : 0.03264968566213482,
      "Density" : 3.116266666666666
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "3fc64cea-993e-4e91-984a-3a2d8eee1baf",
    "objectives" : {
      "NumberOfConcerns" : 1.002462296091105,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4893493835856464,
      "MetricsIntensity" : 0.03264663231586166,
      "Density" : 1.0003425244048638
    },
    "euclideanDistance" : 19.059017404972224,
    "generation" : 28,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6342197691921727,
      "LackOfCohesion" : 0.4893493835856464,
      "MetricsIntensity" : 0.032646632315861665,
      "Density" : 3.115199999999999
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "aff71381-8c3e-4d76-9cb3-979e51cfb8dc",
    "objectives" : {
      "NumberOfConcerns" : 0.9990766389658357,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.48632982820423515,
      "MetricsIntensity" : 0.03276580080022904,
      "Density" : 0.9965747559513616
    },
    "euclideanDistance" : 20.05564523205948,
    "generation" : 45,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6287004515805321,
      "LackOfCohesion" : 0.48632982820423515,
      "MetricsIntensity" : 0.03276580080022904,
      "Density" : 3.1051227321237986
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "19258b90-ca96-48a8-850e-dbf76f20b73f",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.4866300197503537,
      "MetricsIntensity" : 0.032706855069963216,
      "Density" : 0.9962322315464976
    },
    "euclideanDistance" : 20.055681418831497,
    "generation" : 49,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6318432948267205,
      "LackOfCohesion" : 0.4866300197503537,
      "MetricsIntensity" : 0.032706855069963216,
      "Density" : 3.1073717948717943
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "7990c1fa-99a3-4b3c-8934-b39d272da3b1",
    "objectives" : {
      "NumberOfConcerns" : 1.002462296091105,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.48509730544742974,
      "MetricsIntensity" : 0.03267791624190865,
      "Density" : 0.9998287377975681
    },
    "euclideanDistance" : 20.055946135796546,
    "generation" : 51,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6342197691921725,
      "LackOfCohesion" : 0.48509730544742974,
      "MetricsIntensity" : 0.03267791624190865,
      "Density" : 3.111940298507463
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "97247600-485b-40ce-b511-e447ce0d2f3c",
    "objectives" : {
      "NumberOfConcerns" : 1.0021545090797168,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.4864938004082813,
      "MetricsIntensity" : 0.0326650781848959,
      "Density" : 1.0011988354170234
    },
    "euclideanDistance" : 20.05603290766341,
    "generation" : 45,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6337180130456597,
      "LackOfCohesion" : 0.4864938004082813,
      "MetricsIntensity" : 0.0326650781848959,
      "Density" : 3.1178666666666675
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "0c15d4d3-3ac1-4395-9e92-d6848a9cc43f",
    "objectives" : {
      "NumberOfConcerns" : 1.0018467220683287,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48565494101213763,
      "MetricsIntensity" : 0.032670575095788204,
      "Density" : 0.9984586401781127
    },
    "euclideanDistance" : 21.053207465820307,
    "generation" : 44,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6332162568991475,
      "LackOfCohesion" : 0.48565494101213763,
      "MetricsIntensity" : 0.0326705750957882,
      "Density" : 3.1093333333333337
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "2af0cf94-4dc2-42f3-8668-4a2949f61bd2",
    "objectives" : {
      "NumberOfConcerns" : 0.9975377039088951,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4866203815585609,
      "MetricsIntensity" : 0.032773524985295635,
      "Density" : 0.9943483473197465
    },
    "euclideanDistance" : 22.05043499811796,
    "generation" : 41,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6270080321285136,
      "LackOfCohesion" : 0.4866203815585609,
      "MetricsIntensity" : 0.032773524985295635,
      "Density" : 3.103153393907002
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "99b3e650-2a48-4e2e-9b96-806bb7ceb7ce",
    "objectives" : {
      "NumberOfConcerns" : 1.0006155740227762,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4854988143906834,
      "MetricsIntensity" : 0.032695026763015174,
      "Density" : 0.997944853570817
    },
    "euclideanDistance" : 22.05071208649043,
    "generation" : 49,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.632028112449799,
      "LackOfCohesion" : 0.4854988143906834,
      "MetricsIntensity" : 0.032695026763015174,
      "Density" : 3.11105178857448
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "aecb0859-d5d3-4aa2-aa5e-63a5927e0c07",
    "objectives" : {
      "NumberOfConcerns" : 1.002462296091105,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.48518408375627836,
      "MetricsIntensity" : 0.032846601625831605,
      "Density" : 0.9996574755951362
    },
    "euclideanDistance" : 22.050866835976457,
    "generation" : 49,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6342197691921736,
      "LackOfCohesion" : 0.48518408375627836,
      "MetricsIntensity" : 0.032846601625831605,
      "Density" : 3.111407249466952
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "7f801f2b-22dd-4ad8-88fd-eb74514e5490",
    "objectives" : {
      "NumberOfConcerns" : 0.9969221298861188,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.48694952885628673,
      "MetricsIntensity" : 0.03279274574922017,
      "Density" : 0.9938345607124508
    },
    "euclideanDistance" : 23.048205051043567,
    "generation" : 51,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6268206931190354,
      "LackOfCohesion" : 0.48694952885628673,
      "MetricsIntensity" : 0.03279274574922018,
      "Density" : 3.1032085561497333
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "fdd55227-857b-4ae5-a197-067034176a6f",
    "objectives" : {
      "NumberOfConcerns" : 0.997229916897507,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4874874133832155,
      "MetricsIntensity" : 0.03277522567603452,
      "Density" : 0.9938345607124508
    },
    "euclideanDistance" : 23.04822971151683,
    "generation" : 49,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6265060240963853,
      "LackOfCohesion" : 0.4874874133832155,
      "MetricsIntensity" : 0.03277522567603452,
      "Density" : 3.103208556149733
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "b6aeb66b-5a41-4347-bdf1-e8e60c82e5ae",
    "objectives" : {
      "NumberOfConcerns" : 0.9984610649430594,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.484795181136773,
      "MetricsIntensity" : 0.03278120748937173,
      "Density" : 0.9970885425586573
    },
    "euclideanDistance" : 23.048366775872143,
    "generation" : 50,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.628514056224899,
      "LackOfCohesion" : 0.484795181136773,
      "MetricsIntensity" : 0.03278120748937173,
      "Density" : 3.1083822744260545
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "28a4dc97-9f6f-4b62-853f-9df994c1bbf3",
    "objectives" : {
      "NumberOfConcerns" : 1.0006155740227762,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.486139310514315,
      "MetricsIntensity" : 0.03268768157663817,
      "Density" : 0.9969172803562254
    },
    "euclideanDistance" : 23.048480980416127,
    "generation" : 45,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6320281124497995,
      "LackOfCohesion" : 0.486139310514315,
      "MetricsIntensity" : 0.032687681576638164,
      "Density" : 3.10784837159637
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "373d5331-8d80-4864-853e-d024b0f3beee",
    "objectives" : {
      "NumberOfConcerns" : 0.9978454909202832,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.4851233233681869,
      "MetricsIntensity" : 0.032800432483750044,
      "Density" : 0.9965747559513616
    },
    "euclideanDistance" : 24.046315255672674,
    "generation" : 45,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6283274736313411,
      "LackOfCohesion" : 0.4851233233681869,
      "MetricsIntensity" : 0.032800432483750044,
      "Density" : 3.108440170940171
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "2db3506a-09de-4da9-a192-23b16b8c736a",
    "objectives" : {
      "NumberOfConcerns" : 1.0003077870113881,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48596039490278664,
      "MetricsIntensity" : 0.032719360720309405,
      "Density" : 0.9974310669635211
    },
    "euclideanDistance" : 24.046469854514605,
    "generation" : 44,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6323455549974888,
      "LackOfCohesion" : 0.48596039490278664,
      "MetricsIntensity" : 0.032719360720309405,
      "Density" : 3.109450080085425
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "4ea10157-2f76-4030-ab39-00f2a64c154d",
    "objectives" : {
      "NumberOfConcerns" : 1.0015389350569406,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.4843141100925268,
      "MetricsIntensity" : 0.032695373117787044,
      "Density" : 0.9996574755951362
    },
    "euclideanDistance" : 24.04658030680467,
    "generation" : 42,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6335341365461846,
      "LackOfCohesion" : 0.4843141100925268,
      "MetricsIntensity" : 0.032695373117787044,
      "Density" : 3.1130666666666658
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "7e9eaa27-20d8-4bc0-9f32-68f8d02d546e",
    "objectives" : {
      "NumberOfConcerns" : 1.0012311480455525,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48571137362517824,
      "MetricsIntensity" : 0.032682527995250336,
      "Density" : 1.0010275732145915
    },
    "euclideanDistance" : 24.046652650634297,
    "generation" : 50,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6330321285140563,
      "LackOfCohesion" : 0.48571137362517824,
      "MetricsIntensity" : 0.03268252799525033,
      "Density" : 3.1189967982924234
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "202d5575-8470-4cec-bb4c-9b2c07626d1a",
    "objectives" : {
      "NumberOfConcerns" : 0.9966143428747307,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.48598439226685625,
      "MetricsIntensity" : 0.032841859531835264,
      "Density" : 0.9945196095221784
    },
    "euclideanDistance" : 25.044352034329265,
    "generation" : 49,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6271356783919597,
      "LackOfCohesion" : 0.48598439226685625,
      "MetricsIntensity" : 0.032841859531835264,
      "Density" : 3.10700909577314
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.scm.ChangeLogSet.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "53a00b41-a285-4f7a-a042-a1a8bd851e19",
    "objectives" : {
      "NumberOfConcerns" : 0.9969221298861188,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4895133792863265,
      "MetricsIntensity" : 0.03276910527562627,
      "Density" : 0.993149511902723
    },
    "euclideanDistance" : 25.04437854786599,
    "generation" : 46,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6268206931190352,
      "LackOfCohesion" : 0.4895133792863265,
      "MetricsIntensity" : 0.03276910527562627,
      "Density" : 3.1027287319422157
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "4d94d44a-0010-49fc-9c27-9f68d3baecbb",
    "objectives" : {
      "NumberOfConcerns" : 1.0006155740227762,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.48514978541926945,
      "MetricsIntensity" : 0.03270204519619608,
      "Density" : 0.9981161157732489
    },
    "euclideanDistance" : 25.044638289374344,
    "generation" : 46,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.632847815168257,
      "LackOfCohesion" : 0.48514978541926945,
      "MetricsIntensity" : 0.03270204519619608,
      "Density" : 3.1115856914041644
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "0524745a-d9a3-44a0-a4c7-3131649c0d12",
    "objectives" : {
      "NumberOfConcerns" : 1.0009233610341643,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48528349016292177,
      "MetricsIntensity" : 0.032697826606724316,
      "Density" : 0.9994862133927043
    },
    "euclideanDistance" : 26.042991177649228,
    "generation" : 35,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6333500753390262,
      "LackOfCohesion" : 0.48528349016292177,
      "MetricsIntensity" : 0.032697826606724316,
      "Density" : 3.1141942369263615
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "e1f7bf8e-a639-43fb-aaf8-78652bbd65c9",
    "objectives" : {
      "NumberOfConcerns" : 1.0009233610341643,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48458139765190833,
      "MetricsIntensity" : 0.03270088331571361,
      "Density" : 0.9998287377975681
    },
    "euclideanDistance" : 26.042991255965774,
    "generation" : 39,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6333500753390267,
      "LackOfCohesion" : 0.48458139765190833,
      "MetricsIntensity" : 0.03270088331571361,
      "Density" : 3.115261472785486
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "05712890-6659-4cbd-8ebe-97386ba995ab",
    "objectives" : {
      "NumberOfConcerns" : 1.0015389350569406,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48460047563152997,
      "MetricsIntensity" : 0.03269208659518968,
      "Density" : 0.9996574755951362
    },
    "euclideanDistance" : 26.043008691402314,
    "generation" : 46,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6343545956805623,
      "LackOfCohesion" : 0.48460047563152997,
      "MetricsIntensity" : 0.032692086595189684,
      "Density" : 3.114727854855924
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.util.VariableResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "375b3257-2ee6-496e-aa77-9bdca69c06c5",
    "objectives" : {
      "NumberOfConcerns" : 0.9963065558633426,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.49007823369501163,
      "MetricsIntensity" : 0.032823005642548524,
      "Density" : 0.9928069874978592
    },
    "euclideanDistance" : 27.041071474564795,
    "generation" : 44,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6266331658291455,
      "LackOfCohesion" : 0.49007823369501163,
      "MetricsIntensity" : 0.032823005642548524,
      "Density" : 3.1033190578158463
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "c8fe5408-eb39-46c4-9d1c-26af2f337945",
    "objectives" : {
      "NumberOfConcerns" : 0.9996922129886119,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.4851263325584997,
      "MetricsIntensity" : 0.03273170040657264,
      "Density" : 0.997602329165953
    },
    "euclideanDistance" : 27.04128350967499,
    "generation" : 45,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6321608040201003,
      "LackOfCohesion" : 0.4851263325584997,
      "MetricsIntensity" : 0.032731700406572646,
      "Density" : 3.111645299145299
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "ed51c130-438d-4402-a9ec-50dcfcaeeab2",
    "objectives" : {
      "NumberOfConcerns" : 1.0012311480455525,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48407581028702323,
      "MetricsIntensity" : 0.03279336606969003,
      "Density" : 0.9989724267854084
    },
    "euclideanDistance" : 28.039896834978855,
    "generation" : 48,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6338523355097945,
      "LackOfCohesion" : 0.48407581028702323,
      "MetricsIntensity" : 0.03279336606969003,
      "Density" : 3.112593383137674
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "9d8a91ec-dc84-4006-b3ea-19f60233d9e0",
    "objectives" : {
      "NumberOfConcerns" : 0.997229916897507,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.4851175170809142,
      "MetricsIntensity" : 0.0327983843110116,
      "Density" : 0.9957184449392019
    },
    "euclideanDistance" : 29.038290884074765,
    "generation" : 50,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6273229532898041,
      "LackOfCohesion" : 0.4851175170809142,
      "MetricsIntensity" : 0.03279838431101159,
      "Density" : 3.1074291822554776
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "89969442-0063-4511-8b8c-91bb067b77d4",
    "objectives" : {
      "NumberOfConcerns" : 0.9956909818405664,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.4892459815913246,
      "MetricsIntensity" : 0.03283540926740518,
      "Density" : 0.9929782497002911
    },
    "euclideanDistance" : 30.036941357773124,
    "generation" : 43,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6264454499748617,
      "LackOfCohesion" : 0.4892459815913246,
      "MetricsIntensity" : 0.03283540926740517,
      "Density" : 3.1055168719871435
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "7dcc0be1-18ba-40b3-ade5-71d0e1b6ce4e",
    "objectives" : {
      "NumberOfConcerns" : 0.9996922129886119,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.48506792126602755,
      "MetricsIntensity" : 0.032797999486568453,
      "Density" : 0.9964034937489296
    },
    "euclideanDistance" : 30.03711988590246,
    "generation" : 48,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6321608040201003,
      "LackOfCohesion" : 0.48506792126602755,
      "MetricsIntensity" : 0.03279799948656846,
      "Density" : 3.109567076429717
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "6cfe3db3-3cb3-47af-ae3a-28373b7284a8",
    "objectives" : {
      "NumberOfConcerns" : 0.9966143428747307,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.4865506340662287,
      "MetricsIntensity" : 0.03289047613246742,
      "Density" : 0.993320774105155
    },
    "euclideanDistance" : 31.035749380538935,
    "generation" : 49,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6271356783919597,
      "LackOfCohesion" : 0.4865506340662287,
      "MetricsIntensity" : 0.03289047613246742,
      "Density" : 3.1032637774210805
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "4ec165fd-0e93-4851-940e-b8a1b949330b",
    "objectives" : {
      "NumberOfConcerns" : 0.9993844259772238,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.48716821178915715,
      "MetricsIntensity" : 0.03273053231181471,
      "Density" : 0.9965747559513616
    },
    "euclideanDistance" : 32.03483002341995,
    "generation" : 53,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6324786324786327,
      "LackOfCohesion" : 0.48716821178915715,
      "MetricsIntensity" : 0.03273053231181472,
      "Density" : 3.108440170940171
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.util.VariableResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "381ba02a-91c2-4bfe-98cd-5749fb14fcd7",
    "objectives" : {
      "NumberOfConcerns" : 1.0012311480455525,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.48391398344174746,
      "MetricsIntensity" : 0.03279336606969002,
      "Density" : 0.9991436889878403
    },
    "euclideanDistance" : 32.03491844958076,
    "generation" : 14,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6338523355097945,
      "LackOfCohesion" : 0.48391398344174746,
      "MetricsIntensity" : 0.03279336606969002,
      "Density" : 3.113127001067236
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "283e8e2c-4636-423b-8882-8d59612db665",
    "objectives" : {
      "NumberOfConcerns" : 0.9963065558633426,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.4883423488800829,
      "MetricsIntensity" : 0.03288405680969895,
      "Density" : 0.9926357252954273
    },
    "euclideanDistance" : 33.033581580677726,
    "generation" : 45,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6258161727774993,
      "LackOfCohesion" : 0.4883423488800829,
      "MetricsIntensity" : 0.03288405680969895,
      "Density" : 3.1011235955056176
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.HistoricalSecrets.MAGIC], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "394cd7e1-2a08-4e4b-936f-1402b8a1bd89",
    "objectives" : {
      "NumberOfConcerns" : 0.9956909818405664,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.49083449763309395,
      "MetricsIntensity" : 0.03282300564254848,
      "Density" : 0.9922932008905635
    },
    "euclideanDistance" : 33.03358960484946,
    "generation" : 49,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6256281407035167,
      "LackOfCohesion" : 0.49083449763309395,
      "MetricsIntensity" : 0.03282300564254848,
      "Density" : 3.101713062098501
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "4d2640a7-1db9-47a8-887e-0a73180da5c0",
    "objectives" : {
      "NumberOfConcerns" : 0.9990766389658357,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.4897531595612687,
      "MetricsIntensity" : 0.032709308081991184,
      "Density" : 0.9946908717246103
    },
    "euclideanDistance" : 34.03275616398054,
    "generation" : 45,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6303365143144148,
      "LackOfCohesion" : 0.4897531595612687,
      "MetricsIntensity" : 0.03270930808199119,
      "Density" : 3.1075441412520064
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "ed0dfb05-747a-45a5-94cc-ecb1020fd661",
    "objectives" : {
      "NumberOfConcerns" : 0.9996922129886119,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.4891336661691982,
      "MetricsIntensity" : 0.03271236479098048,
      "Density" : 0.9953759205343381
    },
    "euclideanDistance" : 34.032785363323995,
    "generation" : 46,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.631341034655951,
      "LackOfCohesion" : 0.4891336661691982,
      "MetricsIntensity" : 0.03271236479098048,
      "Density" : 3.1080213903743306
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "dbb6c8c8-7d4f-4130-b7f8-959f74523b55",
    "objectives" : {
      "NumberOfConcerns" : 0.9981532779316713,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.4842334928423373,
      "MetricsIntensity" : 0.03287895124419873,
      "Density" : 0.9967460181537935
    },
    "euclideanDistance" : 35.03177665622993,
    "generation" : 48,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6288297338021105,
      "LackOfCohesion" : 0.4842334928423373,
      "MetricsIntensity" : 0.03287895124419873,
      "Density" : 3.10897435897436
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "1e872a63-6edf-47c0-acd7-e5e659580533",
    "objectives" : {
      "NumberOfConcerns" : 1.0006155740227762,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.4845284622468168,
      "MetricsIntensity" : 0.032809231033570974,
      "Density" : 0.9986299023805446
    },
    "euclideanDistance" : 35.03190456548536,
    "generation" : 44,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6344896933132227,
      "LackOfCohesion" : 0.4845284622468168,
      "MetricsIntensity" : 0.03280923103357097,
      "Density" : 3.1148504273504276
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.util.VariableResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "efa33dfc-4f7e-4878-8cfa-131872f2d179",
    "objectives" : {
      "NumberOfConcerns" : 0.9959987688519545,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.4893705761561886,
      "MetricsIntensity" : 0.03279825676195875,
      "Density" : 0.9926357252954273
    },
    "euclideanDistance" : 37.029959472258966,
    "generation" : 52,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6253139126067304,
      "LackOfCohesion" : 0.4893705761561886,
      "MetricsIntensity" : 0.03279825676195875,
      "Density" : 3.104445634708088
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "1f82729b-0705-4bf7-9dc1-1fa10720163c",
    "objectives" : {
      "NumberOfConcerns" : 0.9966143428747307,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.48592817003762523,
      "MetricsIntensity" : 0.03288053392156828,
      "Density" : 0.9938345607124508
    },
    "euclideanDistance" : 37.02996293001706,
    "generation" : 49,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6271356783919597,
      "LackOfCohesion" : 0.48592817003762523,
      "MetricsIntensity" : 0.032880533921568283,
      "Density" : 3.104868913857677
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "0404d2b2-4a1e-4e5a-95b1-44f217ae7fa9",
    "objectives" : {
      "NumberOfConcerns" : 0.9993844259772238,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.4887238234509065,
      "MetricsIntensity" : 0.032707606454748614,
      "Density" : 0.9953759205343381
    },
    "euclideanDistance" : 37.030115625220425,
    "generation" : 44,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.630838774485183,
      "LackOfCohesion" : 0.4887238234509065,
      "MetricsIntensity" : 0.032707606454748614,
      "Density" : 3.1080213903743314
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "df08c31e-047f-4e49-8240-43b0641579e4",
    "objectives" : {
      "NumberOfConcerns" : 0.9950754078177901,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.488200045947166,
      "MetricsIntensity" : 0.03281657738822013,
      "Density" : 0.9929782497002911
    },
    "euclideanDistance" : 38.0291414192358,
    "generation" : 52,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.626257545271629,
      "LackOfCohesion" : 0.488200045947166,
      "MetricsIntensity" : 0.03281657738822013,
      "Density" : 3.1038543897216275
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "69e140b5-202e-4094-a926-181fbb60d3d5",
    "objectives" : {
      "NumberOfConcerns" : 0.9975377039088951,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.484848323917969,
      "MetricsIntensity" : 0.03289490474839434,
      "Density" : 0.9962322315464976
    },
    "euclideanDistance" : 38.02924821899398,
    "generation" : 45,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.629462041226747,
      "LackOfCohesion" : 0.484848323917969,
      "MetricsIntensity" : 0.03289490474839434,
      "Density" : 3.110695187165776
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.util.VariableResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "3635c977-1990-439c-bdb4-3c2492add60d",
    "objectives" : {
      "NumberOfConcerns" : 0.9950754078177901,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.4880230171914429,
      "MetricsIntensity" : 0.03291925557931179,
      "Density" : 0.9921219386881315
    },
    "euclideanDistance" : 39.02837084930867,
    "generation" : 43,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6254399195575666,
      "LackOfCohesion" : 0.4880230171914429,
      "MetricsIntensity" : 0.03291925557931179,
      "Density" : 3.0995184590690217
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.HistoricalSecrets.MAGIC], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "17edb760-9762-435c-ac2d-22f7a9924c34",
    "objectives" : {
      "NumberOfConcerns" : 0.9956909818405664,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.49139869584920365,
      "MetricsIntensity" : 0.032792145034367746,
      "Density" : 0.9919506764856996
    },
    "euclideanDistance" : 39.028424445254736,
    "generation" : 47,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.625628140703517,
      "LackOfCohesion" : 0.49139869584920365,
      "MetricsIntensity" : 0.032792145034367746,
      "Density" : 3.103965702036442
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "14bdfdd1-941c-4f83-aa29-fd62873782d3",
    "objectives" : {
      "NumberOfConcerns" : 0.9984610649430594,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.4891045037306889,
      "MetricsIntensity" : 0.032725098925097854,
      "Density" : 0.9946908717246103
    },
    "euclideanDistance" : 39.02853608036265,
    "generation" : 45,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6301507537688438,
      "LackOfCohesion" : 0.4891045037306889,
      "MetricsIntensity" : 0.032725098925097854,
      "Density" : 3.105882352941177
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "86a16332-5d6b-46db-82e4-6c8ec8568a6a",
    "objectives" : {
      "NumberOfConcerns" : 0.9981532779316713,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.4899724909623125,
      "MetricsIntensity" : 0.03272680148987612,
      "Density" : 0.9941770851173146
    },
    "euclideanDistance" : 40.02781335681795,
    "generation" : 46,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6296482412060305,
      "LackOfCohesion" : 0.4899724909623125,
      "MetricsIntensity" : 0.03272680148987611,
      "Density" : 3.1059390048154096
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "a1f0fe44-9e8f-4306-baa0-c2510e908324",
    "objectives" : {
      "NumberOfConcerns" : 0.9987688519544475,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.48789128365678375,
      "MetricsIntensity" : 0.032719939664832484,
      "Density" : 0.99554718273677
    },
    "euclideanDistance" : 40.02783733743068,
    "generation" : 51,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6306532663316582,
      "LackOfCohesion" : 0.48789128365678375,
      "MetricsIntensity" : 0.03271993966483248,
      "Density" : 3.1102193686463346
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "93890670-8c89-4f00-9a9a-dccabca8055a",
    "objectives" : {
      "NumberOfConcerns" : 0.9953831948291783,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.4925006149052718,
      "MetricsIntensity" : 0.03282851904729282,
      "Density" : 0.9916081520808357
    },
    "euclideanDistance" : 41.02703631752075,
    "generation" : 51,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6251256281407032,
      "LackOfCohesion" : 0.4925006149052718,
      "MetricsIntensity" : 0.03282851904729282,
      "Density" : 3.10455764075067
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "0485379b-ba52-4c3b-866c-f441d8827254",
    "objectives" : {
      "NumberOfConcerns" : 0.9944598337950139,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.4871891724409786,
      "MetricsIntensity" : 0.03293176925821474,
      "Density" : 0.9922932008905635
    },
    "euclideanDistance" : 42.026325487112665,
    "generation" : 44,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6252515090543267,
      "LackOfCohesion" : 0.4871891724409786,
      "MetricsIntensity" : 0.03293176925821474,
      "Density" : 3.101713062098501
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.HistoricalSecrets.MAGIC], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "bba31fd4-27fc-4041-9e66-6a4e352da89f",
    "objectives" : {
      "NumberOfConcerns" : 0.9950754078177901,
      "NumberOfRefactorings" : 43.0,
      "LackOfCohesion" : 0.49029217610632053,
      "MetricsIntensity" : 0.03281274078425437,
      "Density" : 0.9917794142832677
    },
    "euclideanDistance" : 43.025751179587196,
    "generation" : 44,
    "numberOfRefactorings" : 43,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6246231155778892,
      "LackOfCohesion" : 0.49029217610632053,
      "MetricsIntensity" : 0.03281274078425437,
      "Density" : 3.1017675415104446
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "6e49f213-7f99-4e80-aca8-b4125355e9f5",
    "objectives" : {
      "NumberOfConcerns" : 0.9938442597722376,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.48800991701738083,
      "MetricsIntensity" : 0.03295729834804537,
      "Density" : 0.9921219386881315
    },
    "euclideanDistance" : 44.025120922224964,
    "generation" : 50,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6250629089079014,
      "LackOfCohesion" : 0.48800991701738083,
      "MetricsIntensity" : 0.032957298348045366,
      "Density" : 3.1045016077170424
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "4d4cb7c6-0f81-4f83-9bec-955550361d41",
    "objectives" : {
      "NumberOfConcerns" : 0.9953831948291783,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.48596630551052045,
      "MetricsIntensity" : 0.03293004208994601,
      "Density" : 0.9938345607124508
    },
    "euclideanDistance" : 44.02517169161727,
    "generation" : 48,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6267605633802829,
      "LackOfCohesion" : 0.48596630551052045,
      "MetricsIntensity" : 0.032930042089946,
      "Density" : 3.1048689138576786
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "906d1b0c-a457-4d78-890e-0573e789bc76",
    "objectives" : {
      "NumberOfConcerns" : 0.9984610649430594,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.49021821560218837,
      "MetricsIntensity" : 0.03271685935618284,
      "Density" : 0.9948621339270423
    },
    "euclideanDistance" : 44.0253115770408,
    "generation" : 46,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6309703368526893,
      "LackOfCohesion" : 0.49021821560218837,
      "MetricsIntensity" : 0.032716859356182834,
      "Density" : 3.1080791867308726
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "e02918b7-a402-47d9-b26e-65d510638bf3",
    "objectives" : {
      "NumberOfConcerns" : 0.9944598337950139,
      "NumberOfRefactorings" : 45.0,
      "LackOfCohesion" : 0.4908577712268187,
      "MetricsIntensity" : 0.032866694919575445,
      "Density" : 0.9914368898784038
    },
    "euclideanDistance" : 45.024592380596324,
    "generation" : 50,
    "numberOfRefactorings" : 45,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6244343891402715,
      "LackOfCohesion" : 0.4908577712268187,
      "MetricsIntensity" : 0.032866694919575445,
      "Density" : 3.102357984994642
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "97ebc57e-21c1-4926-ac6f-0ad0de45730a",
    "objectives" : {
      "NumberOfConcerns" : 0.9978454909202832,
      "NumberOfRefactorings" : 45.0,
      "LackOfCohesion" : 0.49054989200964155,
      "MetricsIntensity" : 0.03273608066983857,
      "Density" : 0.9943483473197465
    },
    "euclideanDistance" : 45.02472804034574,
    "generation" : 51,
    "numberOfRefactorings" : 45,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.630784708249497,
      "LackOfCohesion" : 0.49054989200964155,
      "MetricsIntensity" : 0.03273608066983857,
      "Density" : 3.1081370449678807
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "0be8a9f0-2ab9-4960-9a65-6ee80405d0c3",
    "objectives" : {
      "NumberOfConcerns" : 0.9944598337950139,
      "NumberOfRefactorings" : 46.0,
      "LackOfCohesion" : 0.4862350704228779,
      "MetricsIntensity" : 0.03293515463290605,
      "Density" : 0.9936632985100189
    },
    "euclideanDistance" : 46.02405703955223,
    "generation" : 45,
    "numberOfRefactorings" : 46,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6260694514343235,
      "LackOfCohesion" : 0.4862350704228779,
      "MetricsIntensity" : 0.03293515463290605,
      "Density" : 3.1059957173447534
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "cac002fc-19ea-4c24-b447-55f81ea76ed0",
    "objectives" : {
      "NumberOfConcerns" : 0.9941520467836257,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.49218569424827124,
      "MetricsIntensity" : 0.032863675965413564,
      "Density" : 0.99109436547354
    },
    "euclideanDistance" : 47.02354658160333,
    "generation" : 33,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6247484909456742,
      "LackOfCohesion" : 0.49218569424827124,
      "MetricsIntensity" : 0.032863675965413564,
      "Density" : 3.102949061662198
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "ae6215fd-3aff-445d-9e4f-2a04a79bbc02",
    "objectives" : {
      "NumberOfConcerns" : 0.9950754078177901,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.49024074983985044,
      "MetricsIntensity" : 0.032945477558340534,
      "Density" : 0.9914368898784038
    },
    "euclideanDistance" : 47.023553072594915,
    "generation" : 45,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.625439919557567,
      "LackOfCohesion" : 0.49024074983985044,
      "MetricsIntensity" : 0.032945477558340534,
      "Density" : 3.104021447721179
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "999d979f-1ac4-43b6-9666-8ba31640875b",
    "objectives" : {
      "NumberOfConcerns" : 0.994767620806402,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.4904553867909282,
      "MetricsIntensity" : 0.0328028281434137,
      "Density" : 0.9921219386881315
    },
    "euclideanDistance" : 47.02356314734771,
    "generation" : 52,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6249371543489184,
      "LackOfCohesion" : 0.4904553867909282,
      "MetricsIntensity" : 0.0328028281434137,
      "Density" : 3.104501607717043
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "cb832b4d-01c8-420c-b5b0-3494040f61c2",
    "objectives" : {
      "NumberOfConcerns" : 0.9938442597722376,
      "NumberOfRefactorings" : 48.0,
      "LackOfCohesion" : 0.48973061043355104,
      "MetricsIntensity" : 0.03283027497820619,
      "Density" : 0.9921219386881315
    },
    "euclideanDistance" : 48.023045990978744,
    "generation" : 46,
    "numberOfRefactorings" : 48,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6242454728370224,
      "LackOfCohesion" : 0.48973061043355104,
      "MetricsIntensity" : 0.03283027497820619,
      "Density" : 3.1061662198391424
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "0b1a9a3f-5e6a-4cc2-b3f1-bf0a48a5a276",
    "objectives" : {
      "NumberOfConcerns" : 0.994767620806402,
      "NumberOfRefactorings" : 48.0,
      "LackOfCohesion" : 0.48760173936169776,
      "MetricsIntensity" : 0.032926236579005334,
      "Density" : 0.9922932008905635
    },
    "euclideanDistance" : 48.02304705044467,
    "generation" : 46,
    "numberOfRefactorings" : 48,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6257545271629774,
      "LackOfCohesion" : 0.48760173936169776,
      "MetricsIntensity" : 0.032926236579005334,
      "Density" : 3.106702412868633
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "edfd1c92-95b6-41ad-8850-e060bf9d184b",
    "objectives" : {
      "NumberOfConcerns" : 0.9935364727608494,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.49083374512574485,
      "MetricsIntensity" : 0.0328650769967813,
      "Density" : 0.9917794142832677
    },
    "euclideanDistance" : 50.022122496031116,
    "generation" : 52,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6237424547283703,
      "LackOfCohesion" : 0.49083374512574485,
      "MetricsIntensity" : 0.0328650769967813,
      "Density" : 3.10675965665236
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "11e74d1a-e77e-4411-b097-413488182912",
    "objectives" : {
      "NumberOfConcerns" : 0.9987688519544475,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.48666252608046134,
      "MetricsIntensity" : 0.03274875401647107,
      "Density" : 0.9958897071416338
    },
    "euclideanDistance" : 50.022267525809,
    "generation" : 44,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6314731020613376,
      "LackOfCohesion" : 0.48666252608046134,
      "MetricsIntensity" : 0.03274875401647107,
      "Density" : 3.1129550321199146
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "3993db77-b18e-45c6-b235-20b448b0b0d0",
    "objectives" : {
      "NumberOfConcerns" : 0.9944598337950139,
      "NumberOfRefactorings" : 51.0,
      "LackOfCohesion" : 0.4893574574439461,
      "MetricsIntensity" : 0.03292824103858227,
      "Density" : 0.9912656276759719
    },
    "euclideanDistance" : 51.021682772090706,
    "generation" : 43,
    "numberOfRefactorings" : 51,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6252515090543258,
      "LackOfCohesion" : 0.4893574574439461,
      "MetricsIntensity" : 0.03292824103858228,
      "Density" : 3.101822079314041
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "1c274510-8cdb-4c90-8205-57e2012a4c5d",
    "objectives" : {
      "NumberOfConcerns" : 0.9941520467836257,
      "NumberOfRefactorings" : 53.0,
      "LackOfCohesion" : 0.4883920518251669,
      "MetricsIntensity" : 0.03297754055765586,
      "Density" : 0.9919506764856996
    },
    "euclideanDistance" : 53.02086305173815,
    "generation" : 45,
    "numberOfRefactorings" : 53,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6255661801711119,
      "LackOfCohesion" : 0.4883920518251669,
      "MetricsIntensity" : 0.03297754055765586,
      "Density" : 3.105630026809652
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.scm.ChangeLogSet.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "1a16648c-3b77-4727-9283-d4e25c2347ac",
    "objectives" : {
      "NumberOfConcerns" : 0.9935364727608494,
      "NumberOfRefactorings" : 54.0,
      "LackOfCohesion" : 0.491191502522799,
      "MetricsIntensity" : 0.03287611572579596,
      "Density" : 0.9914368898784038
    },
    "euclideanDistance" : 54.02048140992871,
    "generation" : 51,
    "numberOfRefactorings" : 54,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6245596376446905,
      "LackOfCohesion" : 0.491191502522799,
      "MetricsIntensity" : 0.03287611572579596,
      "Density" : 3.105686695278967
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    } ]
  }, {
    "solutionId" : "7dbde28c-dc42-4c79-b1e5-41a7b47829ca",
    "objectives" : {
      "NumberOfConcerns" : 0.9932286857494613,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.4907318373993453,
      "MetricsIntensity" : 0.03296806976726341,
      "Density" : 0.9907518410686762
    },
    "euclideanDistance" : 55.02008721424056,
    "generation" : 44,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.624056366381479,
      "LackOfCohesion" : 0.4907318373993453,
      "MetricsIntensity" : 0.03296806976726341,
      "Density" : 3.103540772532189
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "de18366b-769e-40e7-ba42-ac80274c6820",
    "objectives" : {
      "NumberOfConcerns" : 0.9935364727608494,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.48894449057888606,
      "MetricsIntensity" : 0.03299184278540148,
      "Density" : 0.9916081520808357
    },
    "euclideanDistance" : 55.02009229932768,
    "generation" : 44,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6245596376446905,
      "LackOfCohesion" : 0.48894449057888606,
      "MetricsIntensity" : 0.03299184278540148,
      "Density" : 3.10455764075067
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.HistoricalSecrets.MAGIC], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.scm.ChangeLogSet.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "2ca70675-4525-4b8c-8c9f-de2331ea3ec7",
    "objectives" : {
      "NumberOfConcerns" : 0.9938442597722376,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.4917890288131834,
      "MetricsIntensity" : 0.03296018732875165,
      "Density" : 0.9905805788662442
    },
    "euclideanDistance" : 55.02010468109561,
    "generation" : 19,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6250629089079018,
      "LackOfCohesion" : 0.4917890288131834,
      "MetricsIntensity" : 0.032960187328751646,
      "Density" : 3.103004291845493
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "7c9eced0-7052-4f84-bedb-ce07ee0f5399",
    "objectives" : {
      "NumberOfConcerns" : 0.9941520467836257,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.4923254307356727,
      "MetricsIntensity" : 0.03294253624515662,
      "Density" : 0.9905805788662442
    },
    "euclideanDistance" : 55.020115028194866,
    "generation" : 52,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6247484909456742,
      "LackOfCohesion" : 0.4923254307356727,
      "MetricsIntensity" : 0.03294253624515662,
      "Density" : 3.103004291845493
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "3ac1e020-3533-4474-a6a1-332b51fc413b",
    "objectives" : {
      "NumberOfConcerns" : 0.9953831948291783,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.48808491396532205,
      "MetricsIntensity" : 0.03287116493436742,
      "Density" : 0.993149511902723
    },
    "euclideanDistance" : 55.020145774563936,
    "generation" : 52,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6259426847662137,
      "LackOfCohesion" : 0.48808491396532205,
      "MetricsIntensity" : 0.03287116493436742,
      "Density" : 3.1093833780160858
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "9ebe770d-6b16-40b5-b27f-45914941d117",
    "objectives" : {
      "NumberOfConcerns" : 0.9935364727608494,
      "NumberOfRefactorings" : 56.0,
      "LackOfCohesion" : 0.4898519897640849,
      "MetricsIntensity" : 0.03293782836678162,
      "Density" : 0.99109436547354
    },
    "euclideanDistance" : 56.01973243988579,
    "generation" : 44,
    "numberOfRefactorings" : 56,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6253776435045306,
      "LackOfCohesion" : 0.4898519897640849,
      "MetricsIntensity" : 0.03293782836678163,
      "Density" : 3.104613733905579
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "459a3cb5-328d-43d9-b3fc-c50ea5e061ac",
    "objectives" : {
      "NumberOfConcerns" : 0.9984610649430594,
      "NumberOfRefactorings" : 57.0,
      "LackOfCohesion" : 0.4882552710264904,
      "MetricsIntensity" : 0.03275085604175063,
      "Density" : 0.9950333961294743
    },
    "euclideanDistance" : 57.019527197144285,
    "generation" : 49,
    "numberOfRefactorings" : 57,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.63097033685269,
      "LackOfCohesion" : 0.4882552710264904,
      "MetricsIntensity" : 0.03275085604175063,
      "Density" : 3.1086142322097374
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "888590f9-ff59-4193-8982-ab46672b9e22",
    "objectives" : {
      "NumberOfConcerns" : 0.9926131117266851,
      "NumberOfRefactorings" : 58.0,
      "LackOfCohesion" : 0.48989856754159594,
      "MetricsIntensity" : 0.032980624220073466,
      "Density" : 0.9909231032711081
    },
    "euclideanDistance" : 58.019033926067934,
    "generation" : 49,
    "numberOfRefactorings" : 58,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6238670694864044,
      "LackOfCohesion" : 0.48989856754159594,
      "MetricsIntensity" : 0.03298062422007346,
      "Density" : 3.1057434245840043
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "753d1657-2210-4280-89ef-e12d2447c492",
    "objectives" : {
      "NumberOfConcerns" : 0.9932286857494613,
      "NumberOfRefactorings" : 59.0,
      "LackOfCohesion" : 0.48850003096182393,
      "MetricsIntensity" : 0.03298268215142248,
      "Density" : 0.9919506764856996
    },
    "euclideanDistance" : 59.01872744734799,
    "generation" : 49,
    "numberOfRefactorings" : 59,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6248741188318223,
      "LackOfCohesion" : 0.48850003096182393,
      "MetricsIntensity" : 0.03298268215142248,
      "Density" : 3.107296137339056
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.scm.ChangeLogSet.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "e8e5982f-d720-4509-967a-b9c0801eb183",
    "objectives" : {
      "NumberOfConcerns" : 0.9929208987380732,
      "NumberOfRefactorings" : 60.0,
      "LackOfCohesion" : 0.4886319408949486,
      "MetricsIntensity" : 0.032945887870223685,
      "Density" : 0.9914368898784038
    },
    "euclideanDistance" : 60.01840289130453,
    "generation" : 42,
    "numberOfRefactorings" : 60,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.624370594159113,
      "LackOfCohesion" : 0.4886319408949486,
      "MetricsIntensity" : 0.03294588787022369,
      "Density" : 3.105686695278971
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "aaa1353e-a507-48f3-90ab-50dd5952fcc5",
    "objectives" : {
      "NumberOfConcerns" : 0.9984610649430594,
      "NumberOfRefactorings" : 63.0,
      "LackOfCohesion" : 0.48875555542450017,
      "MetricsIntensity" : 0.032735050359619884,
      "Density" : 0.9952046583319062
    },
    "euclideanDistance" : 63.01767458726681,
    "generation" : 51,
    "numberOfRefactorings" : 63,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6301507537688436,
      "LackOfCohesion" : 0.48875555542450017,
      "MetricsIntensity" : 0.032735050359619884,
      "Density" : 3.114147909967845
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.getApi(), hudson.model.View.People.toList(Map<User,UserInfo>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "3a1ca6b3-edc2-4add-88a7-4b5831d0b452",
    "objectives" : {
      "NumberOfConcerns" : 0.9978454909202832,
      "NumberOfRefactorings" : 64.0,
      "LackOfCohesion" : 0.4890862426717635,
      "MetricsIntensity" : 0.03275427110529865,
      "Density" : 0.9946908717246103
    },
    "euclideanDistance" : 64.01738344972472,
    "generation" : 43,
    "numberOfRefactorings" : 64,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6299648064353947,
      "LackOfCohesion" : 0.4890862426717635,
      "MetricsIntensity" : 0.032754271105298646,
      "Density" : 3.1142091152815015
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "fb411e3a-30c3-4b1e-a165-c839a53b1c75",
    "objectives" : {
      "NumberOfConcerns" : 0.9950754078177901,
      "NumberOfRefactorings" : 66.0,
      "LackOfCohesion" : 0.4922679839908508,
      "MetricsIntensity" : 0.03282176721026047,
      "Density" : 0.9914368898784038
    },
    "euclideanDistance" : 66.01678973723519,
    "generation" : 45,
    "numberOfRefactorings" : 66,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6254399195575668,
      "LackOfCohesion" : 0.4922679839908508,
      "MetricsIntensity" : 0.032821767210260464,
      "Density" : 3.1073537305421395
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "5c5770fd-a78c-48e9-8f81-51feff738c70",
    "objectives" : {
      "NumberOfConcerns" : 0.994767620806402,
      "NumberOfRefactorings" : 67.0,
      "LackOfCohesion" : 0.4894061040479346,
      "MetricsIntensity" : 0.03284028923689424,
      "Density" : 0.9922932008905635
    },
    "euclideanDistance" : 67.01652635906471,
    "generation" : 45,
    "numberOfRefactorings" : 67,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6249371543489193,
      "LackOfCohesion" : 0.4894061040479346,
      "MetricsIntensity" : 0.03284028923689424,
      "Density" : 3.11003757380569
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "064b7ba5-782b-4dbc-99c5-629c2b6f98ae",
    "objectives" : {
      "NumberOfConcerns" : 0.994767620806402,
      "NumberOfRefactorings" : 68.0,
      "LackOfCohesion" : 0.4926676439063764,
      "MetricsIntensity" : 0.03286122135413232,
      "Density" : 0.9914368898784038
    },
    "euclideanDistance" : 68.01629445208874,
    "generation" : 51,
    "numberOfRefactorings" : 68,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.624937154348919,
      "LackOfCohesion" : 0.4926676439063764,
      "MetricsIntensity" : 0.03286122135413232,
      "Density" : 3.109022556390978
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "285c41f7-395c-44e8-9018-3ff2fc90e915",
    "objectives" : {
      "NumberOfConcerns" : 0.9969221298861188,
      "NumberOfRefactorings" : 69.0,
      "LackOfCohesion" : 0.49111232277299516,
      "MetricsIntensity" : 0.032761924798356254,
      "Density" : 0.9938345607124508
    },
    "euclideanDistance" : 69.01611279639283,
    "generation" : 52,
    "numberOfRefactorings" : 69,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6292756539235413,
      "LackOfCohesion" : 0.49111232277299516,
      "MetricsIntensity" : 0.032761924798356254,
      "Density" : 3.1115281501340477
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "b49b05d0-9f24-49ae-b8d2-d44ac5c9e414",
    "objectives" : {
      "NumberOfConcerns" : 0.9975377039088951,
      "NumberOfRefactorings" : 69.0,
      "LackOfCohesion" : 0.49244884861270743,
      "MetricsIntensity" : 0.03276241565051321,
      "Density" : 0.993149511902723
    },
    "euclideanDistance" : 69.0161213534062,
    "generation" : 40,
    "numberOfRefactorings" : 69,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6294620412267469,
      "LackOfCohesion" : 0.49244884861270743,
      "MetricsIntensity" : 0.03276241565051321,
      "Density" : 3.107717041800643
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.HistoricalSecrets.MAGIC], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "d4fdb0f8-2fa1-4bcc-9294-4ebf8a57fa1b",
    "objectives" : {
      "NumberOfConcerns" : 0.9969221298861188,
      "NumberOfRefactorings" : 70.0,
      "LackOfCohesion" : 0.48865638026435826,
      "MetricsIntensity" : 0.03277737186136419,
      "Density" : 0.9950333961294743
    },
    "euclideanDistance" : 70.0158825168015,
    "generation" : 47,
    "numberOfRefactorings" : 70,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6300956215400102,
      "LackOfCohesion" : 0.48865638026435826,
      "MetricsIntensity" : 0.03277737186136419,
      "Density" : 3.116952789699571
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "56b3bf6c-e762-494b-9b93-f601f2c579df",
    "objectives" : {
      "NumberOfConcerns" : 0.9944598337950139,
      "NumberOfRefactorings" : 71.0,
      "LackOfCohesion" : 0.4887062931481785,
      "MetricsIntensity" : 0.03285787418806141,
      "Density" : 0.9924644630929954
    },
    "euclideanDistance" : 71.01558877846746,
    "generation" : 44,
    "numberOfRefactorings" : 71,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6252515090543265,
      "LackOfCohesion" : 0.4887062931481785,
      "MetricsIntensity" : 0.03285787418806141,
      "Density" : 3.1105743424584005
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "d49247e7-0c2d-4cf9-864a-63d142f45def",
    "objectives" : {
      "NumberOfConcerns" : 0.9963065558633426,
      "NumberOfRefactorings" : 72.0,
      "LackOfCohesion" : 0.490799645771559,
      "MetricsIntensity" : 0.03278323598379496,
      "Density" : 0.9934920363075869
    },
    "euclideanDistance" : 72.01542621003026,
    "generation" : 39,
    "numberOfRefactorings" : 72,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6299093655589123,
      "LackOfCohesion" : 0.490799645771559,
      "MetricsIntensity" : 0.03278323598379496,
      "Density" : 3.112124463519313
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "58676ff7-645f-43c5-b77a-2e1292ae325d",
    "objectives" : {
      "NumberOfConcerns" : 0.9938442597722376,
      "NumberOfRefactorings" : 73.0,
      "LackOfCohesion" : 0.49032874025167494,
      "MetricsIntensity" : 0.03285481242108702,
      "Density" : 0.9914368898784038
    },
    "euclideanDistance" : 73.01515031301045,
    "generation" : 51,
    "numberOfRefactorings" : 73,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6242454728370226,
      "LackOfCohesion" : 0.49032874025167494,
      "MetricsIntensity" : 0.032854812421087023,
      "Density" : 3.107353730542136
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "3d099b33-037d-4b66-b4b1-6de45a9c123d",
    "objectives" : {
      "NumberOfConcerns" : 0.9966143428747307,
      "NumberOfRefactorings" : 73.0,
      "LackOfCohesion" : 0.4904130672859459,
      "MetricsIntensity" : 0.03277947620675994,
      "Density" : 0.9940058229148827
    },
    "euclideanDistance" : 73.0152235304052,
    "generation" : 45,
    "numberOfRefactorings" : 73,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6295923502767997,
      "LackOfCohesion" : 0.4904130672859459,
      "MetricsIntensity" : 0.03277947620675994,
      "Density" : 3.112064343163539
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "e76dd130-31f9-4a7b-b94f-46b89581a341",
    "objectives" : {
      "NumberOfConcerns" : 0.9935364727608494,
      "NumberOfRefactorings" : 74.0,
      "LackOfCohesion" : 0.49305637619493087,
      "MetricsIntensity" : 0.03289337031309588,
      "Density" : 0.9905805788662442
    },
    "euclideanDistance" : 74.01494816028618,
    "generation" : 42,
    "numberOfRefactorings" : 74,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6245596376446905,
      "LackOfCohesion" : 0.49305637619493087,
      "MetricsIntensity" : 0.03289337031309588,
      "Density" : 3.106337271750807
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "32ee1cec-d7dd-4a73-b1a2-9a3978f7f39c",
    "objectives" : {
      "NumberOfConcerns" : 0.9938442597722376,
      "NumberOfRefactorings" : 74.0,
      "LackOfCohesion" : 0.49359207908411484,
      "MetricsIntensity" : 0.032875756083894425,
      "Density" : 0.9905805788662442
    },
    "euclideanDistance" : 74.01495585523092,
    "generation" : 48,
    "numberOfRefactorings" : 74,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6242454728370224,
      "LackOfCohesion" : 0.49359207908411484,
      "MetricsIntensity" : 0.032875756083894425,
      "Density" : 3.1063372717508053
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "2a910d4f-e4d2-45b7-bfac-cbecd7afc8b2",
    "objectives" : {
      "NumberOfConcerns" : 0.9935364727608494,
      "NumberOfRefactorings" : 75.0,
      "LackOfCohesion" : 0.49165710416277786,
      "MetricsIntensity" : 0.03285176827620808,
      "Density" : 0.99109436547354
    },
    "euclideanDistance" : 75.01474647501472,
    "generation" : 51,
    "numberOfRefactorings" : 75,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6245596376446905,
      "LackOfCohesion" : 0.49165710416277786,
      "MetricsIntensity" : 0.03285176827620809,
      "Density" : 3.1079484425349087
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "57b594e9-bb1d-4c61-a4a1-dd0ec8863679",
    "objectives" : {
      "NumberOfConcerns" : 0.9959987688519545,
      "NumberOfRefactorings" : 76.0,
      "LackOfCohesion" : 0.4895796214093596,
      "MetricsIntensity" : 0.032791876342626446,
      "Density" : 0.9941770851173146
    },
    "euclideanDistance" : 76.01461152394965,
    "generation" : 46,
    "numberOfRefactorings" : 76,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6294058408862033,
      "LackOfCohesion" : 0.4895796214093596,
      "MetricsIntensity" : 0.032791876342626446,
      "Density" : 3.1142703862660945
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "3baccf65-04ac-4a98-aba6-69b7a8327a88",
    "objectives" : {
      "NumberOfConcerns" : 0.9926131117266851,
      "NumberOfRefactorings" : 77.0,
      "LackOfCohesion" : 0.4911666395316334,
      "MetricsIntensity" : 0.03291243782951765,
      "Density" : 0.9912656276759719
    },
    "euclideanDistance" : 77.01435071615248,
    "generation" : 53,
    "numberOfRefactorings" : 77,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6238670694864048,
      "LackOfCohesion" : 0.4911666395316334,
      "MetricsIntensity" : 0.03291243782951766,
      "Density" : 3.1101558301988184
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "679dd447-bead-4296-8fdd-eb402bad5258",
    "objectives" : {
      "NumberOfConcerns" : 0.9935364727608494,
      "NumberOfRefactorings" : 77.0,
      "LackOfCohesion" : 0.4896290523239406,
      "MetricsIntensity" : 0.03287241509197566,
      "Density" : 0.9916081520808357
    },
    "euclideanDistance" : 77.01435722418601,
    "generation" : 50,
    "numberOfRefactorings" : 77,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6245596376446905,
      "LackOfCohesion" : 0.4896290523239406,
      "MetricsIntensity" : 0.032872415091975665,
      "Density" : 3.107890499194847
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "16d36b7b-ebd3-44ed-ad05-6d8f3b9f3221",
    "objectives" : {
      "NumberOfConcerns" : 0.9932286857494613,
      "NumberOfRefactorings" : 77.0,
      "LackOfCohesion" : 0.4927608475881438,
      "MetricsIntensity" : 0.032888202511008865,
      "Density" : 0.9907518410686762
    },
    "euclideanDistance" : 77.01436221458668,
    "generation" : 50,
    "numberOfRefactorings" : 77,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6240563663814787,
      "LackOfCohesion" : 0.4927608475881438,
      "MetricsIntensity" : 0.032888202511008865,
      "Density" : 3.108543793659323
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "281c737a-cca9-4447-9e93-4ecbdac43214",
    "objectives" : {
      "NumberOfConcerns" : 0.9932286857494613,
      "NumberOfRefactorings" : 78.0,
      "LackOfCohesion" : 0.49183702549147457,
      "MetricsIntensity" : 0.03289997115861423,
      "Density" : 0.9912656276759719
    },
    "euclideanDistance" : 78.01417881920281,
    "generation" : 43,
    "numberOfRefactorings" : 78,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6240563663814795,
      "LackOfCohesion" : 0.49183702549147457,
      "MetricsIntensity" : 0.03289997115861423,
      "Density" : 3.1084854994629425
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "192982ce-007f-49b9-836f-fe96fd4d572e",
    "objectives" : {
      "NumberOfConcerns" : 0.9929208987380732,
      "NumberOfRefactorings" : 79.0,
      "LackOfCohesion" : 0.48990001294523516,
      "MetricsIntensity" : 0.03287758181654839,
      "Density" : 0.9917794142832677
    },
    "euclideanDistance" : 79.01398990859668,
    "generation" : 52,
    "numberOfRefactorings" : 79,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6243705941591138,
      "LackOfCohesion" : 0.48990001294523516,
      "MetricsIntensity" : 0.03287758181654839,
      "Density" : 3.1100966702470467
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "d1f54ba6-a218-4ab0-a2be-e49291e0dc65",
    "objectives" : {
      "NumberOfConcerns" : 0.9932286857494613,
      "NumberOfRefactorings" : 79.0,
      "LackOfCohesion" : 0.49073279574930684,
      "MetricsIntensity" : 0.03290884932677645,
      "Density" : 0.9912656276759719
    },
    "euclideanDistance" : 79.01399251041549,
    "generation" : 51,
    "numberOfRefactorings" : 79,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6240563663814787,
      "LackOfCohesion" : 0.49073279574930684,
      "MetricsIntensity" : 0.03290884932677644,
      "Density" : 3.1084854994629425
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  }, {
    "solutionId" : "b8526b8f-9302-4ee2-8aad-fa116e3d4b8a",
    "objectives" : {
      "NumberOfConcerns" : 0.9929208987380732,
      "NumberOfRefactorings" : 81.0,
      "LackOfCohesion" : 0.492062116269691,
      "MetricsIntensity" : 0.03290583333913708,
      "Density" : 0.9909231032711081
    },
    "euclideanDistance" : 81.0136471739662,
    "generation" : 50,
    "numberOfRefactorings" : 81,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6243705941591136,
      "LackOfCohesion" : 0.492062116269691,
      "MetricsIntensity" : 0.03290583333913708,
      "Density" : 3.1090811391724875
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Installing'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.cli.WhoAmICommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.FilePath.Delete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.util.TableNestChecker.InList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.tasks.Publisher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.util.StreamTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.util.RobustReflectionConverter.OwnerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.node_monitors.SwapSpaceMonitor.MonitorTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.cli.GetNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter.SetAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.views.DefaultMyViewsTabBar.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.AbstractItem.Replacer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.Touch'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.Touch'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.queue.AbstractSubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.Launcher.RemoteChannelLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.FilePath.Mkdirs'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.slaves.CloudSlaveRetentionStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.WorkspaceSnapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.View.AsynchPeople'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.View.AsynchPeople'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.providers.dao.AbstractUserDetailsAuthenticationProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.captcha.CaptchaSupportDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.plugins.DetachedPluginsUtil'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='jenkins.security.RSAConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FileChannelWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.util.ChunkedOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.Functions.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.springframework.dao.DataAccessException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='jenkins.model.TransientActionFactory.CacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.slaves.ConnectionActivityMonitor.PingCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.ResourceController'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.ResourceController'"
      } ]
    } ]
  } ]
}