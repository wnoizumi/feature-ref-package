{
  "executionId" : "c140bfc3-8f03-4f81-a465-c94ffa980b3a",
  "computingTime" : 24431,
  "maxEvaluations" : 1000,
  "initialPopulationSize" : 50,
  "finalPopulationSize" : 34,
  "algorithm" : "Baseline",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.1241305510968433,
    "meanNumConcerns" : 1.6359516616314205,
    "meanMetricsIntensity" : 0.03296937024300846,
    "meanLackOfCohesion" : 0.48535030050355504
  },
  "population" : [ {
    "solutionId" : "a37f4f20-2932-45c4-832c-b63fca23f756",
    "objectives" : {
      "NumberOfConcerns" : 1.0040012311480455,
      "NumberOfRefactorings" : 7.0,
      "LackOfCohesion" : 0.48673110265115144,
      "MetricsIntensity" : 0.03283692517383673,
      "Density" : 1.0013700976194553
    },
    "euclideanDistance" : 7.158822946162035,
    "generation" : 0,
    "numberOfRefactorings" : 7,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6367285499247362,
      "LackOfCohesion" : 0.48673110265115144,
      "MetricsIntensity" : 0.03283692517383673,
      "Density" : 3.116737739872068,
      "baselineType" : "EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.labels.LabelExpression.rhs, hudson.model.labels.LabelExpression.lhs], extractedMethods=[hudson.model.labels.LabelExpression.validate(String), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String), hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.description], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getChannel(), hudson.model.Node.toComputer(), hudson.model.Node.getClockDifference(), hudson.model.Node.getSelfLabel(), hudson.model.Node.getNodeName(), hudson.model.Node.getLabelCloud(), hudson.model.Node.getAssignedLabels(), hudson.model.Node.getLabelString(), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getNodeDescription(), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getNumExecutors(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.createComputer(), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.setLabelString(String), hudson.model.Node.createLauncher(TaskListener), hudson.model.Node.getDynamicLabels(), hudson.model.Node.setNodeName(String), hudson.model.Node.getRootPath(), hudson.model.Node.getNodePropertyDescriptors()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    } ]
  }, {
    "solutionId" : "01b6ce64-655b-431b-80b7-5e846986f4d3",
    "objectives" : {
      "NumberOfConcerns" : 1.0030778701138812,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48859820187938874,
      "MetricsIntensity" : 0.032730433272987344,
      "Density" : 1.0006850488097276
    },
    "euclideanDistance" : 10.11174244453277,
    "generation" : 0,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6327655310621243,
      "LackOfCohesion" : 0.48859820187938874,
      "MetricsIntensity" : 0.032730433272987344,
      "Density" : 3.1129461907298888,
      "baselineType" : "CONCERN_EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun(), hudson.model.AsyncAperiodicWork.execute(TaskListener)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.HistoricalSecrets.MAGIC], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners], extractedMethods=[hudson.model.Hudson.isWindows(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.getJob(String), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.getInstance(), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.isDarwin()]"
      } ]
    } ]
  }, {
    "solutionId" : "23f9930c-0837-433c-ac1c-dcb67ef2d6bf",
    "objectives" : {
      "NumberOfConcerns" : 1.0015389350569406,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4869387657902419,
      "MetricsIntensity" : 0.03281061205948279,
      "Density" : 0.9986299023805446
    },
    "euclideanDistance" : 12.092912296806613,
    "generation" : 0,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6327145007526345,
      "LackOfCohesion" : 0.4869387657902419,
      "MetricsIntensity" : 0.03281061205948279,
      "Density" : 3.1115261472785485,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.scm.ChangeLogSet.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.HistoricalSecrets.MAGIC], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners], extractedMethods=[hudson.model.Hudson.isWindows(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.getJob(String), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.getInstance(), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.isDarwin()]"
      } ]
    } ]
  }, {
    "solutionId" : "cfc82670-228e-45e8-b51b-f403387a9692",
    "objectives" : {
      "NumberOfConcerns" : 1.002462296091105,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.4887103282308236,
      "MetricsIntensity" : 0.032745976446056264,
      "Density" : 1.0008563110121595
    },
    "euclideanDistance" : 14.080005472096593,
    "generation" : 0,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6342197691921727,
      "LackOfCohesion" : 0.4887103282308236,
      "MetricsIntensity" : 0.032745976446056264,
      "Density" : 3.1167999999999996,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.View.PropertyList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.CloseProofOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.model.AbstractProject.AbstractProjectDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun(), hudson.model.AsyncAperiodicWork.execute(TaskListener)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.labels.LabelExpression.rhs, hudson.model.labels.LabelExpression.lhs], extractedMethods=[hudson.model.labels.LabelExpression.validate(String), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String), hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    } ]
  }, {
    "solutionId" : "c76e199f-5e72-42c2-b472-95c81e5185b8",
    "objectives" : {
      "NumberOfConcerns" : 1.0018467220683287,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48746639874804915,
      "MetricsIntensity" : 0.032756183142602646,
      "Density" : 0.997773591368385
    },
    "euclideanDistance" : 17.065694988824617,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6332162568991475,
      "LackOfCohesion" : 0.48746639874804915,
      "MetricsIntensity" : 0.03275618314260264,
      "Density" : 3.108858057630736,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.View.PropertyList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.CloseProofOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.cli.SetBuildDescriptionCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='hudson.util.DaemonThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.listeners.SCMPollListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.listeners.SCMPollListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.mvn.GlobalMavenConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.mvn.GlobalMavenConfig'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners], extractedMethods=[hudson.model.Hudson.isWindows(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.getJob(String), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.getInstance(), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.isDarwin()]"
      } ]
    } ]
  }, {
    "solutionId" : "28c34958-c5c4-4281-b655-e526d3e8b1c7",
    "objectives" : {
      "NumberOfConcerns" : 1.0015389350569406,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.48812466068971044,
      "MetricsIntensity" : 0.032714166127591225,
      "Density" : 0.9965747559513616
    },
    "euclideanDistance" : 18.061992619411445,
    "generation" : 0,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6327145007526345,
      "LackOfCohesion" : 0.48812466068971044,
      "MetricsIntensity" : 0.032714166127591225,
      "Density" : 3.103466666666667,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='jenkins.security.AuthenticationSuccessHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='jenkins.model.RunIdMigrator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Queue.BuildableItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='jenkins.model.BackgroundGlobalBuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.BackgroundGlobalBuildDiscarder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    } ]
  }, {
    "solutionId" : "1bad9da0-dad4-4eb5-b63e-8a7f215e293b",
    "objectives" : {
      "NumberOfConcerns" : 1.0030778701138812,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4868402931670424,
      "MetricsIntensity" : 0.03284895549592579,
      "Density" : 0.9984586401781127
    },
    "euclideanDistance" : 19.058887097482547,
    "generation" : 0,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6344032096288874,
      "LackOfCohesion" : 0.4868402931670424,
      "MetricsIntensity" : 0.03284895549592579,
      "Density" : 3.109333333333334,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.View.PropertyList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.CloseProofOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.HistoricalSecrets.MAGIC], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners], extractedMethods=[hudson.model.Hudson.isWindows(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.getJob(String), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.getInstance(), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.isDarwin()]"
      } ]
    } ]
  }, {
    "solutionId" : "7bb9d50d-a413-4d8c-bd40-fb8b33ebdc94",
    "objectives" : {
      "NumberOfConcerns" : 1.0030778701138812,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48722339274795445,
      "MetricsIntensity" : 0.03286679327542464,
      "Density" : 1.0006850488097276
    },
    "euclideanDistance" : 19.059013684893678,
    "generation" : 0,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6368658965344047,
      "LackOfCohesion" : 0.48722339274795445,
      "MetricsIntensity" : 0.03286679327542465,
      "Density" : 3.1179295624332983,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.scm.ChangeLogSet.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.model.AbstractProject.AbstractProjectDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun(), hudson.model.AsyncAperiodicWork.execute(TaskListener)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.cli.SetBuildDescriptionCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.util.VariableResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.description], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getChannel(), hudson.model.Node.toComputer(), hudson.model.Node.getClockDifference(), hudson.model.Node.getSelfLabel(), hudson.model.Node.getNodeName(), hudson.model.Node.getLabelCloud(), hudson.model.Node.getAssignedLabels(), hudson.model.Node.getLabelString(), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getNodeDescription(), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getNumExecutors(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.createComputer(), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.setLabelString(String), hudson.model.Node.createLauncher(TaskListener), hudson.model.Node.getDynamicLabels(), hudson.model.Node.setNodeName(String), hudson.model.Node.getRootPath(), hudson.model.Node.getNodePropertyDescriptors()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    } ]
  }, {
    "solutionId" : "c6af0029-b4c7-43aa-bbdd-00850ba652f8",
    "objectives" : {
      "NumberOfConcerns" : 1.0033856571252693,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4884906082175772,
      "MetricsIntensity" : 0.032841721908934675,
      "Density" : 1.0008563110121595
    },
    "euclideanDistance" : 19.059071272893448,
    "generation" : 0,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.634904714142427,
      "LackOfCohesion" : 0.4884906082175772,
      "MetricsIntensity" : 0.032841721908934675,
      "Density" : 3.115138592750533,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.View.PropertyList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.CloseProofOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun(), hudson.model.AsyncAperiodicWork.execute(TaskListener)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.HistoricalSecrets.MAGIC], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    } ]
  }, {
    "solutionId" : "39df0ea3-0e3d-4d61-9950-ae8e2ff229fa",
    "objectives" : {
      "NumberOfConcerns" : 1.0030778701138812,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4870668615626573,
      "MetricsIntensity" : 0.032852128066742904,
      "Density" : 0.9993149511902724
    },
    "euclideanDistance" : 23.048711655429585,
    "generation" : 0,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6352232814851984,
      "LackOfCohesion" : 0.4870668615626573,
      "MetricsIntensity" : 0.032852128066742904,
      "Density" : 3.111999999999999,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.model.AbstractProject.AbstractProjectDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun(), hudson.model.AsyncAperiodicWork.execute(TaskListener)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.cli.SetBuildDescriptionCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.labels.LabelExpression.rhs, hudson.model.labels.LabelExpression.lhs], extractedMethods=[hudson.model.labels.LabelExpression.validate(String), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String), hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners], extractedMethods=[hudson.model.Hudson.isWindows(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.getJob(String), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.getInstance(), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.isDarwin()]"
      } ]
    } ]
  }, {
    "solutionId" : "1ed9c9ca-14b4-444b-90a2-4566614912c5",
    "objectives" : {
      "NumberOfConcerns" : 1.0030778701138812,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.48693829738137245,
      "MetricsIntensity" : 0.0328346680093448,
      "Density" : 1.0018838842267512
    },
    "euclideanDistance" : 23.048820437320984,
    "generation" : 0,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6360441767068274,
      "LackOfCohesion" : 0.48693829738137245,
      "MetricsIntensity" : 0.0328346680093448,
      "Density" : 3.1199999999999997,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.model.AbstractProject.AbstractProjectDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun(), hudson.model.AsyncAperiodicWork.execute(TaskListener)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.util.VariableResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    } ]
  }, {
    "solutionId" : "6d49303b-5a15-448a-b1e1-ee777fa78267",
    "objectives" : {
      "NumberOfConcerns" : 1.0003077870113881,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48650274973480767,
      "MetricsIntensity" : 0.032813854317968495,
      "Density" : 0.9936632985100189
    },
    "euclideanDistance" : 24.0463249602532,
    "generation" : 0,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6315261044176708,
      "LackOfCohesion" : 0.48650274973480767,
      "MetricsIntensity" : 0.032813854317968495,
      "Density" : 3.096051227321237,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='org.springframework.dao.DataRetrievalFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.views.MyViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.views.MyViewsTabBarDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='jenkins.security.AuthenticationSuccessHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='jenkins.model.RunIdMigrator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.HistoricalSecrets.MAGIC], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='hudson.util.DaemonThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.listeners.SCMPollListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.listeners.SCMPollListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.mvn.GlobalMavenConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.mvn.GlobalMavenConfig'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Queue.BuildableItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='jenkins.model.BackgroundGlobalBuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.BackgroundGlobalBuildDiscarder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.description], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getChannel(), hudson.model.Node.toComputer(), hudson.model.Node.getClockDifference(), hudson.model.Node.getSelfLabel(), hudson.model.Node.getNodeName(), hudson.model.Node.getLabelCloud(), hudson.model.Node.getAssignedLabels(), hudson.model.Node.getLabelString(), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getNodeDescription(), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getNumExecutors(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.createComputer(), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.setLabelString(String), hudson.model.Node.createLauncher(TaskListener), hudson.model.Node.getDynamicLabels(), hudson.model.Node.setNodeName(String), hudson.model.Node.getRootPath(), hudson.model.Node.getNodePropertyDescriptors()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    } ]
  }, {
    "solutionId" : "f545bf0b-8e28-4fc5-87e8-d0e767f20db5",
    "objectives" : {
      "NumberOfConcerns" : 0.9993844259772238,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.4890755036372531,
      "MetricsIntensity" : 0.03272046047626111,
      "Density" : 0.9953759205343381
    },
    "euclideanDistance" : 26.042845618919166,
    "generation" : 0,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6292022077270452,
      "LackOfCohesion" : 0.4890755036372531,
      "MetricsIntensity" : 0.032720460476261114,
      "Density" : 3.1047008547008565,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='jenkins.security.AuthenticationSuccessHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='jenkins.model.RunIdMigrator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.model.Fingerprint.RangeItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.model.Fingerprint.RangeItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.CopyTo'"
      } ]
    } ]
  }, {
    "solutionId" : "7baf89d1-748a-4018-a959-d45aaae3a238",
    "objectives" : {
      "NumberOfConcerns" : 0.9996922129886119,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48542399385940044,
      "MetricsIntensity" : 0.03288393099406946,
      "Density" : 0.9982873779756808
    },
    "euclideanDistance" : 26.042900760408155,
    "generation" : 0,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6354481369587108,
      "LackOfCohesion" : 0.48542399385940044,
      "MetricsIntensity" : 0.03288393099406946,
      "Density" : 3.1187800963081864,
      "baselineType" : "MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.scm.ChangeLogSet.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.util.VariableResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    } ]
  }, {
    "solutionId" : "f35985c3-e780-4f1d-9e7f-879381134810",
    "objectives" : {
      "NumberOfConcerns" : 0.9990766389658357,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.48836083295382243,
      "MetricsIntensity" : 0.03281481403124021,
      "Density" : 0.9919506764856996
    },
    "euclideanDistance" : 29.038279793925312,
    "generation" : 0,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6303365143144148,
      "LackOfCohesion" : 0.48836083295382243,
      "MetricsIntensity" : 0.03281481403124021,
      "Density" : 3.0989834135901555,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='org.springframework.dao.DataRetrievalFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.views.MyViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.views.MyViewsTabBarDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.model.AbstractProject.AbstractProjectDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun(), hudson.model.AsyncAperiodicWork.execute(TaskListener)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='hudson.util.DaemonThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.listeners.SCMPollListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.listeners.SCMPollListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.mvn.GlobalMavenConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.mvn.GlobalMavenConfig'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.description], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getChannel(), hudson.model.Node.toComputer(), hudson.model.Node.getClockDifference(), hudson.model.Node.getSelfLabel(), hudson.model.Node.getNodeName(), hudson.model.Node.getLabelCloud(), hudson.model.Node.getAssignedLabels(), hudson.model.Node.getLabelString(), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getNodeDescription(), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getNumExecutors(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.createComputer(), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.setLabelString(String), hudson.model.Node.createLauncher(TaskListener), hudson.model.Node.getDynamicLabels(), hudson.model.Node.setNodeName(String), hudson.model.Node.getRootPath(), hudson.model.Node.getNodePropertyDescriptors()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.model.Fingerprint.RangeItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.model.Fingerprint.RangeItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.CopyTo'"
      } ]
    } ]
  }, {
    "solutionId" : "f52c5c29-2d68-47eb-8612-a33c66fde225",
    "objectives" : {
      "NumberOfConcerns" : 0.9987688519544475,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.48577263937208726,
      "MetricsIntensity" : 0.03280941952262583,
      "Density" : 0.9991436889878403
    },
    "euclideanDistance" : 30.037191593856615,
    "generation" : 0,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6322937625754526,
      "LackOfCohesion" : 0.48577263937208726,
      "MetricsIntensity" : 0.03280941952262583,
      "Density" : 3.1214553237025155,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='org.springframework.dao.DataRetrievalFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.views.MyViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.views.MyViewsTabBarDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.scm.ChangeLogSet.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.model.AbstractProject.AbstractProjectDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='jenkins.security.AuthenticationSuccessHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='jenkins.model.RunIdMigrator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.description], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getChannel(), hudson.model.Node.toComputer(), hudson.model.Node.getClockDifference(), hudson.model.Node.getSelfLabel(), hudson.model.Node.getNodeName(), hudson.model.Node.getLabelCloud(), hudson.model.Node.getAssignedLabels(), hudson.model.Node.getLabelString(), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getNodeDescription(), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getNumExecutors(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.createComputer(), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.setLabelString(String), hudson.model.Node.createLauncher(TaskListener), hudson.model.Node.getDynamicLabels(), hudson.model.Node.setNodeName(String), hudson.model.Node.getRootPath(), hudson.model.Node.getNodePropertyDescriptors()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    } ]
  }, {
    "solutionId" : "26584ec2-16c4-47b3-aac6-d5698722214b",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.4853558148256916,
      "MetricsIntensity" : 0.03292184176659924,
      "Density" : 0.997602329165953
    },
    "euclideanDistance" : 31.035976938414677,
    "generation" : 0,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6334841628959276,
      "LackOfCohesion" : 0.4853558148256916,
      "MetricsIntensity" : 0.03292184176659924,
      "Density" : 3.111645299145299,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.scm.ChangeLogSet.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.model.AbstractProject.AbstractProjectDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='jenkins.security.AuthenticationSuccessHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='jenkins.model.RunIdMigrator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.cli.SetBuildDescriptionCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Queue.BuildableItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='jenkins.model.BackgroundGlobalBuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.BackgroundGlobalBuildDiscarder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    } ]
  }, {
    "solutionId" : "9db30b7e-8e7a-4b76-9bae-de92220fcc40",
    "objectives" : {
      "NumberOfConcerns" : 1.002770083102493,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.4878706589308445,
      "MetricsIntensity" : 0.03277848779494763,
      "Density" : 1.0013700976194553
    },
    "euclideanDistance" : 32.03509609976346,
    "generation" : 0,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6363636363636367,
      "LackOfCohesion" : 0.4878706589308445,
      "MetricsIntensity" : 0.03277848779494763,
      "Density" : 3.120064034151548,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.model.AbstractProject.AbstractProjectDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun(), hudson.model.AsyncAperiodicWork.execute(TaskListener)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.cli.SetBuildDescriptionCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.util.VariableResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.labels.LabelExpression.rhs, hudson.model.labels.LabelExpression.lhs], extractedMethods=[hudson.model.labels.LabelExpression.validate(String), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String), hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    } ]
  }, {
    "solutionId" : "ce3d0b15-f2c3-48a9-a697-93f604a5505f",
    "objectives" : {
      "NumberOfConcerns" : 0.9993844259772238,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.4881802215644722,
      "MetricsIntensity" : 0.032768999340570884,
      "Density" : 0.9970885425586573
    },
    "euclideanDistance" : 33.033806146561915,
    "generation" : 0,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6308387744851829,
      "LackOfCohesion" : 0.4881802215644722,
      "MetricsIntensity" : 0.032768999340570884,
      "Density" : 3.1117049706039555,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun(), hudson.model.AsyncAperiodicWork.execute(TaskListener)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.util.ExceptionCatchingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.install.InstallUtil.ProviderChain'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='jenkins.install.InstallUtil.ProviderChain'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.util.RemotingDiagnostics.GetThreadDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.util.RemotingDiagnostics.GetThreadDump'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.description], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getChannel(), hudson.model.Node.toComputer(), hudson.model.Node.getClockDifference(), hudson.model.Node.getSelfLabel(), hudson.model.Node.getNodeName(), hudson.model.Node.getLabelCloud(), hudson.model.Node.getAssignedLabels(), hudson.model.Node.getLabelString(), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getNodeDescription(), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getNumExecutors(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.createComputer(), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.setLabelString(String), hudson.model.Node.createLauncher(TaskListener), hudson.model.Node.getDynamicLabels(), hudson.model.Node.setNodeName(String), hudson.model.Node.getRootPath(), hudson.model.Node.getNodePropertyDescriptors()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    } ]
  }, {
    "solutionId" : "a3ae6a33-013f-4394-bea3-d57757456d7f",
    "objectives" : {
      "NumberOfConcerns" : 0.9990766389658357,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.48801049966064114,
      "MetricsIntensity" : 0.03293848205433348,
      "Density" : 0.9964034937489296
    },
    "euclideanDistance" : 35.03184570136523,
    "generation" : 0,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6319758672699844,
      "LackOfCohesion" : 0.48801049966064114,
      "MetricsIntensity" : 0.03293848205433348,
      "Density" : 3.1128945960406633,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.scm.ChangeLogSet.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.model.AbstractProject.AbstractProjectDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun(), hudson.model.AsyncAperiodicWork.execute(TaskListener)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.cli.SetBuildDescriptionCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Queue.BuildableItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='jenkins.model.BackgroundGlobalBuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.BackgroundGlobalBuildDiscarder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.model.Fingerprint.RangeItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.model.Fingerprint.RangeItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.CopyTo'"
      } ]
    } ]
  }, {
    "solutionId" : "15cb6cfd-790f-4191-ad6d-363712ff5a42",
    "objectives" : {
      "NumberOfConcerns" : 0.9984610649430594,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.48909063408933956,
      "MetricsIntensity" : 0.03284694598763792,
      "Density" : 0.9981161157732489
    },
    "euclideanDistance" : 37.03016944126759,
    "generation" : 0,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6293319939728783,
      "LackOfCohesion" : 0.48909063408933956,
      "MetricsIntensity" : 0.03284694598763792,
      "Density" : 3.1165775401069515,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='org.springframework.dao.DataRetrievalFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.views.MyViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.views.MyViewsTabBarDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.model.AbstractProject.AbstractProjectDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='jenkins.security.AuthenticationSuccessHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='jenkins.model.RunIdMigrator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.cli.SetBuildDescriptionCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.util.ExceptionCatchingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.install.InstallUtil.ProviderChain'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='jenkins.install.InstallUtil.ProviderChain'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.util.RemotingDiagnostics.GetThreadDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.util.RemotingDiagnostics.GetThreadDump'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.labels.LabelExpression.rhs, hudson.model.labels.LabelExpression.lhs], extractedMethods=[hudson.model.labels.LabelExpression.validate(String), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String), hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.description], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getChannel(), hudson.model.Node.toComputer(), hudson.model.Node.getClockDifference(), hudson.model.Node.getSelfLabel(), hudson.model.Node.getNodeName(), hudson.model.Node.getLabelCloud(), hudson.model.Node.getAssignedLabels(), hudson.model.Node.getLabelString(), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getNodeDescription(), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getNumExecutors(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.createComputer(), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.setLabelString(String), hudson.model.Node.createLauncher(TaskListener), hudson.model.Node.getDynamicLabels(), hudson.model.Node.setNodeName(String), hudson.model.Node.getRootPath(), hudson.model.Node.getNodePropertyDescriptors()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    } ]
  }, {
    "solutionId" : "e224c5f2-a498-45d7-b8f4-7d3ae710762b",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.4864184177023613,
      "MetricsIntensity" : 0.03279718680737911,
      "Density" : 0.997773591368385
    },
    "euclideanDistance" : 42.026577670233564,
    "generation" : 0,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6310240963855427,
      "LackOfCohesion" : 0.4864184177023613,
      "MetricsIntensity" : 0.03279718680737911,
      "Density" : 3.1088580576307367,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.model.AbstractProject.AbstractProjectDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.HistoricalSecrets.MAGIC], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.security.ACLContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    } ]
  }, {
    "solutionId" : "42e7e7d5-34e8-4586-9721-97eda6efdf36",
    "objectives" : {
      "NumberOfConcerns" : 0.9996922129886119,
      "NumberOfRefactorings" : 43.0,
      "LackOfCohesion" : 0.48645514181723637,
      "MetricsIntensity" : 0.03282910517074073,
      "Density" : 1.004624079465662
    },
    "euclideanDistance" : 43.026112657511824,
    "generation" : 0,
    "numberOfRefactorings" : 43,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6305220883534137,
      "LackOfCohesion" : 0.48645514181723637,
      "MetricsIntensity" : 0.03282910517074073,
      "Density" : 3.131873998932195,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.scm.ChangeLogSet.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.HistoricalSecrets.MAGIC], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='hudson.util.DaemonThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.listeners.SCMPollListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.listeners.SCMPollListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.mvn.GlobalMavenConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.mvn.GlobalMavenConfig'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.getExpression()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.security.ACLContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners], extractedMethods=[hudson.model.Hudson.isWindows(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.getJob(String), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.getInstance(), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.isDarwin()]"
      } ]
    } ]
  }, {
    "solutionId" : "c7265003-f75a-4bb4-9fa0-bc3a5458593d",
    "objectives" : {
      "NumberOfConcerns" : 0.9993844259772238,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.48829774143532134,
      "MetricsIntensity" : 0.03279018712901334,
      "Density" : 0.9929782497002911
    },
    "euclideanDistance" : 44.0252687091848,
    "generation" : 0,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.630020080321285,
      "LackOfCohesion" : 0.48829774143532134,
      "MetricsIntensity" : 0.03279018712901334,
      "Density" : 3.093916755602987,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.View.PropertyList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.CloseProofOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='jenkins.security.AuthenticationSuccessHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='jenkins.model.RunIdMigrator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.HistoricalSecrets.MAGIC], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.getDefinition(), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.labels.LabelExpression.rhs, hudson.model.labels.LabelExpression.lhs], extractedMethods=[hudson.model.labels.LabelExpression.validate(String), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String), hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.security.ACLContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    } ]
  }, {
    "solutionId" : "00b5a302-11c7-4d40-b3b7-78dabd95ef56",
    "objectives" : {
      "NumberOfConcerns" : 0.9966143428747307,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.48788121723547906,
      "MetricsIntensity" : 0.03272664346571018,
      "Density" : 0.9904093166638123
    },
    "euclideanDistance" : 47.02353931679624,
    "generation" : 0,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6279537456008042,
      "LackOfCohesion" : 0.48788121723547906,
      "MetricsIntensity" : 0.03272664346571018,
      "Density" : 3.0941680042803643,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.View.PropertyList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.CloseProofOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.model.AbstractProject.AbstractProjectDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='jenkins.security.AuthenticationSuccessHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='jenkins.model.RunIdMigrator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.cli.SetBuildDescriptionCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.util.ExceptionCatchingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.install.InstallUtil.ProviderChain'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='jenkins.install.InstallUtil.ProviderChain'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.util.RemotingDiagnostics.GetThreadDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.util.RemotingDiagnostics.GetThreadDump'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='hudson.util.DaemonThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.listeners.SCMPollListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.listeners.SCMPollListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.mvn.GlobalMavenConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.mvn.GlobalMavenConfig'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Node.holdOffLaunchUntilSave, hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS, hudson.model.Node.temporaryOfflineCause, hudson.model.Node.LOGGER], extractedMethods=[hudson.model.Node.createPath(String), hudson.model.Node.getFileSystemProvisioner(), hudson.model.Node.getClockDifferenceCallable(), hudson.model.Node.getDisplayName(), hudson.model.Node.getNodeName(), hudson.model.Node.toComputer(), hudson.model.Node.setNodeName(String), hudson.model.Node.canTake(Queue.BuildableItem), hudson.model.Node.getACL(), hudson.model.Node.getChannel(), hudson.model.Node.getMode(), hudson.model.Node.getClockDifference(), hudson.model.Node.save(), hudson.model.Node.createComputer(), hudson.model.Node.setTemporaryOfflineCause(OfflineCause), hudson.model.Node.getWorkspaceFor(TopLevelItem), hudson.model.Node.isHoldOffLaunchUntilSave(), hudson.model.Node.getDescriptor(), hudson.model.Node.getRootPath(), hudson.model.Node.reconfigure(StaplerRequest, JSONObject), hudson.model.Node.getNodeDescription(), hudson.model.Node.getSearchUrl(), hudson.model.Node.getNumExecutors(), hudson.model.Node.isAcceptingTasks()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    } ]
  }, {
    "solutionId" : "f54bbd79-787e-4760-b8a5-07027eb26bbc",
    "objectives" : {
      "NumberOfConcerns" : 0.9963065558633426,
      "NumberOfRefactorings" : 48.0,
      "LackOfCohesion" : 0.48947049387313596,
      "MetricsIntensity" : 0.03291526736320977,
      "Density" : 0.9960609693440657
    },
    "euclideanDistance" : 48.023175956897155,
    "generation" : 0,
    "numberOfRefactorings" : 48,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6274509803921569,
      "LackOfCohesion" : 0.48947049387313596,
      "MetricsIntensity" : 0.03291526736320977,
      "Density" : 3.1184986595174258,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='org.springframework.dao.DataRetrievalFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.views.MyViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.views.MyViewsTabBarDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.View.PropertyList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.CloseProofOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.model.AbstractProject.AbstractProjectDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.util.ExceptionCatchingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.install.InstallUtil.ProviderChain'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='jenkins.install.InstallUtil.ProviderChain'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.util.RemotingDiagnostics.GetThreadDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.util.RemotingDiagnostics.GetThreadDump'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.model.AbstractCIBase'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSelfLabel()', targetType='hudson.model.labels.LabelAtom'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.model.Computer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getAssignedLabels()', targetType='hudson.model.Label'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Saveable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.FileSystemProvisioner'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDynamicLabels()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.model.Fingerprint.RangeItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.model.Fingerprint.RangeItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.CopyTo'"
      } ]
    } ]
  }, {
    "solutionId" : "410bb8d1-2367-40fc-ac77-a9838796d511",
    "objectives" : {
      "NumberOfConcerns" : 0.9990766389658357,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.48946837719594044,
      "MetricsIntensity" : 0.03278325288413643,
      "Density" : 0.9926357252954273
    },
    "euclideanDistance" : 50.02223639390391,
    "generation" : 0,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.629518072289157,
      "LackOfCohesion" : 0.48946837719594044,
      "MetricsIntensity" : 0.03278325288413643,
      "Density" : 3.0994652406417096,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.View.PropertyList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.CloseProofOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.AsyncAperiodicWork.getSlowLoggingLevel(), hudson.model.AsyncAperiodicWork.getNormalLoggingLevel(), hudson.model.AsyncAperiodicWork.execute(TaskListener), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.cli.SetBuildDescriptionCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.security.ACLContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.model.Fingerprint.RangeItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.model.Fingerprint.RangeItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.CopyTo'"
      } ]
    } ]
  }, {
    "solutionId" : "4c29a9af-d386-44e0-96c7-8f0edecdcc4c",
    "objectives" : {
      "NumberOfConcerns" : 0.9975377039088951,
      "NumberOfRefactorings" : 51.0,
      "LackOfCohesion" : 0.48934330903432965,
      "MetricsIntensity" : 0.03279699552992043,
      "Density" : 0.9940058229148827
    },
    "euclideanDistance" : 51.02179594608289,
    "generation" : 0,
    "numberOfRefactorings" : 51,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.628643216080402,
      "LackOfCohesion" : 0.48934330903432965,
      "MetricsIntensity" : 0.03279699552992043,
      "Density" : 3.1070663811563177,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.lastUseDate], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid(), jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.View.PropertyList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.CloseProofOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.model.AbstractProject.AbstractProjectDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncAperiodicWork.thread, hudson.model.AsyncAperiodicWork.name, hudson.model.AsyncAperiodicWork.lastRotateMillis], extractedMethods=[hudson.model.AsyncAperiodicWork.getLogFile(), hudson.model.AsyncAperiodicWork.createListener(), hudson.model.AsyncAperiodicWork.getErrorLoggingLevel(), hudson.model.AsyncAperiodicWork.doAperiodicRun(), hudson.model.AsyncAperiodicWork.execute(TaskListener)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.security.ACLContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='hudson.model.Fingerprint.RangeItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='hudson.model.Fingerprint.RangeItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.FilePath.CopyTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.FilePath.CopyTo'"
      } ]
    } ]
  }, {
    "solutionId" : "00977897-d8da-416b-b4d5-014bd05e5478",
    "objectives" : {
      "NumberOfConcerns" : 0.9990766389658357,
      "NumberOfRefactorings" : 53.0,
      "LackOfCohesion" : 0.4861228652998456,
      "MetricsIntensity" : 0.032687021212631694,
      "Density" : 0.9922932008905635
    },
    "euclideanDistance" : 53.02094099323949,
    "generation" : 0,
    "numberOfRefactorings" : 53,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6295180722891567,
      "LackOfCohesion" : 0.4861228652998456,
      "MetricsIntensity" : 0.032687021212631694,
      "Density" : 3.093432995194875,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.model.AbstractProject.AbstractProjectDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='jenkins.security.AuthenticationSuccessHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='jenkins.model.RunIdMigrator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.HistoricalSecrets.MAGIC], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.security.ACLContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    } ]
  }, {
    "solutionId" : "3a685fe8-3588-4221-9ce1-97cd2c94a4ad",
    "objectives" : {
      "NumberOfConcerns" : 0.9966143428747307,
      "NumberOfRefactorings" : 54.0,
      "LackOfCohesion" : 0.4862061301466722,
      "MetricsIntensity" : 0.03282348223526677,
      "Density" : 1.000171262202432
    },
    "euclideanDistance" : 54.020653980529865,
    "generation" : 0,
    "numberOfRefactorings" : 54,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.628772635814889,
      "LackOfCohesion" : 0.4862061301466722,
      "MetricsIntensity" : 0.03282348223526678,
      "Density" : 3.126338329764455,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='org.springframework.dao.DataRetrievalFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.views.MyViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.views.MyViewsTabBarDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.scm.ChangeLogSet.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.model.AbstractProject.AbstractProjectDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='jenkins.security.AuthenticationSuccessHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='jenkins.model.RunIdMigrator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='hudson.util.DaemonThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.listeners.SCMPollListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.listeners.SCMPollListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.mvn.GlobalMavenConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.mvn.GlobalMavenConfig'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Queue.BuildableItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='jenkins.model.BackgroundGlobalBuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.BackgroundGlobalBuildDiscarder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.security.ACLContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    } ]
  }, {
    "solutionId" : "f9e6d08e-5f5d-4190-8af6-e68b17b6c85d",
    "objectives" : {
      "NumberOfConcerns" : 0.9959987688519545,
      "NumberOfRefactorings" : 57.0,
      "LackOfCohesion" : 0.48805772593056473,
      "MetricsIntensity" : 0.032847807970989275,
      "Density" : 0.99109436547354
    },
    "euclideanDistance" : 57.01941389484074,
    "generation" : 0,
    "numberOfRefactorings" : 57,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6261306532663329,
      "LackOfCohesion" : 0.48805772593056473,
      "MetricsIntensity" : 0.032847807970989275,
      "Density" : 3.0979657387580306,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.tokenUuid, jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.COMP_BY_LAST_USE_THEN_COUNTER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.scm.ChangeLogSet.Entry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='jenkins.security.AuthenticationSuccessHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='jenkins.model.RunIdMigrator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.util.ExceptionCatchingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.install.InstallUtil.ProviderChain'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='jenkins.install.InstallUtil.ProviderChain'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.util.RemotingDiagnostics.GetThreadDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.util.RemotingDiagnostics.GetThreadDump'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AccountExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.security.ACLContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners], extractedMethods=[hudson.model.Hudson.isWindows(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.getJob(String), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.getInstance(), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.isDarwin()]"
      } ]
    } ]
  }, {
    "solutionId" : "a3b5e265-97aa-4cce-9f7b-7c75c1cc15b4",
    "objectives" : {
      "NumberOfConcerns" : 0.9959987688519545,
      "NumberOfRefactorings" : 60.0,
      "LackOfCohesion" : 0.4898098458645028,
      "MetricsIntensity" : 0.03280574172948369,
      "Density" : 0.993149511902723
    },
    "euclideanDistance" : 60.018491728819235,
    "generation" : 0,
    "numberOfRefactorings" : 60,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6261306532663324,
      "LackOfCohesion" : 0.4898098458645028,
      "MetricsIntensity" : 0.03280574172948369,
      "Density" : 3.104389721627409,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='org.springframework.dao.DataRetrievalFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.views.MyViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.views.MyViewsTabBarDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.View.PropertyList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.CloseProofOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.CLI.ClientSideImpl.exit, hudson.cli.CLI.ClientSideImpl.complete], extractedMethods=[hudson.cli.CLI.ClientSideImpl.exit(), hudson.cli.CLI.ClientSideImpl.onExit(int), hudson.cli.CLI.ClientSideImpl.finished()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='jenkins.security.AuthenticationSuccessHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='jenkins.model.RunIdMigrator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.cli.RunRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='CLIEndpoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='hudson.util.ExceptionCatchingThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tasks.BuildWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.install.InstallUtil.ProviderChain'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='jenkins.install.InstallUtil.ProviderChain'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.util.RemotingDiagnostics.GetThreadDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.util.RemotingDiagnostics.GetThreadDump'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.labels.LabelExpression.rhs, hudson.model.labels.LabelExpression.lhs], extractedMethods=[hudson.model.labels.LabelExpression.validate(String), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String), hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.security.ACLContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Hudson.itemListeners, hudson.model.Hudson.computerListeners], extractedMethods=[hudson.model.Hudson.getJobListeners(), hudson.model.Hudson.getComputerListeners(), hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse), hudson.model.Hudson.doFieldCheck(String, String, String, String), hudson.model.Hudson.getSlave(String), hudson.model.Hudson.doQuietDown(StaplerResponse), hudson.model.Hudson.getInstance(), hudson.model.Hudson.doLogRss(StaplerRequest, StaplerResponse), hudson.model.Hudson.getJob(String), hudson.model.Hudson.getJobCaseInsensitive(String), hudson.model.Hudson.getSlaves(), hudson.model.Hudson.setSlaves(List<Slave>), hudson.model.Hudson.isDarwin(), hudson.model.Hudson.isWindows()]"
      } ]
    } ]
  }, {
    "solutionId" : "117c0270-8050-477f-a7f7-93cffa57e097",
    "objectives" : {
      "NumberOfConcerns" : 0.9966143428747307,
      "NumberOfRefactorings" : 62.0,
      "LackOfCohesion" : 0.48681016743045064,
      "MetricsIntensity" : 0.03272562709395425,
      "Density" : 0.9998287377975681
    },
    "euclideanDistance" : 62.01798894481448,
    "generation" : 0,
    "numberOfRefactorings" : 62,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.628772635814889,
      "LackOfCohesion" : 0.48681016743045064,
      "MetricsIntensity" : 0.03272562709395425,
      "Density" : 3.125267665952891,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='org.springframework.dao.DataRetrievalFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.views.MyViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.views.MyViewsTabBarDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.model.View.PropertyList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.CloseProofOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.RemotingDiagnostics.HeapDump'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.model.AbstractProject.AbstractProjectDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='jenkins.security.AuthenticationSuccessHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.util.io.RewindableFileOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='jenkins.model.RunIdMigrator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='jenkins.model.RunIdMigrator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.security.csrf.CrumbIssuer.RestrictedApi'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.cli.SetBuildDescriptionCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParameterValue.LOGGER, hudson.model.ParameterValue.description], extractedMethods=[hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParameterValue.equals(Object), hudson.model.ParameterValue.getAssignedLabel(SubTask), hudson.model.ParameterValue.getDescription(), hudson.model.ParameterValue.isSensitive(), hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>), hudson.model.ParameterValue.getShortDescription(), hudson.model.ParameterValue.getValue(), hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars), hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParameterValue.setDescription(String), hudson.model.ParameterValue.getFormattedDescription(), hudson.model.ParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='hudson.util.DaemonThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.listeners.SCMPollListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.listeners.SCMPollListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.mvn.GlobalMavenConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.mvn.GlobalMavenConfig'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.labels.LabelExpression.rhs, hudson.model.labels.LabelExpression.lhs], extractedMethods=[hudson.model.labels.LabelExpression.validate(String), hudson.model.labels.LabelExpression.validate(String, Item), hudson.model.labels.LabelExpression.autoComplete(String), hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.util.Iterators.FlattenIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='hudson.security.ACLContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='hudson.security.csrf.CrumbFilter.Security1774ServletRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.queue.MappingWorksheet.Mapping'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobCaseInsensitive(String)', targetType='hudson.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.Platform'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(String, String, String, String)', targetType='hudson.util.FormValidation'"
      } ]
    } ]
  }, {
    "solutionId" : "0f23a517-be0c-4d3e-b720-f228e42cbb94",
    "objectives" : {
      "NumberOfConcerns" : 0.992305324715297,
      "NumberOfRefactorings" : 81.0,
      "LackOfCohesion" : 0.4892299083596152,
      "MetricsIntensity" : 0.03297709219401981,
      "Density" : 0.9957184449392019
    },
    "euclideanDistance" : 81.01368130427659,
    "generation" : 0,
    "numberOfRefactorings" : 81,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.6233635448136958,
      "LackOfCohesion" : 0.4892299083596152,
      "MetricsIntensity" : 0.03297709219401981,
      "Density" : 3.1224489795918364,
      "baselineType" : "CONCERN_MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats.SingleTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getTokenUuid()', targetType='org.springframework.dao.DataRetrievalFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getLastUseDate()', targetType='hudson.security.LegacySecurityRealm'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats.getNumDaysUse()', targetType='hudson.security.LegacySecurityRealm'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.ExtensionList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='jenkins.websocket.WebSockets'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLI.ClientSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.exit()', targetType='hudson.util.FormApply'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.onExit(int)', targetType='hudson.util.FormApply'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLI.ClientSideImpl.exit', targetTypeName='hudson.util.FormApply'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLI.ClientSideImpl.finished()', targetType='hudson.Functions.ThreadSorter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncAperiodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getLogFile()', targetType='hudson.FilePath.UrlFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.createListener()', targetType='hudson.util.IncompatibleServletVersionDetected'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.lastRotateMillis', targetTypeName='hudson.util.IncompatibleServletVersionDetected'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.getErrorLoggingLevel()', targetType='hudson.model.BuildVariableContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.doAperiodicRun()', targetType='hudson.model.BuildVariableContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncAperiodicWork.execute(TaskListener)', targetType='hudson.model.BuildVariableContributor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncAperiodicWork.thread', targetTypeName='hudson.model.BuildVariableContributor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.tryDecrypt(Cipher, byte[])', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.HistoricalSecrets.MAGIC', targetTypeName='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.slaves.OfflineCause.SimpleOfflineCause'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.equals(Object)', targetType='hudson.model.UpdateCenter.DownloadJob.SuccessButRequiresRestart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getFormattedDescription()', targetType='jenkins.model.RunIdMigrator.UnmigrationInstruction'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.ParameterValue.LOGGER', targetTypeName='jenkins.model.RunIdMigrator.UnmigrationInstruction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.hashCode()', targetType='hudson.tasks.BuildStepDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.isSensitive()', targetType='jenkins.security.LastGrantedAuthoritiesProperty.SecurityListenerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.model.Descriptor.FormException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getAssignedLabel(SubTask)', targetType='hudson.scm.NullSCM.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getShortDescription()', targetType='jenkins.model.item_category.NestedProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getValue()', targetType='jenkins.model.item_category.NestedProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.model.UserIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.createBuildWrapper(AbstractBuild<?,?>)', targetType='hudson.model.UserIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.setDescription(String)', targetType='hudson.model.queue.CauseOfBlockage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.getDescription()', targetType='hudson.model.queue.CauseOfBlockage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, Map<String,String>)', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParameterValue.buildEnvVars(AbstractBuild<?,?>, EnvVars)', targetType='hudson.console.ConsoleAnnotator'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='hudson.model.UpdateCenter.NoOpJob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.ShiftedCategoryAxis'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.util.ShiftedCategoryAxis'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.security.QueueItemAuthenticatorConfiguration.ProviderImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.security.QueueItemAuthenticatorConfiguration.ProviderImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.validate(String, Item)', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Node",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDescriptor()', targetType='hudson.util.jna.WinIOException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeDescription()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getMode()', targetType='hudson.model.LabelFinder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isHoldOffLaunchUntilSave()', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getFileSystemProvisioner()', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.holdOffLaunchUntilSave', targetTypeName='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getWorkspaceFor(TopLevelItem)', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifferenceCallable()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.toComputer()', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setNodeName(String)', targetType='jenkins.model.Jenkins.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createPath(String)', targetType='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getRootPath()', targetType='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getDisplayName()', targetType='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNodeName()', targetType='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getChannel()', targetType='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getClockDifference()', targetType='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.save()', targetType='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.setTemporaryOfflineCause(OfflineCause)', targetType='hudson.model.Run.ArtifactList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.reconfigure(StaplerRequest, JSONObject)', targetType='hudson.model.Run.ArtifactList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getSearchUrl()', targetType='hudson.model.Run.ArtifactList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.canTake(Queue.BuildableItem)', targetType='hudson.model.Run.ArtifactList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getNumExecutors()', targetType='hudson.model.Run.ArtifactList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.getACL()', targetType='hudson.model.Run.ArtifactList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.createComputer()', targetType='hudson.model.Run.ArtifactList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Node.isAcceptingTasks()', targetType='hudson.model.Run.ArtifactList'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.SKIP_BUILD_CHECK_ON_FLYWEIGHTS', targetTypeName='hudson.model.Run.ArtifactList'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.temporaryOfflineCause', targetTypeName='hudson.model.Run.ArtifactList'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Node.LOGGER', targetTypeName='hudson.model.Run.ArtifactList'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Hudson",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getInstance()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJobListeners()', targetType='jenkins.model.lazy.SortedIntList'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Hudson.itemListeners', targetTypeName='jenkins.model.lazy.SortedIntList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isWindows()', targetType='hudson.FilePath.CopyToWithPermission'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.isDarwin()', targetType='hudson.WebAppMain.FileAndDescription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlave(String)', targetType='jenkins.slaves.systemInfo.EnvVarsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.setSlaves(List<Slave>)', targetType='hudson.model.Queue.Snapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getJob(String)', targetType='hudson.model.Queue.Snapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.getSlaves()', targetType='hudson.model.Queue.Snapshot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doFieldCheck(StaplerRequest, StaplerResponse)', targetType='hudson.security.NoopFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Hudson.doQuietDown(StaplerResponse)', targetType='hudson.security.NoopFilter'"
      } ]
    } ]
  } ]
}