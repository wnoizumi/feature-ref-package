{
  "executionId" : "ce151271-3b87-4424-9105-4aaa70a1daa2",
  "computingTime" : 727220,
  "maxEvaluations" : 10240,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 128,
  "algorithm" : "NSGAII",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.077711818672422,
    "meanNumConcerns" : 1.5644511581067468,
    "meanMetricsIntensity" : 0.03296937024300845,
    "meanLackOfCohesion" : 0.485350300503555
  },
  "population" : [ {
    "solutionId" : "5c931f11-ca92-4bca-94f1-74f93069fa0c",
    "objectives" : {
      "NumberOfConcerns" : 1.0019311232700354,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48606300021297166,
      "MetricsIntensity" : 0.032877165695435036,
      "Density" : 0.9994739610731194
    },
    "euclideanDistance" : 10.111387260056878,
    "generation" : 23,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5627510040160641,
      "LackOfCohesion" : 0.48606300021297166,
      "MetricsIntensity" : 0.032877165695435036,
      "Density" : 3.066164604626143
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "3c00227c-7338-4a11-af30-d995b50bb350",
    "objectives" : {
      "NumberOfConcerns" : 1.0022529771483746,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4858523905336327,
      "MetricsIntensity" : 0.03285960882363934,
      "Density" : 0.9994739610731194
    },
    "euclideanDistance" : 10.111408978393925,
    "generation" : 47,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5624686402408428,
      "LackOfCohesion" : 0.4858523905336327,
      "MetricsIntensity" : 0.03285960882363935,
      "Density" : 3.066164604626143
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "89316e53-00c2-445f-ab08-65051a53ae06",
    "objectives" : {
      "NumberOfConcerns" : 1.0028966849050531,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48642459726760146,
      "MetricsIntensity" : 0.032856962739714266,
      "Density" : 1.0001753463089602
    },
    "euclideanDistance" : 10.111569658207632,
    "generation" : 16,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5634721525338682,
      "LackOfCohesion" : 0.48642459726760146,
      "MetricsIntensity" : 0.032856962739714266,
      "Density" : 3.0683162990855295
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "adb454e1-20d9-4a0c-950d-db0b8b16cd7a",
    "objectives" : {
      "NumberOfConcerns" : 1.0035403926617317,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4857410551530937,
      "MetricsIntensity" : 0.03286563208191553,
      "Density" : 1.0005260389268806
    },
    "euclideanDistance" : 10.11163538685547,
    "generation" : 39,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5636910732196594,
      "LackOfCohesion" : 0.4857410551530937,
      "MetricsIntensity" : 0.03286563208191552,
      "Density" : 3.067741935483871
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.destroy()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "d2d4966f-3830-47fa-a36b-f826f998d88c",
    "objectives" : {
      "NumberOfConcerns" : 1.0038622465400708,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48578686787070413,
      "MetricsIntensity" : 0.03286504532372713,
      "Density" : 1.0007013852358408
    },
    "euclideanDistance" : 10.111686885215601,
    "generation" : 2,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5641925777331998,
      "LackOfCohesion" : 0.48578686787070413,
      "MetricsIntensity" : 0.03286504532372713,
      "Density" : 3.0682795698924723
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.destroy()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "8f5989ad-0b1d-4c41-a9fa-d562da0c5f5b",
    "objectives" : {
      "NumberOfConcerns" : 1.0012874155133569,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4863316393729379,
      "MetricsIntensity" : 0.03288961167947636,
      "Density" : 0.9987725758372786
    },
    "euclideanDistance" : 11.101248728711633,
    "generation" : 10,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5625313912606726,
      "LackOfCohesion" : 0.4863316393729379,
      "MetricsIntensity" : 0.03288961167947636,
      "Density" : 3.0656620021528527
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "72d4881d-8504-45cc-bd02-4f6bff27a067",
    "objectives" : {
      "NumberOfConcerns" : 1.0022529771483746,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4861656462980065,
      "MetricsIntensity" : 0.032831214254335175,
      "Density" : 0.9992986147641593
    },
    "euclideanDistance" : 11.10137575600169,
    "generation" : 46,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5632530120481924,
      "LackOfCohesion" : 0.4861656462980065,
      "MetricsIntensity" : 0.032831214254335175,
      "Density" : 3.067276641550055
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "13116647-79cc-4828-81b1-73d3955f1808",
    "objectives" : {
      "NumberOfConcerns" : 1.002574831026714,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48669230480599857,
      "MetricsIntensity" : 0.032829154118159565,
      "Density" : 0.9998246536910398
    },
    "euclideanDistance" : 11.101475252544327,
    "generation" : 45,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5637550200803212,
      "LackOfCohesion" : 0.48669230480599857,
      "MetricsIntensity" : 0.032829154118159565,
      "Density" : 3.0688912809472546
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "0617968b-1700-486f-b2f0-834c30cb3dbf",
    "objectives" : {
      "NumberOfConcerns" : 1.0032185387833923,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4860082394518579,
      "MetricsIntensity" : 0.03283784481924477,
      "Density" : 1.0001753463089602
    },
    "euclideanDistance" : 11.101535051189561,
    "generation" : 24,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5639739086803814,
      "LackOfCohesion" : 0.4860082394518579,
      "MetricsIntensity" : 0.03283784481924477,
      "Density" : 3.0683162990855295
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.destroy()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "c5f7041e-f7be-4e95-9cc1-6879c682839d",
    "objectives" : {
      "NumberOfConcerns" : 1.0032185387833923,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48600823945185795,
      "MetricsIntensity" : 0.03283784481924475,
      "Density" : 1.0001753463089602
    },
    "euclideanDistance" : 11.101535051189561,
    "generation" : 31,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5639739086803814,
      "LackOfCohesion" : 0.48600823945185795,
      "MetricsIntensity" : 0.03283784481924476,
      "Density" : 3.0683162990855295
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.destroy()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "00577814-76b9-4c82-8d77-f93b80794a03",
    "objectives" : {
      "NumberOfConcerns" : 1.0035403926617317,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48605407736898276,
      "MetricsIntensity" : 0.0328372564443097,
      "Density" : 1.0003506926179204
    },
    "euclideanDistance" : 11.101581944905988,
    "generation" : 37,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5644756648268943,
      "LackOfCohesion" : 0.48605407736898276,
      "MetricsIntensity" : 0.03283725644430971,
      "Density" : 3.0688542227003763
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.destroy()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "09206f36-07e5-45cc-9666-06fef8cb8465",
    "objectives" : {
      "NumberOfConcerns" : 1.0022529771483746,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48747809334632736,
      "MetricsIntensity" : 0.03282974281691129,
      "Density" : 1.0024548483254427
    },
    "euclideanDistance" : 11.10171785971162,
    "generation" : 41,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5632530120481924,
      "LackOfCohesion" : 0.48747809334632736,
      "MetricsIntensity" : 0.03282974281691129,
      "Density" : 3.0769644779332617
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "f72fa934-85c0-4cc4-a192-8e8bd2c31eea",
    "objectives" : {
      "NumberOfConcerns" : 1.0009655616350177,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4853224033979929,
      "MetricsIntensity" : 0.032877878791284856,
      "Density" : 0.9985972295283184
    },
    "euclideanDistance" : 12.092797330334895,
    "generation" : 40,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5620291310899046,
      "LackOfCohesion" : 0.4853224033979929,
      "MetricsIntensity" : 0.032877878791284856,
      "Density" : 3.0651237890204523
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "892dc1bc-07e9-43fc-a372-9faf2e9e291a",
    "objectives" : {
      "NumberOfConcerns" : 1.0012874155133569,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.486367038995342,
      "MetricsIntensity" : 0.03288115736921736,
      "Density" : 0.9984218832193582
    },
    "euclideanDistance" : 12.092851475664776,
    "generation" : 38,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5625313912606729,
      "LackOfCohesion" : 0.486367038995342,
      "MetricsIntensity" : 0.03288115736921735,
      "Density" : 3.0662358642972536
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "144fad81-9da9-477f-8a65-107cda885299",
    "objectives" : {
      "NumberOfConcerns" : 1.0016092693916963,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4851579485455495,
      "MetricsIntensity" : 0.03285972316571945,
      "Density" : 0.9987725758372786
    },
    "euclideanDistance" : 12.092858462051867,
    "generation" : 37,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5622489959839359,
      "LackOfCohesion" : 0.4851579485455495,
      "MetricsIntensity" : 0.03285972316571945,
      "Density" : 3.0656620021528527
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "0f7d0b19-1547-44f3-98b4-29f78ec23fee",
    "objectives" : {
      "NumberOfConcerns" : 1.002574831026714,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48500109598859403,
      "MetricsIntensity" : 0.03286633804915964,
      "Density" : 0.9996493073820796
    },
    "euclideanDistance" : 12.093004642719881,
    "generation" : 39,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5629703963873556,
      "LackOfCohesion" : 0.48500109598859403,
      "MetricsIntensity" : 0.03286633804915964,
      "Density" : 3.0667025282409903
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.destroy()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "8a023505-e26e-4f41-9fd1-ebb323426ba5",
    "objectives" : {
      "NumberOfConcerns" : 1.0028966849050531,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48504693390571885,
      "MetricsIntensity" : 0.032865749674224544,
      "Density" : 0.9998246536910398
    },
    "euclideanDistance" : 12.09304766319537,
    "generation" : 35,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5634721525338682,
      "LackOfCohesion" : 0.48504693390571885,
      "MetricsIntensity" : 0.032865749674224544,
      "Density" : 3.067240451855836
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.destroy()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "3afd7a86-8f2b-44c4-a28b-2da71b33c2ba",
    "objectives" : {
      "NumberOfConcerns" : 1.0003218538783392,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48559078252619353,
      "MetricsIntensity" : 0.03289033202550795,
      "Density" : 0.9978958442924777
    },
    "euclideanDistance" : 13.085615006923364,
    "generation" : 24,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5618090452261308,
      "LackOfCohesion" : 0.48559078252619353,
      "MetricsIntensity" : 0.03289033202550795,
      "Density" : 3.0646203554119555
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "3e065eed-77c9-459b-b0e2-369c844bd48f",
    "objectives" : {
      "NumberOfConcerns" : 1.0006437077566785,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48538020092963435,
      "MetricsIntensity" : 0.0328727485677686,
      "Density" : 0.9978958442924777
    },
    "euclideanDistance" : 13.085631757885523,
    "generation" : 41,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5615268709191363,
      "LackOfCohesion" : 0.48538020092963435,
      "MetricsIntensity" : 0.0328727485677686,
      "Density" : 3.0646203554119555
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "761d62a5-a134-44c5-a911-75946c97546c",
    "objectives" : {
      "NumberOfConcerns" : 1.0016092693916963,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48595205452438633,
      "MetricsIntensity" : 0.03282983948049367,
      "Density" : 0.9989479221462388
    },
    "euclideanDistance" : 13.08580701666307,
    "generation" : 46,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5630336514314416,
      "LackOfCohesion" : 0.48595205452438633,
      "MetricsIntensity" : 0.03282983948049367,
      "Density" : 3.067851373182553
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "1b1393d1-4125-4899-89c7-2e07a4e4e5ba",
    "objectives" : {
      "NumberOfConcerns" : 1.002574831026714,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.485313883236432,
      "MetricsIntensity" : 0.03283794588862721,
      "Density" : 0.9994739610731194
    },
    "euclideanDistance" : 13.085897462024668,
    "generation" : 40,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5637550200803212,
      "LackOfCohesion" : 0.485313883236432,
      "MetricsIntensity" : 0.03283794588862721,
      "Density" : 3.0678148546824544
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.destroy()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "91596e2e-8d13-461b-a9f4-5edcb376bad0",
    "objectives" : {
      "NumberOfConcerns" : 1.0016092693916963,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48678416416706854,
      "MetricsIntensity" : 0.032829839480493665,
      "Density" : 1.001753463089602
    },
    "euclideanDistance" : 13.0860524127862,
    "generation" : 34,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5630336514314416,
      "LackOfCohesion" : 0.48678416416706854,
      "MetricsIntensity" : 0.032829839480493665,
      "Density" : 3.076467420570813
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "004c1f09-a2dd-422a-b6c5-9df465d7805e",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48558028797024444,
      "MetricsIntensity" : 0.032882461108546125,
      "Density" : 0.997369805365597
    },
    "euclideanDistance" : 14.079474990246222,
    "generation" : 6,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5613065326633169,
      "LackOfCohesion" : 0.48558028797024444,
      "MetricsIntensity" : 0.032882461108546125,
      "Density" : 3.0646551724137927
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "6aa69b1a-4a7e-4ae9-8acf-c77a37a2e2d4",
    "objectives" : {
      "NumberOfConcerns" : 1.0003218538783392,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48562620165252174,
      "MetricsIntensity" : 0.03288187176109051,
      "Density" : 0.9975451516745573
    },
    "euclideanDistance" : 14.079511858235639,
    "generation" : 35,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5618090452261306,
      "LackOfCohesion" : 0.48562620165252174,
      "MetricsIntensity" : 0.03288187176109052,
      "Density" : 3.0651939655172415
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "c9d64bfb-4a3a-456c-bf88-89da49426851",
    "objectives" : {
      "NumberOfConcerns" : 1.0006437077566785,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48562521778790146,
      "MetricsIntensity" : 0.03284159078619895,
      "Density" : 0.9978958442924777
    },
    "euclideanDistance" : 14.079559452204679,
    "generation" : 44,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5623115577889446,
      "LackOfCohesion" : 0.48562521778790146,
      "MetricsIntensity" : 0.03284159078619894,
      "Density" : 3.0662715517241383
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "c72d1e20-4462-4bc3-a58f-c3a6375aff15",
    "objectives" : {
      "NumberOfConcerns" : 1.002574831026714,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.4858996493689495,
      "MetricsIntensity" : 0.03281763609890861,
      "Density" : 0.9992986147641593
    },
    "euclideanDistance" : 14.079805733026781,
    "generation" : 12,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5637550200803212,
      "LackOfCohesion" : 0.4858996493689495,
      "MetricsIntensity" : 0.03281763609890861,
      "Density" : 3.067276641550055
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.destroy()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "aad9e251-c5a2-476d-b751-81a862834406",
    "objectives" : {
      "NumberOfConcerns" : 1.0012874155133569,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.4868433043398452,
      "MetricsIntensity" : 0.03281157977758202,
      "Density" : 1.0010520778537613
    },
    "euclideanDistance" : 14.079871261974976,
    "generation" : 42,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.562531391260673,
      "LackOfCohesion" : 0.4868433043398452,
      "MetricsIntensity" : 0.03281157977758203,
      "Density" : 3.0743134087237483
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "00f85099-81c5-4e67-b234-2456bba4a0fe",
    "objectives" : {
      "NumberOfConcerns" : 1.0016092693916963,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.4873702528580293,
      "MetricsIntensity" : 0.03280951850697016,
      "Density" : 1.0015781167806417
    },
    "euclideanDistance" : 14.079949789698142,
    "generation" : 41,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5630336514314414,
      "LackOfCohesion" : 0.4873702528580293,
      "MetricsIntensity" : 0.032809518506970156,
      "Density" : 3.0759289176090463
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "30bd8abd-d5be-45a4-a83d-507f70801ee1",
    "objectives" : {
      "NumberOfConcerns" : 1.0003218538783392,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4852133157854872,
      "MetricsIntensity" : 0.03285766120042029,
      "Density" : 0.9977204979835175
    },
    "euclideanDistance" : 15.074236351840785,
    "generation" : 41,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5618090452261306,
      "LackOfCohesion" : 0.4852133157854872,
      "MetricsIntensity" : 0.03285766120042029,
      "Density" : 3.0640818524501894
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "55e6a4ac-9892-488b-94a5-9d85cbf92bda",
    "objectives" : {
      "NumberOfConcerns" : 1.0009655616350177,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48576593738240104,
      "MetricsIntensity" : 0.03282620523992626,
      "Density" : 0.9987725758372786
    },
    "euclideanDistance" : 15.07436648153067,
    "generation" : 47,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5620291310899048,
      "LackOfCohesion" : 0.48576593738240104,
      "MetricsIntensity" : 0.03282620523992626,
      "Density" : 3.0673128702207864
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "c86e6f37-f98e-4940-bea8-6d1101308f7a",
    "objectives" : {
      "NumberOfConcerns" : 1.0012874155133569,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48496532333916564,
      "MetricsIntensity" : 0.03289253960563852,
      "Density" : 0.9992986147641593
    },
    "euclideanDistance" : 15.07439708558648,
    "generation" : 44,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5617469879518076,
      "LackOfCohesion" : 0.48496532333916564,
      "MetricsIntensity" : 0.03289253960563852,
      "Density" : 3.065626681011297
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "2c5a79d5-ac8f-49e1-ac54-b379559c9f19",
    "objectives" : {
      "NumberOfConcerns" : 1.0019311232700354,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48489195161649257,
      "MetricsIntensity" : 0.03284613636057327,
      "Density" : 0.9987725758372786
    },
    "euclideanDistance" : 15.074402532353913,
    "generation" : 34,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5627510040160641,
      "LackOfCohesion" : 0.48489195161649257,
      "MetricsIntensity" : 0.03284613636057327,
      "Density" : 3.0656620021528527
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.destroy()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "b15d8a1d-c7d7-4cdc-8ab8-6b130f6122d9",
    "objectives" : {
      "NumberOfConcerns" : 1.002574831026714,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48570039017782435,
      "MetricsIntensity" : 0.03283166610797438,
      "Density" : 1.0
    },
    "euclideanDistance" : 15.074552699139254,
    "generation" : 39,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.563755020080321,
      "LackOfCohesion" : 0.48570039017782435,
      "MetricsIntensity" : 0.03283166610797438,
      "Density" : 3.0694294940796554
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.destroy()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "848d1e33-f856-4406-ba6a-86ea6a4c20e7",
    "objectives" : {
      "NumberOfConcerns" : 0.9996781461216607,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48548178272598946,
      "MetricsIntensity" : 0.03287011015440264,
      "Density" : 0.9970191127476766
    },
    "euclideanDistance" : 16.06954188869483,
    "generation" : 42,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5615887380593259,
      "LackOfCohesion" : 0.48548178272598946,
      "MetricsIntensity" : 0.03287011015440264,
      "Density" : 3.0635775862068964
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "f5e3bf2d-4874-449c-a45f-c33a40f5dd89",
    "objectives" : {
      "NumberOfConcerns" : 1.0003218538783392,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48596623694998276,
      "MetricsIntensity" : 0.03283589213699701,
      "Density" : 0.998246536910398
    },
    "euclideanDistance" : 16.069672720347107,
    "generation" : 47,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5618090452261306,
      "LackOfCohesion" : 0.48596623694998276,
      "MetricsIntensity" : 0.03283589213699701,
      "Density" : 3.067349137931035
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "19e909eb-8e57-4f70-84f0-b820a7004981",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.486103713266794,
      "MetricsIntensity" : 0.03285252815033458,
      "Density" : 0.9998246536910398
    },
    "euclideanDistance" : 16.069754990253774,
    "generation" : 43,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5613065326633169,
      "LackOfCohesion" : 0.486103713266794,
      "MetricsIntensity" : 0.03285252815033458,
      "Density" : 3.072198275862069
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "b3042006-453b-41bf-b8f4-9e444a148af3",
    "objectives" : {
      "NumberOfConcerns" : 1.0003218538783392,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48610272940217364,
      "MetricsIntensity" : 0.03281225583469397,
      "Density" : 1.0001753463089602
    },
    "euclideanDistance" : 16.069796733075876,
    "generation" : 42,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5618090452261306,
      "LackOfCohesion" : 0.48610272940217364,
      "MetricsIntensity" : 0.03281225583469397,
      "Density" : 3.0732758620689657
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "c549767f-a571-4f60-9cd6-803b5d7a7b66",
    "objectives" : {
      "NumberOfConcerns" : 1.0006437077566785,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48662996825011934,
      "MetricsIntensity" : 0.03281019342839583,
      "Density" : 1.0007013852358408
    },
    "euclideanDistance" : 16.069865473210346,
    "generation" : 43,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5623115577889446,
      "LackOfCohesion" : 0.48662996825011934,
      "MetricsIntensity" : 0.032810193428395834,
      "Density" : 3.074892241379311
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "963c0895-b8c8-4006-bb15-d89b0b13985a",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.4854345218665894,
      "MetricsIntensity" : 0.03290793486963952,
      "Density" : 0.9968437664387164
    },
    "euclideanDistance" : 17.06541815810337,
    "generation" : 22,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560583207642031,
      "LackOfCohesion" : 0.4854345218665894,
      "MetricsIntensity" : 0.03290793486963952,
      "Density" : 3.0646900269541777
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "b08f08cc-54d1-4ebd-bd08-a2eb18e3f530",
    "objectives" : {
      "NumberOfConcerns" : 0.9996781461216607,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.4854702979777352,
      "MetricsIntensity" : 0.032821940381980684,
      "Density" : 0.9968437664387164
    },
    "euclideanDistance" : 17.065456705887186,
    "generation" : 43,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5615887380593256,
      "LackOfCohesion" : 0.4854702979777352,
      "MetricsIntensity" : 0.03282194038198068,
      "Density" : 3.0646900269541777
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "19f05171-688a-4c8e-9e37-312f123eec7d",
    "objectives" : {
      "NumberOfConcerns" : 0.9996781461216607,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48538745050467974,
      "MetricsIntensity" : 0.03291531370983151,
      "Density" : 0.9978958442924777
    },
    "euclideanDistance" : 17.065516016425445,
    "generation" : 36,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5608040201005027,
      "LackOfCohesion" : 0.48538745050467974,
      "MetricsIntensity" : 0.03291531370983151,
      "Density" : 3.064620355411955
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "4f11832d-82f8-49fa-bfa3-3fe989d0ee0d",
    "objectives" : {
      "NumberOfConcerns" : 0.9996781461216607,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.48498373805551276,
      "MetricsIntensity" : 0.032936188593840864,
      "Density" : 0.9985972295283184
    },
    "euclideanDistance" : 18.06191703118338,
    "generation" : 22,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560804020100503,
      "LackOfCohesion" : 0.48498373805551276,
      "MetricsIntensity" : 0.032936188593840864,
      "Density" : 3.0651237890204515
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "6f10c760-4db7-4dd1-88e2-2bbeed866287",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.484773490734543,
      "MetricsIntensity" : 0.03291857988468721,
      "Density" : 0.9985972295283184
    },
    "euclideanDistance" : 18.061929171521026,
    "generation" : 21,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560522350577599,
      "LackOfCohesion" : 0.484773490734543,
      "MetricsIntensity" : 0.03291857988468721,
      "Density" : 3.0651237890204523
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "2afc07b0-3653-40ac-a427-63c2a3a86145",
    "objectives" : {
      "NumberOfConcerns" : 1.0006437077566785,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.48618433298918234,
      "MetricsIntensity" : 0.03280390672787452,
      "Density" : 0.9984218832193582
    },
    "euclideanDistance" : 18.061992841010237,
    "generation" : 15,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5623115577889446,
      "LackOfCohesion" : 0.48618433298918234,
      "MetricsIntensity" : 0.03280390672787451,
      "Density" : 3.067887931034482
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "008f3cf5-121c-46ec-832a-0f7a028b9599",
    "objectives" : {
      "NumberOfConcerns" : 1.0016092693916963,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.48554568237867696,
      "MetricsIntensity" : 0.03281203188003928,
      "Density" : 0.9989479221462388
    },
    "euclideanDistance" : 18.0620582802405,
    "generation" : 42,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5630336514314416,
      "LackOfCohesion" : 0.48554568237867696,
      "MetricsIntensity" : 0.03281203188003928,
      "Density" : 3.067851373182553
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.destroy()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "30098a7c-2d71-48d0-a2c8-cfb08d6a2300",
    "objectives" : {
      "NumberOfConcerns" : 0.9993562922433216,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48504156743152393,
      "MetricsIntensity" : 0.03293105554375515,
      "Density" : 0.9978958442924777
    },
    "euclideanDistance" : 19.058616394992008,
    "generation" : 49,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5603015075376885,
      "LackOfCohesion" : 0.48504156743152393,
      "MetricsIntensity" : 0.03293105554375515,
      "Density" : 3.0646203554119555
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "4547d6f4-0910-4ee2-a43d-fe08d9f1fe55",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48507732383131363,
      "MetricsIntensity" : 0.032845108435979355,
      "Density" : 0.9978958442924777
    },
    "euclideanDistance" : 19.058650920967615,
    "generation" : 35,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5613065326633169,
      "LackOfCohesion" : 0.48507732383131363,
      "MetricsIntensity" : 0.032845108435979355,
      "Density" : 3.064620355411955
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "5e0ad449-bb7e-4245-a46a-758f391d2503",
    "objectives" : {
      "NumberOfConcerns" : 0.9993562922433216,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.48527735420706275,
      "MetricsIntensity" : 0.03285481109385111,
      "Density" : 0.997369805365597
    },
    "euclideanDistance" : 20.055673338898885,
    "generation" : 43,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5610859728506785,
      "LackOfCohesion" : 0.48527735420706275,
      "MetricsIntensity" : 0.03285481109385111,
      "Density" : 3.0646551724137927
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "2f1a7c28-b436-47b3-a571-5d01776fd838",
    "objectives" : {
      "NumberOfConcerns" : 0.9993562922433216,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.4852773542070625,
      "MetricsIntensity" : 0.03285481109385112,
      "Density" : 0.997369805365597
    },
    "euclideanDistance" : 20.055673338898885,
    "generation" : 44,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5610859728506787,
      "LackOfCohesion" : 0.4852773542070625,
      "MetricsIntensity" : 0.03285481109385111,
      "Density" : 3.0646551724137927
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "0c10bf44-3a1b-4fb5-b965-0fe576b0a978",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.48524059368892414,
      "MetricsIntensity" : 0.03290050369786003,
      "Density" : 0.9977204979835175
    },
    "euclideanDistance" : 20.055673932282676,
    "generation" : 45,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5605832076420307,
      "LackOfCohesion" : 0.48524059368892414,
      "MetricsIntensity" : 0.03290050369786003,
      "Density" : 3.065732758620689
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "c322fd5e-6fcd-4c62-807b-c0881f639133",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4856654847620772,
      "MetricsIntensity" : 0.032888815444149636,
      "Density" : 0.9975451516745573
    },
    "euclideanDistance" : 22.050626267204727,
    "generation" : 35,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5605832076420312,
      "LackOfCohesion" : 0.4856654847620772,
      "MetricsIntensity" : 0.032888815444149636,
      "Density" : 3.065193965517241
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "1fac48e4-3688-4367-aac2-9207d49cca74",
    "objectives" : {
      "NumberOfConcerns" : 0.9993562922433216,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4856645003550837,
      "MetricsIntensity" : 0.03284852092767351,
      "Density" : 0.9978958442924777
    },
    "euclideanDistance" : 22.05065663755016,
    "generation" : 32,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5610859728506787,
      "LackOfCohesion" : 0.4856645003550837,
      "MetricsIntensity" : 0.03284852092767351,
      "Density" : 3.066271551724139
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "64223a8a-8453-45a7-99bd-4ad75148342c",
    "objectives" : {
      "NumberOfConcerns" : 0.998712584486643,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48663887350801804,
      "MetricsIntensity" : 0.03291741943291937,
      "Density" : 0.9970191127476766
    },
    "euclideanDistance" : 24.046400455937423,
    "generation" : 41,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5600804424333834,
      "LackOfCohesion" : 0.48663887350801804,
      "MetricsIntensity" : 0.03291741943291936,
      "Density" : 3.0652291105121297
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "314a1dd3-75a8-4289-82ca-04bb8aaf5c26",
    "objectives" : {
      "NumberOfConcerns" : 1.0012874155133569,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48856622978356146,
      "MetricsIntensity" : 0.03289303294974584,
      "Density" : 0.9963177275118359
    },
    "euclideanDistance" : 24.046517511172407,
    "generation" : 47,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5633165829145728,
      "LackOfCohesion" : 0.48856622978356146,
      "MetricsIntensity" : 0.03289303294974585,
      "Density" : 3.0614224137931036
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "74fe6b72-4c18-4ed3-b856-8be51a3bfde8",
    "objectives" : {
      "NumberOfConcerns" : 1.0016092693916963,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48833259513846344,
      "MetricsIntensity" : 0.03291238271170866,
      "Density" : 0.9963177275118359
    },
    "euclideanDistance" : 24.04652619592061,
    "generation" : 40,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5630336514314416,
      "LackOfCohesion" : 0.48833259513846344,
      "MetricsIntensity" : 0.03291238271170866,
      "Density" : 3.0614224137931036
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "cbe153cf-307f-4fca-9f30-b13495c9e75e",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.48727154737577877,
      "MetricsIntensity" : 0.0328964783668513,
      "Density" : 0.9970191127476766
    },
    "euclideanDistance" : 25.044572918286992,
    "generation" : 46,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5605832076420312,
      "LackOfCohesion" : 0.48727154737577877,
      "MetricsIntensity" : 0.0328964783668513,
      "Density" : 3.06522911051213
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "9175180a-cd30-4ad5-8346-717b637fb703",
    "objectives" : {
      "NumberOfConcerns" : 1.0006437077566785,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.487557421620358,
      "MetricsIntensity" : 0.032921573275908465,
      "Density" : 0.9957916885849553
    },
    "euclideanDistance" : 25.044593927358694,
    "generation" : 17,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5623115577889446,
      "LackOfCohesion" : 0.487557421620358,
      "MetricsIntensity" : 0.032921573275908465,
      "Density" : 3.0598060344827576
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "04012f81-bca3-45c8-b615-e4af90b57adb",
    "objectives" : {
      "NumberOfConcerns" : 1.0009655616350177,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4886026327745097,
      "MetricsIntensity" : 0.03292485495635623,
      "Density" : 0.995616342275995
    },
    "euclideanDistance" : 25.044620191478536,
    "generation" : 41,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5628140703517588,
      "LackOfCohesion" : 0.4886026327745097,
      "MetricsIntensity" : 0.03292485495635623,
      "Density" : 3.0609164420485184
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "923701ef-f170-4ff4-94a9-bbc9d5188f18",
    "objectives" : {
      "NumberOfConcerns" : 1.0012874155133569,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.48739164547216823,
      "MetricsIntensity" : 0.03290338488733484,
      "Density" : 0.9959670348939155
    },
    "euclideanDistance" : 25.044623376522832,
    "generation" : 33,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5625313912606729,
      "LackOfCohesion" : 0.48739164547216823,
      "MetricsIntensity" : 0.03290338488733484,
      "Density" : 3.0603448275862073
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "911cc08c-b721-4e4a-9041-80d27c8b95eb",
    "objectives" : {
      "NumberOfConcerns" : 0.9983907306083039,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48654089781715176,
      "MetricsIntensity" : 0.03290508159715088,
      "Density" : 0.9966684201297563
    },
    "euclideanDistance" : 26.042809694429906,
    "generation" : 31,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5603621730382293,
      "LackOfCohesion" : 0.48654089781715176,
      "MetricsIntensity" : 0.03290508159715088,
      "Density" : 3.0641509433962257
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "9183d813-f4b2-46a4-96ad-7dc9650b1e34",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48782718079119924,
      "MetricsIntensity" : 0.03293405746256751,
      "Density" : 0.9950903033491145
    },
    "euclideanDistance" : 26.042835189784522,
    "generation" : 42,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5620915032679734,
      "LackOfCohesion" : 0.48782718079119924,
      "MetricsIntensity" : 0.0329340574625675,
      "Density" : 3.059299191374663
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "0b2e02bb-44f8-4441-bd43-6e8199039177",
    "objectives" : {
      "NumberOfConcerns" : 1.0006437077566785,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48761426713174894,
      "MetricsIntensity" : 0.03287616054706745,
      "Density" : 0.995440995967035
    },
    "euclideanDistance" : 26.042869256703796,
    "generation" : 45,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5623115577889446,
      "LackOfCohesion" : 0.48761426713174894,
      "MetricsIntensity" : 0.03287616054706745,
      "Density" : 3.060377358490566
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "d74f89ef-8f0a-4233-a142-16abb607a2d3",
    "objectives" : {
      "NumberOfConcerns" : 0.998712584486643,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.4871625873521399,
      "MetricsIntensity" : 0.032887470622053695,
      "Density" : 0.9994739610731194
    },
    "euclideanDistance" : 26.042941154898667,
    "generation" : 43,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5600804424333838,
      "LackOfCohesion" : 0.4871625873521399,
      "MetricsIntensity" : 0.032887470622053695,
      "Density" : 3.0727762803234504
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "8d52bd10-b5de-4680-8c85-9998893a47ec",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48769011684994684,
      "MetricsIntensity" : 0.03288540707881713,
      "Density" : 1.0
    },
    "euclideanDistance" : 26.042983563891276,
    "generation" : 46,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5605832076420307,
      "LackOfCohesion" : 0.48769011684994684,
      "MetricsIntensity" : 0.03288540707881714,
      "Density" : 3.074393530997304
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "4153a11a-5df1-4d47-af71-0d9c186c3837",
    "objectives" : {
      "NumberOfConcerns" : 0.9980688767299646,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.48653039168419665,
      "MetricsIntensity" : 0.03289720199743453,
      "Density" : 0.9961423812028757
    },
    "euclideanDistance" : 27.041195150626333,
    "generation" : 33,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5598591549295782,
      "LackOfCohesion" : 0.48653039168419665,
      "MetricsIntensity" : 0.032897201997434525,
      "Density" : 3.0641855447680704
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "354e7a80-c94c-4cb0-b505-4f8069b4185e",
    "objectives" : {
      "NumberOfConcerns" : 0.9980688767299646,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.4864926259400217,
      "MetricsIntensity" : 0.03290260241361812,
      "Density" : 0.9968437664387164
    },
    "euclideanDistance" : 27.04122032441813,
    "generation" : 42,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5598591549295773,
      "LackOfCohesion" : 0.4864926259400217,
      "MetricsIntensity" : 0.03290260241361812,
      "Density" : 3.0663430420711983
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "d18855aa-14e9-4cf8-8a36-3cb72bcde4ff",
    "objectives" : {
      "NumberOfConcerns" : 0.9996781461216607,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.4874127454470506,
      "MetricsIntensity" : 0.032947068598284814,
      "Density" : 0.9952656496580747
    },
    "euclideanDistance" : 28.039767595380958,
    "generation" : 41,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.561588738059326,
      "LackOfCohesion" : 0.4874127454470506,
      "MetricsIntensity" : 0.032947068598284814,
      "Density" : 3.059838274932614
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "49146522-441b-4372-82e1-2c20a828cadd",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.488449354317699,
      "MetricsIntensity" : 0.03290524178897901,
      "Density" : 0.9945642644222339
    },
    "euclideanDistance" : 28.039772174586876,
    "generation" : 47,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5620915032679739,
      "LackOfCohesion" : 0.488449354317699,
      "MetricsIntensity" : 0.03290524178897901,
      "Density" : 3.0593311758360313
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "a9779378-7071-4219-8286-8e4c4a657cfc",
    "objectives" : {
      "NumberOfConcerns" : 0.998712584486643,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48583104851321285,
      "MetricsIntensity" : 0.032953538848427825,
      "Density" : 0.998246536910398
    },
    "euclideanDistance" : 28.03981170975097,
    "generation" : 47,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5592964824120614,
      "LackOfCohesion" : 0.48583104851321285,
      "MetricsIntensity" : 0.032953538848427825,
      "Density" : 3.065697361335487
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "758d4191-f7ce-4a36-a472-620c403a9c11",
    "objectives" : {
      "NumberOfConcerns" : 1.0009655616350177,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.4880471136583845,
      "MetricsIntensity" : 0.03286928449909053,
      "Density" : 0.9961423812028757
    },
    "euclideanDistance" : 28.03985560009576,
    "generation" : 45,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5628140703517583,
      "LackOfCohesion" : 0.4880471136583845,
      "MetricsIntensity" : 0.03286928449909053,
      "Density" : 3.0625336927223725
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "b41dbab6-13f9-42c2-af34-fc70fcd71b24",
    "objectives" : {
      "NumberOfConcerns" : 0.9993562922433216,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.4877193544043786,
      "MetricsIntensity" : 0.0329138498529367,
      "Density" : 0.9942135718043135
    },
    "euclideanDistance" : 29.03835613658905,
    "generation" : 40,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.561871227364185,
      "LackOfCohesion" : 0.4877193544043786,
      "MetricsIntensity" : 0.032913849852936695,
      "Density" : 3.0582524271844664
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "e6925add-2605-4e86-85f9-aa096887e20b",
    "objectives" : {
      "NumberOfConcerns" : 0.9980688767299646,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.48687998562701024,
      "MetricsIntensity" : 0.03289630618282897,
      "Density" : 0.997369805365597
    },
    "euclideanDistance" : 29.038405987566133,
    "generation" : 41,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5598591549295784,
      "LackOfCohesion" : 0.48687998562701024,
      "MetricsIntensity" : 0.03289630618282897,
      "Density" : 3.067961165048543
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "57f1aa6a-2b6a-4413-87b9-840cc4ac379f",
    "objectives" : {
      "NumberOfConcerns" : 1.0003218538783392,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.48740000328112143,
      "MetricsIntensity" : 0.03294596690891267,
      "Density" : 0.9959670348939155
    },
    "euclideanDistance" : 29.038444144717463,
    "generation" : 46,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5618090452261306,
      "LackOfCohesion" : 0.48740000328112143,
      "MetricsIntensity" : 0.032945966908912674,
      "Density" : 3.0603448275862073
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "a60fdafd-ff50-472f-ae2a-4b8579e76a1c",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.48770884827142363,
      "MetricsIntensity" : 0.03290597025322035,
      "Density" : 0.9936875328774329
    },
    "euclideanDistance" : 30.03705091125951,
    "generation" : 6,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5613682092555328,
      "LackOfCohesion" : 0.48770884827142363,
      "MetricsIntensity" : 0.03290597025322034,
      "Density" : 3.0582838640043177
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "0c370b31-b5c0-465b-826e-26abd53fecad",
    "objectives" : {
      "NumberOfConcerns" : 0.9993562922433216,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.4877078633214589,
      "MetricsIntensity" : 0.032865653511417986,
      "Density" : 0.9940382254953534
    },
    "euclideanDistance" : 30.037073161407033,
    "generation" : 45,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5618712273641853,
      "LackOfCohesion" : 0.4877078633214589,
      "MetricsIntensity" : 0.032865653511417986,
      "Density" : 3.0593631948192117
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "c172349c-4bf2-4f86-ab7a-dc84db523f7f",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.48767108252724867,
      "MetricsIntensity" : 0.03291137002062091,
      "Density" : 0.9943889181132737
    },
    "euclideanDistance" : 30.037073515449464,
    "generation" : 44,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5613682092555328,
      "LackOfCohesion" : 0.48767108252724867,
      "MetricsIntensity" : 0.03291137002062091,
      "Density" : 3.060442525634106
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "95e432dd-f945-4ba4-9e5d-a658efd22e1f",
    "objectives" : {
      "NumberOfConcerns" : 0.9974251689732861,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.48630056069693584,
      "MetricsIntensity" : 0.03297581536909184,
      "Density" : 0.9970191127476766
    },
    "euclideanDistance" : 30.03708507359892,
    "generation" : 43,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5588531187122736,
      "LackOfCohesion" : 0.48630056069693584,
      "MetricsIntensity" : 0.03297581536909184,
      "Density" : 3.0652291105121297
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "251c5748-2089-481f-904b-e486376982f5",
    "objectives" : {
      "NumberOfConcerns" : 0.9993562922433216,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.4872198016763782,
      "MetricsIntensity" : 0.0329799393101553,
      "Density" : 0.9957916885849553
    },
    "euclideanDistance" : 31.035927324593406,
    "generation" : 42,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.561085972850679,
      "LackOfCohesion" : 0.4872198016763782,
      "MetricsIntensity" : 0.0329799393101553,
      "Density" : 3.059806034482759
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "556a0ddb-e228-49c1-93c3-1ba3ef90c763",
    "objectives" : {
      "NumberOfConcerns" : 0.9996781461216607,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.4870082065256881,
      "MetricsIntensity" : 0.03296229679415567,
      "Density" : 0.9957916885849553
    },
    "euclideanDistance" : 31.035934350187066,
    "generation" : 40,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5608040201005027,
      "LackOfCohesion" : 0.4870082065256881,
      "MetricsIntensity" : 0.03296229679415567,
      "Density" : 3.0598060344827562
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "0cf2efed-c6d8-4f80-a16e-73d137644065",
    "objectives" : {
      "NumberOfConcerns" : 1.0012874155133569,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.4877808236197639,
      "MetricsIntensity" : 0.03285569138150919,
      "Density" : 0.9961423812028757
    },
    "euclideanDistance" : 31.03600950123004,
    "generation" : 39,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.563316582914573,
      "LackOfCohesion" : 0.4877808236197639,
      "MetricsIntensity" : 0.03285569138150919,
      "Density" : 3.062533692722372
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.destroy()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "0e4f35ae-d2ff-4f1b-a8ea-08d99459a3d4",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.4880962079584126,
      "MetricsIntensity" : 0.03289967661756333,
      "Density" : 0.9942135718043135
    },
    "euclideanDistance" : 32.03476003862592,
    "generation" : 42,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.561368209255533,
      "LackOfCohesion" : 0.4880962079584126,
      "MetricsIntensity" : 0.03289967661756333,
      "Density" : 3.0599028602266594
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "ff17417c-a285-4509-9468-d8a2bf43ec35",
    "objectives" : {
      "NumberOfConcerns" : 0.9974251689732861,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.4866879203839245,
      "MetricsIntensity" : 0.03296951913830269,
      "Density" : 0.9975451516745573
    },
    "euclideanDistance" : 32.03479210824335,
    "generation" : 44,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5588531187122734,
      "LackOfCohesion" : 0.4866879203839245,
      "MetricsIntensity" : 0.03296951913830269,
      "Density" : 3.0668463611859855
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "2220a820-6da2-4350-92bc-6609330dbf41",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.48751481312840883,
      "MetricsIntensity" : 0.032898542353852034,
      "Density" : 0.9945642644222339
    },
    "euclideanDistance" : 33.0337097658167,
    "generation" : 33,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5613682092555328,
      "LackOfCohesion" : 0.48751481312840883,
      "MetricsIntensity" : 0.032898542353852034,
      "Density" : 3.059331175836031
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "f2e6daaf-a4c7-4f6e-86c7-1351dc9f438c",
    "objectives" : {
      "NumberOfConcerns" : 0.998712584486643,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.48747803233419856,
      "MetricsIntensity" : 0.032944258863054965,
      "Density" : 0.9949149570401543
    },
    "euclideanDistance" : 33.03371009672323,
    "generation" : 29,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5608651911468816,
      "LackOfCohesion" : 0.48747803233419856,
      "MetricsIntensity" : 0.032944258863054965,
      "Density" : 3.0604099244875944
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "d2faa2ce-ac77-4344-bcbd-141d62423fd7",
    "objectives" : {
      "NumberOfConcerns" : 0.998712584486643,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.48790315776536214,
      "MetricsIntensity" : 0.032932565459997405,
      "Density" : 0.9947396107311941
    },
    "euclideanDistance" : 35.031786534015005,
    "generation" : 34,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5608651911468814,
      "LackOfCohesion" : 0.48790315776536214,
      "MetricsIntensity" : 0.0329325654599974,
      "Density" : 3.059870550161813
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "f0ecb494-b159-44f3-8e82-7a576c9c8631",
    "objectives" : {
      "NumberOfConcerns" : 0.9983907306083039,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.4878663769711519,
      "MetricsIntensity" : 0.03297828674530548,
      "Density" : 0.9950903033491145
    },
    "euclideanDistance" : 35.031786850401446,
    "generation" : 40,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5603621730382295,
      "LackOfCohesion" : 0.4878663769711519,
      "MetricsIntensity" : 0.03297828674530548,
      "Density" : 3.0609492988133775
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "93e4f254-0612-4346-b3f6-1b9b87b9397d",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.4884055367966365,
      "MetricsIntensity" : 0.032870922835331634,
      "Density" : 1.000876731544801
    },
    "euclideanDistance" : 36.031089971117005,
    "generation" : 42,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.561368209255533,
      "LackOfCohesion" : 0.4884055367966365,
      "MetricsIntensity" : 0.032870922835331634,
      "Density" : 3.0770889487870625
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "3aa64e5b-521f-4de2-9b55-9e1a01aa312b",
    "objectives" : {
      "NumberOfConcerns" : 0.998712584486643,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.48887609845529667,
      "MetricsIntensity" : 0.03292085981532009,
      "Density" : 0.9945642644222339
    },
    "euclideanDistance" : 37.03007788980641,
    "generation" : 10,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5608651911468814,
      "LackOfCohesion" : 0.48887609845529667,
      "MetricsIntensity" : 0.0329208598153201,
      "Density" : 3.060982191041555
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "12517470-f758-4880-a0bb-72f1183ceec1",
    "objectives" : {
      "NumberOfConcerns" : 0.9977470228516253,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.4872465519228658,
      "MetricsIntensity" : 0.032923055261434055,
      "Density" : 0.9966684201297563
    },
    "euclideanDistance" : 37.03008695900162,
    "generation" : 37,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560140915953699,
      "LackOfCohesion" : 0.4872465519228658,
      "MetricsIntensity" : 0.032923055261434055,
      "Density" : 3.065803667745416
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "d672f696-b8e7-4b50-94a3-7cceb7fbe3d0",
    "objectives" : {
      "NumberOfConcerns" : 0.9974251689732861,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.48720975083020396,
      "MetricsIntensity" : 0.03296880502494494,
      "Density" : 0.9970191127476766
    },
    "euclideanDistance" : 37.030087285372346,
    "generation" : 36,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5596376446904876,
      "LackOfCohesion" : 0.48720975083020396,
      "MetricsIntensity" : 0.03296880502494494,
      "Density" : 3.06688241639698
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "2557b21c-0a9a-4a3e-b324-0283272f8a24",
    "objectives" : {
      "NumberOfConcerns" : 0.9983907306083039,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.48847292560314437,
      "MetricsIntensity" : 0.03298208184037132,
      "Density" : 0.9949149570401543
    },
    "euclideanDistance" : 38.02928257855355,
    "generation" : 23,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5603621730382298,
      "LackOfCohesion" : 0.48847292560314437,
      "MetricsIntensity" : 0.03298208184037132,
      "Density" : 3.060409924487595
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "51a650ac-9b16-4138-905b-bdf86654fc56",
    "objectives" : {
      "NumberOfConcerns" : 0.9980688767299646,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.48878028885910035,
      "MetricsIntensity" : 0.032948864734504625,
      "Density" : 0.9938628791863932
    },
    "euclideanDistance" : 39.02850108195018,
    "generation" : 44,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.56064418721691,
      "LackOfCohesion" : 0.48878028885910035,
      "MetricsIntensity" : 0.032948864734504625,
      "Density" : 3.0588235294117636
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "ff927cbe-9d37-4af2-9b60-e3c332cffa76",
    "objectives" : {
      "NumberOfConcerns" : 0.9977470228516253,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.48874348776643856,
      "MetricsIntensity" : 0.03299461319973336,
      "Density" : 0.9942135718043135
    },
    "euclideanDistance" : 39.02850136232883,
    "generation" : 42,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560140915953699,
      "LackOfCohesion" : 0.48874348776643856,
      "MetricsIntensity" : 0.03299461319973336,
      "Density" : 3.0599028602266594
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "2ac2160a-e9b9-4832-ad53-d496882c8a11",
    "objectives" : {
      "NumberOfConcerns" : 0.9983907306083039,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.4885298338233181,
      "MetricsIntensity" : 0.03293661901475275,
      "Density" : 0.9945642644222339
    },
    "euclideanDistance" : 39.028524034947026,
    "generation" : 45,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5603621730382298,
      "LackOfCohesion" : 0.4885298338233181,
      "MetricsIntensity" : 0.032936619014752755,
      "Density" : 3.0609821910415547
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "5d37258a-22f1-4517-aae1-e9a5e4efddea",
    "objectives" : {
      "NumberOfConcerns" : 0.9977470228516253,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.48876977692805845,
      "MetricsIntensity" : 0.03294098078622333,
      "Density" : 0.9933368402595125
    },
    "euclideanDistance" : 40.0277678393747,
    "generation" : 9,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5601409159536987,
      "LackOfCohesion" : 0.48876977692805845,
      "MetricsIntensity" : 0.032940980786223324,
      "Density" : 3.0588552915766734
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "dd911d4a-3c5f-40af-9307-4931fdf06088",
    "objectives" : {
      "NumberOfConcerns" : 0.9977470228516253,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.4887697769280585,
      "MetricsIntensity" : 0.032940980786223324,
      "Density" : 0.9933368402595125
    },
    "euclideanDistance" : 40.0277678393747,
    "generation" : 43,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560140915953699,
      "LackOfCohesion" : 0.4887697769280585,
      "MetricsIntensity" : 0.032940980786223324,
      "Density" : 3.0588552915766742
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "35f3e2bf-7cb7-4a77-9118-3d98c9314169",
    "objectives" : {
      "NumberOfConcerns" : 0.9977470228516253,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.4887319903418615,
      "MetricsIntensity" : 0.03294638288448686,
      "Density" : 0.9940382254953534
    },
    "euclideanDistance" : 40.02778479428863,
    "generation" : 24,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5601409159536994,
      "LackOfCohesion" : 0.4887319903418615,
      "MetricsIntensity" : 0.03294638288448686,
      "Density" : 3.061015118790497
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "de956721-070e-4580-be2d-4022e2f4ad8c",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.4884246733789127,
      "MetricsIntensity" : 0.03289148936455325,
      "Density" : 0.9945642644222339
    },
    "euclideanDistance" : 40.027826176258216,
    "generation" : 38,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5621540010065422,
      "LackOfCohesion" : 0.4884246733789127,
      "MetricsIntensity" : 0.03289148936455325,
      "Density" : 3.0609821910415547
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "ca6cd323-33eb-4e65-8aa4-91ca0d177de8",
    "objectives" : {
      "NumberOfConcerns" : 0.9974251689732861,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.4870533951899737,
      "MetricsIntensity" : 0.0329559622544434,
      "Density" : 0.9971944590566368
    },
    "euclideanDistance" : 40.02783482605684,
    "generation" : 16,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5596376446904876,
      "LackOfCohesion" : 0.4870533951899737,
      "MetricsIntensity" : 0.0329559622544434,
      "Density" : 3.065768194070081
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "75229b35-0d2b-41b9-b0bb-a9345b297ce3",
    "objectives" : {
      "NumberOfConcerns" : 0.9971033150949469,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.4870165940973116,
      "MetricsIntensity" : 0.033001712017954286,
      "Density" : 0.9975451516745573
    },
    "euclideanDistance" : 40.027835135397034,
    "generation" : 4,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5591343734272778,
      "LackOfCohesion" : 0.4870165940973116,
      "MetricsIntensity" : 0.033001712017954286,
      "Density" : 3.066846361185984
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "293de327-f3a8-4192-ba70-464dafd6912b",
    "objectives" : {
      "NumberOfConcerns" : 0.9974251689732861,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.48701560860377674,
      "MetricsIntensity" : 0.032961365650989116,
      "Density" : 0.9978958442924777
    },
    "euclideanDistance" : 40.027851850160616,
    "generation" : 45,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5596376446904878,
      "LackOfCohesion" : 0.48701560860377674,
      "MetricsIntensity" : 0.032961365650989116,
      "Density" : 3.0679245283018863
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "fb0306ce-8893-48b5-bb04-78ff9c5a5305",
    "objectives" : {
      "NumberOfConcerns" : 0.9980688767299646,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.4882798754100941,
      "MetricsIntensity" : 0.033014970682805386,
      "Density" : 0.995440995967035
    },
    "euclideanDistance" : 41.0271440815001,
    "generation" : 8,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5598591549295782,
      "LackOfCohesion" : 0.4882798754100941,
      "MetricsIntensity" : 0.03301497068280538,
      "Density" : 3.060377358490565
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "5d362198-aee9-49b5-be4e-70dd86e0a2b7",
    "objectives" : {
      "NumberOfConcerns" : 0.9974251689732861,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.48855033103354634,
      "MetricsIntensity" : 0.033027520192742715,
      "Density" : 0.9947396107311941
    },
    "euclideanDistance" : 42.02646946989364,
    "generation" : 8,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5596376446904883,
      "LackOfCohesion" : 0.48855033103354634,
      "MetricsIntensity" : 0.03302752019274271,
      "Density" : 3.0598705501618126
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "eb9c726d-ea57-430b-b67b-8d6acc898b73",
    "objectives" : {
      "NumberOfConcerns" : 0.9977470228516253,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.4891195638035117,
      "MetricsIntensity" : 0.03294008317895665,
      "Density" : 0.9945642644222339
    },
    "euclideanDistance" : 42.02647951226049,
    "generation" : 21,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5601409159536992,
      "LackOfCohesion" : 0.4891195638035117,
      "MetricsIntensity" : 0.03294008317895665,
      "Density" : 3.062634989200864
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "a89142f6-5058-4c92-8135-e060748e74d9",
    "objectives" : {
      "NumberOfConcerns" : 0.9983907306083039,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.48837356442447816,
      "MetricsIntensity" : 0.032923791996766934,
      "Density" : 0.9947396107311941
    },
    "euclideanDistance" : 42.026490261008355,
    "generation" : 43,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.56036217303823,
      "LackOfCohesion" : 0.48837356442447816,
      "MetricsIntensity" : 0.032923791996766934,
      "Density" : 3.059870550161813
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "ff304be4-7405-4017-8605-d92b936a7169",
    "objectives" : {
      "NumberOfConcerns" : 0.9974251689732861,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.48744096865162423,
      "MetricsIntensity" : 0.032949665145477536,
      "Density" : 0.9977204979835175
    },
    "euclideanDistance" : 42.02652718864778,
    "generation" : 42,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5596376446904876,
      "LackOfCohesion" : 0.48744096865162423,
      "MetricsIntensity" : 0.032949665145477536,
      "Density" : 3.0673854447439353
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "90a5a809-702e-4013-88ad-440213376f35",
    "objectives" : {
      "NumberOfConcerns" : 0.9971033150949469,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.487404167558962,
      "MetricsIntensity" : 0.03299541231242411,
      "Density" : 0.9980711906014378
    },
    "euclideanDistance" : 42.02652748731769,
    "generation" : 9,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5591343734272776,
      "LackOfCohesion" : 0.487404167558962,
      "MetricsIntensity" : 0.03299541231242411,
      "Density" : 3.068463611859838
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "1827bdee-d05c-4750-a3e8-5e6b8811a240",
    "objectives" : {
      "NumberOfConcerns" : 0.9971033150949469,
      "NumberOfRefactorings" : 43.0,
      "LackOfCohesion" : 0.48853981910250466,
      "MetricsIntensity" : 0.033019636244461414,
      "Density" : 0.9942135718043135
    },
    "euclideanDistance" : 43.02583453111119,
    "generation" : 23,
    "numberOfRefactorings" : 43,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5591343734272778,
      "LackOfCohesion" : 0.48853981910250466,
      "MetricsIntensity" : 0.033019636244461414,
      "Density" : 3.05990286022666
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "207385f3-dd1d-4f9b-a393-d0fd89e0b936",
    "objectives" : {
      "NumberOfConcerns" : 0.9971033150949469,
      "NumberOfRefactorings" : 43.0,
      "LackOfCohesion" : 0.4885398191025046,
      "MetricsIntensity" : 0.03301963624446142,
      "Density" : 0.9942135718043135
    },
    "euclideanDistance" : 43.02583453111119,
    "generation" : 42,
    "numberOfRefactorings" : 43,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5591343734272778,
      "LackOfCohesion" : 0.4885398191025046,
      "MetricsIntensity" : 0.03301963624446142,
      "Density" : 3.0599028602266594
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "0a68fe14-3f71-4ed1-8eb5-3d9ec3fbc35b",
    "objectives" : {
      "NumberOfConcerns" : 0.998712584486643,
      "NumberOfRefactorings" : 43.0,
      "LackOfCohesion" : 0.4882315166460209,
      "MetricsIntensity" : 0.0329243963575626,
      "Density" : 0.9950903033491145
    },
    "euclideanDistance" : 43.02588855059188,
    "generation" : 31,
    "numberOfRefactorings" : 43,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5616507297433324,
      "LackOfCohesion" : 0.4882315166460209,
      "MetricsIntensity" : 0.0329243963575626,
      "Density" : 3.0609492988133766
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "34db9c46-f590-465a-bb6d-3cc8d09f1a41",
    "objectives" : {
      "NumberOfConcerns" : 0.9974251689732861,
      "NumberOfRefactorings" : 45.0,
      "LackOfCohesion" : 0.4889641936568171,
      "MetricsIntensity" : 0.03296759067026679,
      "Density" : 0.9943889181132737
    },
    "euclideanDistance" : 45.02470254352472,
    "generation" : 45,
    "numberOfRefactorings" : 45,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.559637644690488,
      "LackOfCohesion" : 0.4889641936568171,
      "MetricsIntensity" : 0.03296759067026679,
      "Density" : 3.060442525634106
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "0e190a4f-850d-44d6-89f1-71d758f0acca",
    "objectives" : {
      "NumberOfConcerns" : 0.9971033150949469,
      "NumberOfRefactorings" : 45.0,
      "LackOfCohesion" : 0.4889273925641553,
      "MetricsIntensity" : 0.033013336538931216,
      "Density" : 0.9947396107311941
    },
    "euclideanDistance" : 45.02470279512925,
    "generation" : 41,
    "numberOfRefactorings" : 45,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5591343734272776,
      "LackOfCohesion" : 0.4889273925641553,
      "MetricsIntensity" : 0.033013336538931216,
      "Density" : 3.061521856449001
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "34476feb-b47a-4a0e-a32d-c90df57a1a0f",
    "objectives" : {
      "NumberOfConcerns" : 0.9977470228516253,
      "NumberOfRefactorings" : 45.0,
      "LackOfCohesion" : 0.488963208163282,
      "MetricsIntensity" : 0.03292725167860691,
      "Density" : 0.9947396107311941
    },
    "euclideanDistance" : 45.024717380985386,
    "generation" : 44,
    "numberOfRefactorings" : 45,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5601409159536987,
      "LackOfCohesion" : 0.488963208163282,
      "MetricsIntensity" : 0.03292725167860691,
      "Density" : 3.0615218564490014
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "9dc330c9-18db-46c3-947c-0033feb2d7bf",
    "objectives" : {
      "NumberOfConcerns" : 0.9974251689732861,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.48948756916312897,
      "MetricsIntensity" : 0.03296687249972741,
      "Density" : 0.9938628791863932
    },
    "euclideanDistance" : 50.02222811196412,
    "generation" : 26,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5604229607250748,
      "LackOfCohesion" : 0.48948756916312897,
      "MetricsIntensity" : 0.03296687249972741,
      "Density" : 3.06047516198704
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "b414ffb4-2d95-44b2-89de-685f91968ebf",
    "objectives" : {
      "NumberOfConcerns" : 0.9971033150949469,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.48945074774959857,
      "MetricsIntensity" : 0.0330126462263947,
      "Density" : 0.9942135718043135
    },
    "euclideanDistance" : 50.02222833417777,
    "generation" : 22,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5599194360523658,
      "LackOfCohesion" : 0.48945074774959857,
      "MetricsIntensity" : 0.03301264622639471,
      "Density" : 3.061555075593953
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "0f8fbf65-5e4c-4a12-abab-bade3e9a75a7",
    "objectives" : {
      "NumberOfConcerns" : 0.9977470228516253,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.48948658312542287,
      "MetricsIntensity" : 0.03292651123363812,
      "Density" : 0.9942135718043135
    },
    "euclideanDistance" : 50.02224146335479,
    "generation" : 28,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560926485397784,
      "LackOfCohesion" : 0.48948658312542287,
      "MetricsIntensity" : 0.03292651123363812,
      "Density" : 3.061555075593953
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "656263ff-5060-445b-9e88-1d85a49b370e",
    "objectives" : {
      "NumberOfConcerns" : 0.9974251689732861,
      "NumberOfRefactorings" : 52.0,
      "LackOfCohesion" : 0.4898753566355255,
      "MetricsIntensity" : 0.03296057191361688,
      "Density" : 0.9943889181132737
    },
    "euclideanDistance" : 52.021387241715374,
    "generation" : 20,
    "numberOfRefactorings" : 52,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560422960725075,
      "LackOfCohesion" : 0.4898753566355255,
      "MetricsIntensity" : 0.03296057191361688,
      "Density" : 3.0620950323974077
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "5226eb64-3ab0-4e31-9325-874c0d657188",
    "objectives" : {
      "NumberOfConcerns" : 0.9971033150949469,
      "NumberOfRefactorings" : 52.0,
      "LackOfCohesion" : 0.4898385352219951,
      "MetricsIntensity" : 0.03300634304228608,
      "Density" : 0.9947396107311941
    },
    "euclideanDistance" : 52.02138745865397,
    "generation" : 38,
    "numberOfRefactorings" : 52,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5599194360523663,
      "LackOfCohesion" : 0.4898385352219951,
      "MetricsIntensity" : 0.033006343042286085,
      "Density" : 3.0631749460043203
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "f03dd4a3-c6bd-4034-9f69-030e4112bb62",
    "objectives" : {
      "NumberOfConcerns" : 0.9974251689732861,
      "NumberOfRefactorings" : 52.0,
      "LackOfCohesion" : 0.48983754918428907,
      "MetricsIntensity" : 0.032965974396818955,
      "Density" : 0.9950903033491145
    },
    "euclideanDistance" : 52.02140030083369,
    "generation" : 34,
    "numberOfRefactorings" : 52,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560422960725075,
      "LackOfCohesion" : 0.48983754918428907,
      "MetricsIntensity" : 0.03296597439681895,
      "Density" : 3.0642548596112302
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "3c715ed8-732f-436d-a453-8b814725095a",
    "objectives" : {
      "NumberOfConcerns" : 0.9971033150949469,
      "NumberOfRefactorings" : 53.0,
      "LackOfCohesion" : 0.4892943057727369,
      "MetricsIntensity" : 0.03299979766335686,
      "Density" : 0.9943889181132737
    },
    "euclideanDistance" : 53.02097247548131,
    "generation" : 22,
    "numberOfRefactorings" : 53,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5599194360523658,
      "LackOfCohesion" : 0.4892943057727369,
      "MetricsIntensity" : 0.03299979766335686,
      "Density" : 3.0604425256341066
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "44f8cae5-b7ee-48bd-8095-f1bdb49b61c2",
    "objectives" : {
      "NumberOfConcerns" : 0.9967814612166077,
      "NumberOfRefactorings" : 53.0,
      "LackOfCohesion" : 0.4892574843592063,
      "MetricsIntensity" : 0.033045571390024175,
      "Density" : 0.9947396107311941
    },
    "euclideanDistance" : 53.0209726907228,
    "generation" : 21,
    "numberOfRefactorings" : 53,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5594159113796568,
      "LackOfCohesion" : 0.4892574843592063,
      "MetricsIntensity" : 0.033045571390024175,
      "Density" : 3.0615218564490014
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "f8d0245a-fea7-4f64-8a6f-018a681a0989",
    "objectives" : {
      "NumberOfConcerns" : 0.9967814612166077,
      "NumberOfRefactorings" : 53.0,
      "LackOfCohesion" : 0.48925748435920663,
      "MetricsIntensity" : 0.03304557139002417,
      "Density" : 0.9947396107311941
    },
    "euclideanDistance" : 53.0209726907228,
    "generation" : 24,
    "numberOfRefactorings" : 53,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.559415911379657,
      "LackOfCohesion" : 0.48925748435920663,
      "MetricsIntensity" : 0.03304557139002417,
      "Density" : 3.0615218564490014
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "fed811f6-213a-4c40-85a6-a7bf085d82fc",
    "objectives" : {
      "NumberOfConcerns" : 0.9974251689732861,
      "NumberOfRefactorings" : 53.0,
      "LackOfCohesion" : 0.4892933197350309,
      "MetricsIntensity" : 0.03295943639726757,
      "Density" : 0.9947396107311941
    },
    "euclideanDistance" : 53.020985073252305,
    "generation" : 42,
    "numberOfRefactorings" : 53,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5604229607250755,
      "LackOfCohesion" : 0.4892933197350309,
      "MetricsIntensity" : 0.032959436397267575,
      "Density" : 3.061521856448999
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "222f5de4-3b9b-447b-b000-087a3166e759",
    "objectives" : {
      "NumberOfConcerns" : 0.9971033150949469,
      "NumberOfRefactorings" : 53.0,
      "LackOfCohesion" : 0.4892564983215001,
      "MetricsIntensity" : 0.03300520274455706,
      "Density" : 0.9950903033491145
    },
    "euclideanDistance" : 53.02098528882079,
    "generation" : 44,
    "numberOfRefactorings" : 53,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5599194360523665,
      "LackOfCohesion" : 0.4892564983215001,
      "MetricsIntensity" : 0.03300520274455706,
      "Density" : 3.062601187263897
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "3ad3895c-15d5-4f2f-a28d-728df11c9222",
    "objectives" : {
      "NumberOfConcerns" : 0.9971033150949469,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.4896820932451335,
      "MetricsIntensity" : 0.032993497077246324,
      "Density" : 0.9949149570401543
    },
    "euclideanDistance" : 55.02022308129993,
    "generation" : 33,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5599194360523658,
      "LackOfCohesion" : 0.4896820932451335,
      "MetricsIntensity" : 0.03299349707724633,
      "Density" : 3.0620615218564486
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "3dd5d32d-72a4-42b5-bcc1-2581dae877b9",
    "objectives" : {
      "NumberOfConcerns" : 0.9967814612166077,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.4896452718316031,
      "MetricsIntensity" : 0.03303926820591554,
      "Density" : 0.9952656496580747
    },
    "euclideanDistance" : 55.02022329180685,
    "generation" : 23,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.559415911379657,
      "LackOfCohesion" : 0.4896452718316031,
      "MetricsIntensity" : 0.033039268205915545,
      "Density" : 3.063140852671343
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.model.AsyncPeriodicWork'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.views.DefaultViewsTabBar.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "d630dfd7-146b-4735-98c8-5841dbb694b3",
    "objectives" : {
      "NumberOfConcerns" : 0.9974251689732861,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.4896811072074274,
      "MetricsIntensity" : 0.03295313581115704,
      "Density" : 0.9952656496580747
    },
    "euclideanDistance" : 55.02023522466081,
    "generation" : 32,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5604229607250741,
      "LackOfCohesion" : 0.4896811072074274,
      "MetricsIntensity" : 0.032953135811157046,
      "Density" : 3.063140852671343
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  }, {
    "solutionId" : "3592a66a-d8ae-45f4-9ab8-8126e22b50b3",
    "objectives" : {
      "NumberOfConcerns" : 0.9971033150949469,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.4896442857938971,
      "MetricsIntensity" : 0.03299889956044842,
      "Density" : 0.995616342275995
    },
    "euclideanDistance" : 55.02023543548285,
    "generation" : 16,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5599194360523656,
      "LackOfCohesion" : 0.4896442857938971,
      "MetricsIntensity" : 0.03299889956044843,
      "Density" : 3.0642201834862384
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='jenkins.security.HexStringConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.security.stapler.DoActionFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.security.stapler.DoActionFilter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.RestartListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.util.XStream2.MapperInjectionPoint'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='jenkins.model.IdStrategy.CaseSensitive'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.model.Computer.ListPossibleNames'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.CryptoConfidentialKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.CryptoConfidentialKey'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='jenkins.slaves.systemInfo.ClassLoaderStatisticsSlaveInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.cli.NoCheckTrustManager'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.SymlinkRetainingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.stapler.StaplerDispatchValidator.ValidatorCache.Validator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.scm.SCMCheckoutStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.scm.SCMCheckoutStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm.Authenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.util.io.CompositeIOException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.DeleteRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.ProjectNamingStrategy.DefaultProjectNamingStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.FrameOptionsPageDecorator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.lifecycle.UnixLifecycle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.telemetry.Correlator'"
      } ]
    } ]
  } ]
}