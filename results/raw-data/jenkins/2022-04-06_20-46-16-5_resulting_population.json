{
  "executionId" : "50625be8-9a0b-4c6b-8f19-8724587931db",
  "computingTime" : 11478,
  "maxEvaluations" : 1000,
  "initialPopulationSize" : 50,
  "finalPopulationSize" : 34,
  "algorithm" : "Baseline",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.077711818672422,
    "meanNumConcerns" : 1.5644511581067468,
    "meanMetricsIntensity" : 0.03296937024300845,
    "meanLackOfCohesion" : 0.485350300503555
  },
  "population" : [ {
    "solutionId" : "87e72ac2-32e8-493a-8386-d312e584ba64",
    "objectives" : {
      "NumberOfConcerns" : 1.0019311232700354,
      "NumberOfRefactorings" : 3.0,
      "LackOfCohesion" : 0.48551344341543395,
      "MetricsIntensity" : 0.032924638117904415,
      "Density" : 1.002630194634403
    },
    "euclideanDistance" : 3.353496774786295,
    "generation" : 0,
    "numberOfRefactorings" : 3,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5651080945198592,
      "LackOfCohesion" : 0.48551344341543395,
      "MetricsIntensity" : 0.032924638117904415,
      "Density" : 3.0808189655172424,
      "baselineType" : "EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    } ]
  }, {
    "solutionId" : "8b224a4d-9bdb-451f-af73-48ec82af5bc4",
    "objectives" : {
      "NumberOfConcerns" : 1.0045059542967494,
      "NumberOfRefactorings" : 8.0,
      "LackOfCohesion" : 0.4862488225518533,
      "MetricsIntensity" : 0.03289578175951601,
      "Density" : 1.0021041557075223
    },
    "euclideanDistance" : 8.139457291551725,
    "generation" : 0,
    "numberOfRefactorings" : 8,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5651955867602807,
      "LackOfCohesion" : 0.4862488225518533,
      "MetricsIntensity" : 0.03289578175951601,
      "Density" : 3.072580645161291,
      "baselineType" : "CONCERN_EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "013df3c1-b72d-425d-9337-54d149fd5c04",
    "objectives" : {
      "NumberOfConcerns" : 1.0028966849050531,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48628326695460844,
      "MetricsIntensity" : 0.03287805802988335,
      "Density" : 1.0003506926179204
    },
    "euclideanDistance" : 11.10153393235523,
    "generation" : 0,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5634721525338682,
      "LackOfCohesion" : 0.48628326695460844,
      "MetricsIntensity" : 0.03287805802988335,
      "Density" : 3.0688542227003763,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      } ]
    } ]
  }, {
    "solutionId" : "588c0f8f-7305-47be-bc47-d262a485bead",
    "objectives" : {
      "NumberOfConcerns" : 0.9993562922433216,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48505150830407895,
      "MetricsIntensity" : 0.03285041328526365,
      "Density" : 0.9975451516745573
    },
    "euclideanDistance" : 13.08549439050114,
    "generation" : 0,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5634441087613282,
      "LackOfCohesion" : 0.48505150830407895,
      "MetricsIntensity" : 0.032850413285263655,
      "Density" : 3.068500539374325,
      "baselineType" : "MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "426cf0d3-8f99-470b-a483-4ec8ff17349b",
    "objectives" : {
      "NumberOfConcerns" : 1.0022529771483746,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48658048609208854,
      "MetricsIntensity" : 0.03289083006590303,
      "Density" : 1.0001753463089602
    },
    "euclideanDistance" : 14.079868753994658,
    "generation" : 0,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5632530120481924,
      "LackOfCohesion" : 0.48658048609208854,
      "MetricsIntensity" : 0.03289083006590303,
      "Density" : 3.0699677072120557,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.security.UserDetailsCache.Retriever'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.init.InitStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.views.JobColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.views.JobColumn'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.model.lazy.LazyBuildMixIn.ItemListenerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.Launcher.RemoteLauncher'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "63cfabfb-7182-4857-8746-277acfab69b1",
    "objectives" : {
      "NumberOfConcerns" : 1.0012874155133569,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48662101598444785,
      "MetricsIntensity" : 0.03291236945554838,
      "Density" : 1.0029808872523234
    },
    "euclideanDistance" : 21.05341849643235,
    "generation" : 0,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5617469879518076,
      "LackOfCohesion" : 0.48662101598444785,
      "MetricsIntensity" : 0.03291236945554838,
      "Density" : 3.078579117330463,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.FilePathFilterAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.FileSystemProvisioner.Default'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.BuiltInNodeMigration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.management.StatisticsLink'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      } ]
    } ]
  }, {
    "solutionId" : "d4e1eb31-d3bb-4160-aaa7-50a879528c70",
    "objectives" : {
      "NumberOfConcerns" : 1.0022529771483746,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.48605230747607586,
      "MetricsIntensity" : 0.032888796696727354,
      "Density" : 0.9998246536910398
    },
    "euclideanDistance" : 22.0508840840199,
    "generation" : 0,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5632530120481924,
      "LackOfCohesion" : 0.48605230747607586,
      "MetricsIntensity" : 0.032888796696727354,
      "Density" : 3.0672404518558354,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.console.UrlAnnotator.UrlConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.model.User.CanonicalIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "5d85e719-2750-4b6d-9a1a-e183ce108ea9",
    "objectives" : {
      "NumberOfConcerns" : 1.0006437077566785,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4864800367132878,
      "MetricsIntensity" : 0.03288150012708053,
      "Density" : 0.998246536910398
    },
    "euclideanDistance" : 23.0485471992813,
    "generation" : 0,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5623115577889446,
      "LackOfCohesion" : 0.4864800367132878,
      "MetricsIntensity" : 0.03288150012708053,
      "Density" : 3.064047362755651,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.console.UrlAnnotator.UrlConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.model.User.CanonicalIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "2720d59d-8df3-48f1-901c-73b9a4ff1066",
    "objectives" : {
      "NumberOfConcerns" : 1.0016092693916963,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.48719805650705855,
      "MetricsIntensity" : 0.032895382904728224,
      "Density" : 1.0
    },
    "euclideanDistance" : 23.048680334913147,
    "generation" : 0,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5622489959839359,
      "LackOfCohesion" : 0.48719805650705855,
      "MetricsIntensity" : 0.03289538290472822,
      "Density" : 3.0694294940796545,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.ReadFromTar'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.views.BuildButtonColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.tasks.BatchFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.tasks.BatchFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.model.InterruptedBuildAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.model.View.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.model.View.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.FilePath.Exists'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "633fea0d-bffb-439a-bb34-8cf2eef7d4d2",
    "objectives" : {
      "NumberOfConcerns" : 1.0003218538783392,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48721846918112166,
      "MetricsIntensity" : 0.03290937003092582,
      "Density" : 0.9987725758372786
    },
    "euclideanDistance" : 24.04655183873435,
    "generation" : 0,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5618090452261306,
      "LackOfCohesion" : 0.48721846918112166,
      "MetricsIntensity" : 0.03290937003092582,
      "Density" : 3.067312870220786,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.security.UserDetailsCache.Retriever'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.init.InitStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.views.JobColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.views.JobColumn'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.model.lazy.LazyBuildMixIn.ItemListenerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.Launcher.RemoteLauncher'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.console.UrlAnnotator.UrlConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.model.User.CanonicalIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "f112d279-fd71-45b4-959a-a70beec223b6",
    "objectives" : {
      "NumberOfConcerns" : 1.0006437077566785,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.4875146204871751,
      "MetricsIntensity" : 0.03288942086262336,
      "Density" : 0.999123268455199
    },
    "euclideanDistance" : 24.046585773340777,
    "generation" : 0,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.563097033685269,
      "LackOfCohesion" : 0.4875146204871751,
      "MetricsIntensity" : 0.03288942086262335,
      "Density" : 3.068389876144319,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.security.UserDetailsCache.Retriever'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.init.InitStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.views.JobColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.views.JobColumn'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.console.UrlAnnotator.UrlConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.model.User.CanonicalIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "a49e38c8-68ed-4a9c-a60e-595c0ef20088",
    "objectives" : {
      "NumberOfConcerns" : 1.0022529771483746,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.4877840441581818,
      "MetricsIntensity" : 0.03284007964760725,
      "Density" : 1.0022795020164825
    },
    "euclideanDistance" : 24.046789535714158,
    "generation" : 0,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5640381717729785,
      "LackOfCohesion" : 0.4877840441581818,
      "MetricsIntensity" : 0.03284007964760725,
      "Density" : 3.0764262648008627,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.console.UrlAnnotator.UrlConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.model.User.CanonicalIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "2655bfe8-a089-49b2-933b-94a7c6f8ca95",
    "objectives" : {
      "NumberOfConcerns" : 0.9983907306083039,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4860866867262297,
      "MetricsIntensity" : 0.03289193570992556,
      "Density" : 0.9971944590566368
    },
    "euclideanDistance" : 25.044531199177698,
    "generation" : 0,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5595776772247352,
      "LackOfCohesion" : 0.4860866867262297,
      "MetricsIntensity" : 0.03289193570992556,
      "Density" : 3.0641163793103448,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.util.CopyOnWriteMap.Tree'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.util.CopyOnWriteMap.Tree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.util.io.Archiver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.util.io.Archiver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.console.UrlAnnotator.UrlConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.model.User.CanonicalIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "d6a994cf-32f8-47f9-8f0d-4fbef1e61f54",
    "objectives" : {
      "NumberOfConcerns" : 0.9993562922433216,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.48585328891298896,
      "MetricsIntensity" : 0.03288564393745607,
      "Density" : 0.9984218832193582
    },
    "euclideanDistance" : 25.044614074480414,
    "generation" : 0,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560301507537689,
      "LackOfCohesion" : 0.48585328891298896,
      "MetricsIntensity" : 0.03288564393745607,
      "Density" : 3.0678879310344818,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.UpdateCenter.DownloadJob.SuccessButRequiresRestart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.FilePath.IsDescendant'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.MaskingClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.model.lazy.LazyBuildMixIn.ItemListenerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.Launcher.RemoteLauncher'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.FilePathFilterAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.FileSystemProvisioner.Default'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.BuiltInNodeMigration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.management.StatisticsLink'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "4ec69e05-87ed-4c37-abe7-a067f2d358d1",
    "objectives" : {
      "NumberOfConcerns" : 1.0016092693916963,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4863002909682353,
      "MetricsIntensity" : 0.03289142465249221,
      "Density" : 0.9992986147641593
    },
    "euclideanDistance" : 25.04474772619625,
    "generation" : 0,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5630336514314416,
      "LackOfCohesion" : 0.4863002909682353,
      "MetricsIntensity" : 0.03289142465249221,
      "Density" : 3.0672766415500554,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.UpdateCenter.DownloadJob.SuccessButRequiresRestart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.FilePath.IsDescendant'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.MaskingClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.console.UrlAnnotator.UrlConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.model.User.CanonicalIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "0aeb3a1c-b92a-4aa4-b430-e07d11359f82",
    "objectives" : {
      "NumberOfConcerns" : 0.9993562922433216,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48492887447054306,
      "MetricsIntensity" : 0.032876642451739505,
      "Density" : 0.998246536910398
    },
    "euclideanDistance" : 26.042877069060825,
    "generation" : 0,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5603015075376885,
      "LackOfCohesion" : 0.48492887447054306,
      "MetricsIntensity" : 0.032876642451739505,
      "Density" : 3.067349137931035,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.UpdateCenter.DownloadJob.SuccessButRequiresRestart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.FilePath.IsDescendant'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.MaskingClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.FilePathFilterAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.FileSystemProvisioner.Default'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.BuiltInNodeMigration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.management.StatisticsLink'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "8a63db97-af19-452e-a335-a11d8ef3505c",
    "objectives" : {
      "NumberOfConcerns" : 0.9983907306083039,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.4854163404331112,
      "MetricsIntensity" : 0.03293673012525906,
      "Density" : 0.9985972295283184
    },
    "euclideanDistance" : 27.041277601650723,
    "generation" : 0,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5587939698492463,
      "LackOfCohesion" : 0.4854163404331112,
      "MetricsIntensity" : 0.032936730125259064,
      "Density" : 3.068426724137931,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.util.CopyOnWriteMap.Tree'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.util.CopyOnWriteMap.Tree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.util.io.Archiver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.util.io.Archiver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.UpdateCenter.DownloadJob.SuccessButRequiresRestart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.FilePath.IsDescendant'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.MaskingClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.FilePathFilterAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.FileSystemProvisioner.Default'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.BuiltInNodeMigration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.management.StatisticsLink'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "ffa2f55e-cf24-45a9-ba4e-ba0fdc5c13eb",
    "objectives" : {
      "NumberOfConcerns" : 0.9996781461216607,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.48660266252852424,
      "MetricsIntensity" : 0.032931732126875085,
      "Density" : 0.9996493073820796
    },
    "euclideanDistance" : 27.04138535252481,
    "generation" : 0,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560804020100503,
      "LackOfCohesion" : 0.48660266252852424,
      "MetricsIntensity" : 0.032931732126875085,
      "Density" : 3.0716594827586214,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.security.UserDetailsCache.Retriever'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.init.InitStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.views.JobColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.views.JobColumn'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.UpdateCenter.DownloadJob.SuccessButRequiresRestart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.FilePath.IsDescendant'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.MaskingClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.FilePathFilterAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.FileSystemProvisioner.Default'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.BuiltInNodeMigration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.management.StatisticsLink'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      } ]
    } ]
  }, {
    "solutionId" : "1e20b7df-c0de-4d73-a99d-4b816c6f824e",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48622319116262375,
      "MetricsIntensity" : 0.03290059163003996,
      "Density" : 0.9977204979835175
    },
    "euclideanDistance" : 28.039811187696852,
    "generation" : 0,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5605832076420303,
      "LackOfCohesion" : 0.48622319116262375,
      "MetricsIntensity" : 0.03290059163003996,
      "Density" : 3.065732758620689,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.util.CopyOnWriteMap.Tree'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.util.CopyOnWriteMap.Tree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.util.io.Archiver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.util.io.Archiver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.UpdateCenter.DownloadJob.SuccessButRequiresRestart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.FilePath.IsDescendant'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.MaskingClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.console.UrlAnnotator.UrlConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.model.User.CanonicalIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "75eeefb8-2042-44e2-97cf-aa8f461be27a",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.4865332915291291,
      "MetricsIntensity" : 0.0328856194120613,
      "Density" : 0.9975451516745573
    },
    "euclideanDistance" : 29.038439390683497,
    "generation" : 0,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5605832076420307,
      "LackOfCohesion" : 0.4865332915291291,
      "MetricsIntensity" : 0.0328856194120613,
      "Density" : 3.0668463611859837,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.ReadFromTar'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.views.BuildButtonColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.tasks.BatchFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.tasks.BatchFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.model.InterruptedBuildAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.model.View.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.model.View.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.FilePath.Exists'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.model.lazy.LazyBuildMixIn.ItemListenerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.Launcher.RemoteLauncher'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "3ee3fb82-1aa6-4bc5-84c0-0fba2eacb82f",
    "objectives" : {
      "NumberOfConcerns" : 0.9993562922433216,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.48604823434189176,
      "MetricsIntensity" : 0.032936653608772744,
      "Density" : 0.9987725758372786
    },
    "euclideanDistance" : 30.037203387904622,
    "generation" : 0,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5603015075376885,
      "LackOfCohesion" : 0.48604823434189176,
      "MetricsIntensity" : 0.032936653608772744,
      "Density" : 3.065662002152852,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.FilePathFilterAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.FileSystemProvisioner.Default'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.BuiltInNodeMigration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.management.StatisticsLink'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.console.UrlAnnotator.UrlConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.model.User.CanonicalIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "7063491f-529f-40ba-926f-6c7b2731fb77",
    "objectives" : {
      "NumberOfConcerns" : 0.9996781461216607,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.4864476149082189,
      "MetricsIntensity" : 0.032937019699092816,
      "Density" : 0.9992986147641593
    },
    "euclideanDistance" : 30.037238059558995,
    "generation" : 0,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560020090406831,
      "LackOfCohesion" : 0.4864476149082189,
      "MetricsIntensity" : 0.032937019699092816,
      "Density" : 3.070581896551725,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.util.CopyOnWriteMap.Tree'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.util.CopyOnWriteMap.Tree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.util.io.Archiver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.util.io.Archiver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.ReadFromTar'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.views.BuildButtonColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.tasks.BatchFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.tasks.BatchFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.model.InterruptedBuildAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.model.View.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.model.View.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.FilePath.Exists'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.security.UserDetailsCache.Retriever'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.init.InitStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.views.JobColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.views.JobColumn'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "e257f43e-f16d-491f-bdb2-c861dae6828d",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.4870451928249375,
      "MetricsIntensity" : 0.03291187119632065,
      "Density" : 0.9985972295283184
    },
    "euclideanDistance" : 31.036004292546753,
    "generation" : 0,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5605832076420307,
      "LackOfCohesion" : 0.4870451928249375,
      "MetricsIntensity" : 0.03291187119632064,
      "Density" : 3.0700808625336924,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.util.CopyOnWriteMap.Tree'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.util.CopyOnWriteMap.Tree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.util.io.Archiver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.util.io.Archiver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.ReadFromTar'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.views.BuildButtonColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.tasks.BatchFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.tasks.BatchFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.model.InterruptedBuildAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.model.View.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.model.View.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.FilePath.Exists'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.UpdateCenter.DownloadJob.SuccessButRequiresRestart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.FilePath.IsDescendant'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.MaskingClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "1cf61cb9-cf20-438c-90e1-a213bb267041",
    "objectives" : {
      "NumberOfConcerns" : 1.0006437077566785,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.4862502545439118,
      "MetricsIntensity" : 0.03291426428336158,
      "Density" : 0.9996493073820796
    },
    "euclideanDistance" : 31.036077542538454,
    "generation" : 0,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5623115577889446,
      "LackOfCohesion" : 0.4862502545439118,
      "MetricsIntensity" : 0.032914264283361576,
      "Density" : 3.068353067814855,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.FilePathFilterAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.FileSystemProvisioner.Default'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.BuiltInNodeMigration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.management.StatisticsLink'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.console.UrlAnnotator.UrlConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.model.User.CanonicalIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "e54ec457-ddc5-4fdb-9090-792e2c1ab929",
    "objectives" : {
      "NumberOfConcerns" : 0.998712584486643,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.48593948672019627,
      "MetricsIntensity" : 0.03291645857012087,
      "Density" : 0.9978958442924777
    },
    "euclideanDistance" : 33.03377731384146,
    "generation" : 0,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5600804424333836,
      "LackOfCohesion" : 0.48593948672019627,
      "MetricsIntensity" : 0.03291645857012087,
      "Density" : 3.064620355411955,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.FilePathFilterAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.FileSystemProvisioner.Default'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.BuiltInNodeMigration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.management.StatisticsLink'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.console.UrlAnnotator.UrlConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.model.User.CanonicalIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "8d38d982-a58d-4367-abfe-f81b14396caa",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.48677018526513777,
      "MetricsIntensity" : 0.03288930800876161,
      "Density" : 1.0010520778537613
    },
    "euclideanDistance" : 33.033894744511414,
    "generation" : 0,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5605832076420303,
      "LackOfCohesion" : 0.48677018526513777,
      "MetricsIntensity" : 0.03288930800876161,
      "Density" : 3.0759698275862073,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.FilePathFilterAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.FileSystemProvisioner.Default'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.BuiltInNodeMigration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.management.StatisticsLink'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.console.UrlAnnotator.UrlConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.model.User.CanonicalIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "16c30005-0858-44ac-b66f-925ba348c34e",
    "objectives" : {
      "NumberOfConcerns" : 0.9983907306083039,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.4864394528221934,
      "MetricsIntensity" : 0.032906519770938496,
      "Density" : 0.9977204979835175
    },
    "euclideanDistance" : 34.03277738333101,
    "generation" : 0,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5595776772247363,
      "LackOfCohesion" : 0.4864394528221934,
      "MetricsIntensity" : 0.03290651977093849,
      "Density" : 3.065732758620689,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.model.lazy.LazyBuildMixIn.ItemListenerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.Launcher.RemoteLauncher'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.FilePathFilterAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.FileSystemProvisioner.Default'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.BuiltInNodeMigration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.management.StatisticsLink'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.console.UrlAnnotator.UrlConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.model.User.CanonicalIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "3ec7f951-7613-4d6e-b88f-a1bf250e2849",
    "objectives" : {
      "NumberOfConcerns" : 0.9977470228516253,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48605811097982293,
      "MetricsIntensity" : 0.03290998982721633,
      "Density" : 0.997369805365597
    },
    "euclideanDistance" : 36.03092534483321,
    "generation" : 0,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5593561368209257,
      "LackOfCohesion" : 0.48605811097982293,
      "MetricsIntensity" : 0.03290998982721633,
      "Density" : 3.066307277628032,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.iterator()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.FilePathFilterAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.FileSystemProvisioner.Default'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.BuiltInNodeMigration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.management.StatisticsLink'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.console.UrlAnnotator.UrlConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.model.User.CanonicalIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.diagnostics.ControllerExecutorsNoAgents'"
      } ]
    } ]
  }, {
    "solutionId" : "62826bab-f021-4f24-a7ec-efc9fe7f9938",
    "objectives" : {
      "NumberOfConcerns" : 0.9983907306083039,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.4861856913632473,
      "MetricsIntensity" : 0.03290324014219746,
      "Density" : 0.9984218832193582
    },
    "euclideanDistance" : 36.030974028709714,
    "generation" : 0,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.559577677224736,
      "LackOfCohesion" : 0.4861856913632473,
      "MetricsIntensity" : 0.03290324014219746,
      "Density" : 3.0695417789757418,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.ReadFromTar'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.views.BuildButtonColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.tasks.BatchFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.tasks.BatchFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.model.InterruptedBuildAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.model.View.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.model.View.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.FilePath.Exists'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.FilePathFilterAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.FileSystemProvisioner.Default'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.BuiltInNodeMigration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.management.StatisticsLink'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "3450ce64-acf5-493f-841c-8eb992c6c817",
    "objectives" : {
      "NumberOfConcerns" : 0.9983907306083039,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48644291387925503,
      "MetricsIntensity" : 0.032920270466512434,
      "Density" : 0.9985972295283184
    },
    "euclideanDistance" : 36.030982375317734,
    "generation" : 0,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5603621730382295,
      "LackOfCohesion" : 0.48644291387925503,
      "MetricsIntensity" : 0.032920270466512434,
      "Density" : 3.0700808625336924,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.ReadFromTar'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.views.BuildButtonColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.tasks.BatchFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.tasks.BatchFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.model.InterruptedBuildAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.model.View.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.model.View.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.FilePath.Exists'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.FilePathFilterAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.FileSystemProvisioner.Default'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.BuiltInNodeMigration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.management.StatisticsLink'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "0b643280-6bc9-4586-8516-aa663a262ca8",
    "objectives" : {
      "NumberOfConcerns" : 0.9967814612166077,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.48585189632076825,
      "MetricsIntensity" : 0.032943941249209664,
      "Density" : 0.9975451516745573
    },
    "euclideanDistance" : 41.0271350081806,
    "generation" : 0,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5570638511814978,
      "LackOfCohesion" : 0.48585189632076825,
      "MetricsIntensity" : 0.032943941249209664,
      "Density" : 3.068500539374325,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.util.CopyOnWriteMap.Tree'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.util.CopyOnWriteMap.Tree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.util.io.Archiver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.util.io.Archiver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.ReadFromTar'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.views.BuildButtonColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.tasks.BatchFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.tasks.BatchFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.model.InterruptedBuildAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.model.View.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.model.View.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.FilePath.Exists'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.model.lazy.LazyBuildMixIn.ItemListenerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.Launcher.RemoteLauncher'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.FilePathFilterAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.FileSystemProvisioner.Default'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.BuiltInNodeMigration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.management.StatisticsLink'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "5d1dac69-ad8a-49d1-a440-799ca1708157",
    "objectives" : {
      "NumberOfConcerns" : 0.9967814612166077,
      "NumberOfRefactorings" : 43.0,
      "LackOfCohesion" : 0.48670373650557425,
      "MetricsIntensity" : 0.03293743568135097,
      "Density" : 1.0003506926179204
    },
    "euclideanDistance" : 43.025948451968425,
    "generation" : 0,
    "numberOfRefactorings" : 43,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5570638511814983,
      "LackOfCohesion" : 0.48670373650557425,
      "MetricsIntensity" : 0.03293743568135098,
      "Density" : 3.077130528586839,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.util.CopyOnWriteMap.Tree'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.util.CopyOnWriteMap.Tree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.util.io.Archiver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.util.io.Archiver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.ReadFromTar'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.views.BuildButtonColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.tasks.BatchFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.tasks.BatchFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.model.InterruptedBuildAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.model.View.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.model.View.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.FilePath.Exists'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.UpdateCenter.DownloadJob.SuccessButRequiresRestart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.FilePath.IsDescendant'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.MaskingClassLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.init.TerminatorFinder'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.FilePathFilterAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.FileSystemProvisioner.Default'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.BuiltInNodeMigration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.management.StatisticsLink'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "32f0b1c0-a4f9-44a2-a85c-052209c0a163",
    "objectives" : {
      "NumberOfConcerns" : 0.9971033150949469,
      "NumberOfRefactorings" : 46.0,
      "LackOfCohesion" : 0.48662756822807524,
      "MetricsIntensity" : 0.03296541660150001,
      "Density" : 0.9977204979835175
    },
    "euclideanDistance" : 46.02420617807461,
    "generation" : 0,
    "numberOfRefactorings" : 46,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5583501006036213,
      "LackOfCohesion" : 0.48662756822807524,
      "MetricsIntensity" : 0.03296541660150001,
      "Density" : 3.0673854447439357,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.FilePath.ReadFromTar'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.PasswordParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.views.BuildButtonColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.tasks.BatchFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.tasks.BatchFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.model.InterruptedBuildAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.model.View.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.model.View.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.FilePath.Exists'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.FilePath.Exists'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.model.lazy.LazyBuildMixIn.ItemListenerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.Launcher.RemoteLauncher'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.FilePathFilterAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.FileSystemProvisioner.Default'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='jenkins.model.BuiltInNodeMigration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.management.StatisticsLink'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.console.UrlAnnotator.UrlConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.DualOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.model.User.CanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.model.User.CanonicalIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "6fe178b8-1d1a-4632-ae65-8ef7458e2470",
    "objectives" : {
      "NumberOfConcerns" : 0.9948503379465723,
      "NumberOfRefactorings" : 53.0,
      "LackOfCohesion" : 0.48749573446118494,
      "MetricsIntensity" : 0.03305712688617089,
      "Density" : 0.997369805365597
    },
    "euclideanDistance" : 53.02096961192169,
    "generation" : 0,
    "numberOfRefactorings" : 53,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5563947633434037,
      "LackOfCohesion" : 0.48749573446118494,
      "MetricsIntensity" : 0.033057126886170886,
      "Density" : 3.071274298056156,
      "baselineType" : "CONCERN_MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.FileParameterValue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.util.OneShotEvent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.util.OneShotEvent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.model.Cause.RemoteCause'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.model.Cause.RemoteCause'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.tools.ZipExtractionInstaller.ChmodRecAPlusX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.cli.DiagnosedStreamCorruptionException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='jenkins.JenkinsHttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.cli.AddJobToViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.cli.AddJobToViewCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.util.ForkOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.model.RunParameterValue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.model.RunParameterValue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.util.ProcessTree.Darwin.DarwinProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.util.ProcessTree.Darwin.DarwinProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.util.ProcessTree.Darwin.DarwinProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.util.ProcessTree.Darwin.DarwinProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.util.ProcessTree.Darwin.DarwinProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.ProcessTree.Darwin.DarwinProcess'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.mvn.GlobalMavenConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.search.Search.SearchResultImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.TcpSlaveAgentListener.ConnectionHandlerFailureCallback'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.model.FingerprintFacet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='jenkins.tasks.SimpleBuildStep.LastBuildActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.labels.LabelExpression.Not'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.mvn.GlobalMavenConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.ConfidentialStore.Mock'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.QueueItemAuthenticatorProvider.IterableImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.util.ProcessTree.SerializedProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.slaves.NodeProvisioner.NodeProvisionerInvoker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.View.PropertyList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.util.CopyOnWriteMap.Hash'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.security.UserMayOrMayNotExistException2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.FilePath.HasSymlink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.cli.FlightRecorderInputStream.ByteArrayRingBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.cli.FlightRecorderInputStream.ByteArrayRingBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.cli.FlightRecorderInputStream.ByteArrayRingBuffer'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.cli.FlightRecorderInputStream.ByteArrayRingBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.model.IdStrategy.CaseSensitive.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.model.IdStrategy.CaseSensitive.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.model.IdStrategy.CaseSensitive.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.model.IdStrategy.CaseSensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.io.ReopenableRotatingFileOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.security.ResourceDomainRootAction'"
      } ]
    } ]
  } ]
}