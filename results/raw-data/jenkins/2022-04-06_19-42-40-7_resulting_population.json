{
  "executionId" : "131fb4d4-8df9-4f8e-bd9f-21242d7ff24d",
  "computingTime" : 4216087,
  "maxEvaluations" : 100,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 39,
  "algorithm" : "MOSA",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.128479657387581,
    "meanNumConcerns" : 1.5931520644511583,
    "meanMetricsIntensity" : 0.03296937024300846,
    "meanLackOfCohesion" : 0.48535030050355504
  },
  "population" : [ {
    "solutionId" : "d6cfcff2-9c47-4e4d-81fc-1b8789e4d780",
    "objectives" : {
      "NumberOfConcerns" : 0.9974715549936789,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48522804820894727,
      "MetricsIntensity" : 0.032857372554025994,
      "Density" : 0.9948665297741273
    },
    "euclideanDistance" : 10.110451759480688,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5883241066935079,
      "LackOfCohesion" : 0.48522804820894727,
      "MetricsIntensity" : 0.032857372554025994,
      "Density" : 3.112419700214133
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='jenkins.model.GlobalProjectNamingStrategyConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.issueCrumb(ServletRequest, String)', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor.RevokeAllSelectedModel'"
      } ]
    } ]
  }, {
    "solutionId" : "a1789ea5-4338-45c1-8cee-e174a2dd7275",
    "objectives" : {
      "NumberOfConcerns" : 0.9971554993678887,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48659916766949046,
      "MetricsIntensity" : 0.03282433522020749,
      "Density" : 0.9958932238193019
    },
    "euclideanDistance" : 10.110587450298233,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5878208354302972,
      "LackOfCohesion" : 0.48659916766949046,
      "MetricsIntensity" : 0.03282433522020749,
      "Density" : 3.1156316916488223
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.fastTail(int)', targetType='hudson.cli.PlainCLIProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "6068d9cb-df99-4a8c-96e2-e42a75ba1995",
    "objectives" : {
      "NumberOfConcerns" : 0.9958912768647282,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4867883550534214,
      "MetricsIntensity" : 0.032869404736926844,
      "Density" : 0.992984257357974
    },
    "euclideanDistance" : 11.100263982044725,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5858077503774533,
      "LackOfCohesion" : 0.4867883550534214,
      "MetricsIntensity" : 0.032869404736926844,
      "Density" : 3.1065310492505356
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onLocale(String)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.fastTail(int)', targetType='hudson.cli.PlainCLIProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "4e841b49-6036-4b57-9cbd-b0d466aec516",
    "objectives" : {
      "NumberOfConcerns" : 0.9965233881163085,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4850440894157168,
      "MetricsIntensity" : 0.03285793021615025,
      "Density" : 0.9940109514031485
    },
    "euclideanDistance" : 11.100336213233698,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5868142929038753,
      "LackOfCohesion" : 0.4850440894157168,
      "MetricsIntensity" : 0.03285793021615026,
      "Density" : 3.1097430406852253
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='jenkins.model.GlobalProjectNamingStrategyConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.checkPermission(Job<?,?>, BuildAuthorizationToken, StaplerRequest, StaplerResponse)', targetType='hudson.cli.ReloadJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.issueCrumb(ServletRequest, String)', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor.RevokeAllSelectedModel'"
      } ]
    } ]
  }, {
    "solutionId" : "4b11930c-590a-4111-9a66-8b7356ac8f5e",
    "objectives" : {
      "NumberOfConcerns" : 0.9974715549936789,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4858689535447947,
      "MetricsIntensity" : 0.03284814217618854,
      "Density" : 0.9938398357289527
    },
    "euclideanDistance" : 11.100442097617842,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5875251509054324,
      "LackOfCohesion" : 0.4858689535447947,
      "MetricsIntensity" : 0.03284814217618855,
      "Density" : 3.1075441412520064
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onLocale(String)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "3572f402-214b-4d06-8e64-588abc772d84",
    "objectives" : {
      "NumberOfConcerns" : 0.9971554993678887,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4851872746582398,
      "MetricsIntensity" : 0.03285737255402603,
      "Density" : 0.9945242984257358
    },
    "euclideanDistance" : 11.100445214877658,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5878208354302974,
      "LackOfCohesion" : 0.4851872746582398,
      "MetricsIntensity" : 0.03285737255402603,
      "Density" : 3.11134903640257
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='jenkins.model.GlobalProjectNamingStrategyConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.issueCrumb(ServletRequest, String)', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor.RevokeAllSelectedModel'"
      } ]
    } ]
  }, {
    "solutionId" : "c629296a-7dd1-43f1-abd3-c992211db9b5",
    "objectives" : {
      "NumberOfConcerns" : 0.9981036662452591,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4867247531888597,
      "MetricsIntensity" : 0.03280312375764511,
      "Density" : 0.9962354551676934
    },
    "euclideanDistance" : 11.100751012476607,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.588531187122736,
      "LackOfCohesion" : 0.4867247531888597,
      "MetricsIntensity" : 0.03280312375764511,
      "Density" : 3.1150347779561267
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int), hudson.model.queue.MappingWorksheet.Mapping.assign(int, ExecutorChunk)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.fastTail(int)', targetType='hudson.cli.PlainCLIProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "e80c64e9-5436-4b68-8209-5e7aebc00961",
    "objectives" : {
      "NumberOfConcerns" : 0.9981036662452591,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4867247531888598,
      "MetricsIntensity" : 0.0328031237576451,
      "Density" : 0.9962354551676934
    },
    "euclideanDistance" : 11.100751012476607,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5885311871227363,
      "LackOfCohesion" : 0.4867247531888598,
      "MetricsIntensity" : 0.032803123757645096,
      "Density" : 3.1150347779561267
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int), hudson.model.queue.MappingWorksheet.Mapping.assign(int, ExecutorChunk)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.fastTail(int)', targetType='hudson.cli.PlainCLIProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "52d1d82e-f6e3-404c-8871-8fc5b2f06039",
    "objectives" : {
      "NumberOfConcerns" : 0.9981036662452591,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4867247531888598,
      "MetricsIntensity" : 0.0328031237576451,
      "Density" : 0.9962354551676934
    },
    "euclideanDistance" : 11.100751012476607,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.588531187122736,
      "LackOfCohesion" : 0.4867247531888598,
      "MetricsIntensity" : 0.03280312375764511,
      "Density" : 3.1150347779561267
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int), hudson.model.queue.MappingWorksheet.Mapping.assign(int, ExecutorChunk)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.fastTail(int)', targetType='hudson.cli.PlainCLIProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "c248e5e3-2933-47a7-a070-337bb8bd5b71",
    "objectives" : {
      "NumberOfConcerns" : 0.9984197218710493,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4858495430662007,
      "MetricsIntensity" : 0.03281100335736142,
      "Density" : 0.9965776865160849
    },
    "euclideanDistance" : 11.100771836531086,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5890342052313882,
      "LackOfCohesion" : 0.4858495430662007,
      "MetricsIntensity" : 0.03281100335736142,
      "Density" : 3.1161048689138573
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int), hudson.model.queue.MappingWorksheet.Mapping.assign(int, ExecutorChunk)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onLocale(String)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "54c9c961-0172-4540-8c73-445fa94ca1a6",
    "objectives" : {
      "NumberOfConcerns" : 0.9984197218710493,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4858495430662005,
      "MetricsIntensity" : 0.03281100335736143,
      "Density" : 0.9965776865160849
    },
    "euclideanDistance" : 11.100771836531086,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5890342052313882,
      "LackOfCohesion" : 0.4858495430662005,
      "MetricsIntensity" : 0.03281100335736143,
      "Density" : 3.1161048689138573
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int), hudson.model.queue.MappingWorksheet.Mapping.assign(int, ExecutorChunk)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onLocale(String)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "902fe766-f273-442a-9c56-1933a143708a",
    "objectives" : {
      "NumberOfConcerns" : 0.9958912768647282,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.486691557688412,
      "MetricsIntensity" : 0.032832098408229794,
      "Density" : 0.992984257357974
    },
    "euclideanDistance" : 12.091971046512933,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5858077503774528,
      "LackOfCohesion" : 0.486691557688412,
      "MetricsIntensity" : 0.03283209840822979,
      "Density" : 3.1065310492505356
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onLocale(String)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.fastTail(int)', targetType='hudson.cli.PlainCLIProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos, hudson.MarkupText.end], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "42d40c00-a5c5-4c99-9ba4-c088e96e5c56",
    "objectives" : {
      "NumberOfConcerns" : 0.9962073324905183,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4852201244427453,
      "MetricsIntensity" : 0.032854519448962026,
      "Density" : 0.9934976043805612
    },
    "euclideanDistance" : 12.091980173976065,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5863110216406642,
      "LackOfCohesion" : 0.4852201244427453,
      "MetricsIntensity" : 0.032854519448962026,
      "Density" : 3.1081370449678802
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='jenkins.model.GlobalProjectNamingStrategyConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.checkPermission(Job<?,?>, BuildAuthorizationToken, StaplerRequest, StaplerResponse)', targetType='hudson.cli.ReloadJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.ViewPropertyDescriptor'"
      } ]
    } ]
  }, {
    "solutionId" : "fe392e6f-b78d-4bae-81a3-06b73f5fa9e5",
    "objectives" : {
      "NumberOfConcerns" : 0.9958912768647282,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48692150617995006,
      "MetricsIntensity" : 0.03283209840822977,
      "Density" : 0.992984257357974
    },
    "euclideanDistance" : 12.091980303927164,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5858077503774535,
      "LackOfCohesion" : 0.48692150617995006,
      "MetricsIntensity" : 0.03283209840822978,
      "Density" : 3.1065310492505356
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onLocale(String)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.fastTail(int)', targetType='hudson.cli.PlainCLIProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos, hudson.MarkupText.text], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "58d8747b-50b4-4927-950a-5807c9ae83aa",
    "objectives" : {
      "NumberOfConcerns" : 0.9962073324905183,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4852566744497305,
      "MetricsIntensity" : 0.032854292898724054,
      "Density" : 0.9934976043805612
    },
    "euclideanDistance" : 12.091981640073627,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5863110216406644,
      "LackOfCohesion" : 0.4852566744497305,
      "MetricsIntensity" : 0.03285429289872406,
      "Density" : 3.109801821103374
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='jenkins.model.GlobalProjectNamingStrategyConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.checkPermission(Job<?,?>, BuildAuthorizationToken, StaplerRequest, StaplerResponse)', targetType='hudson.cli.ReloadJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='hudson.model.ProxyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.ViewPropertyDescriptor'"
      } ]
    } ]
  }, {
    "solutionId" : "1d29bc14-f582-4285-a2c5-a5425d0d9190",
    "objectives" : {
      "NumberOfConcerns" : 0.9968394437420987,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4866902799401007,
      "MetricsIntensity" : 0.03280300306399406,
      "Density" : 0.9933264887063655
    },
    "euclideanDistance" : 12.092077152225087,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5865191146881288,
      "LackOfCohesion" : 0.4866902799401007,
      "MetricsIntensity" : 0.03280300306399406,
      "Density" : 3.1059390048154087
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int), hudson.model.queue.MappingWorksheet.Mapping.assign(int, ExecutorChunk)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.fastTail(int)', targetType='hudson.cli.PlainCLIProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "bd788c73-41f1-4db9-b385-4d6b95c2e5ee",
    "objectives" : {
      "NumberOfConcerns" : 0.9968394437420987,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48669027994010056,
      "MetricsIntensity" : 0.032803003063994064,
      "Density" : 0.9933264887063655
    },
    "euclideanDistance" : 12.092077152225087,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5865191146881283,
      "LackOfCohesion" : 0.48669027994010056,
      "MetricsIntensity" : 0.032803003063994064,
      "Density" : 3.1059390048154096
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int), hudson.model.queue.MappingWorksheet.Mapping.assign(int, ExecutorChunk)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.fastTail(int)', targetType='hudson.cli.PlainCLIProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "efbc3413-ac62-4550-9e37-4cec1b229fdf",
    "objectives" : {
      "NumberOfConcerns" : 0.9981036662452591,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48586895354479487,
      "MetricsIntensity" : 0.03284814217618856,
      "Density" : 0.993668720054757
    },
    "euclideanDistance" : 12.092176648323107,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5877325289089994,
      "LackOfCohesion" : 0.48586895354479487,
      "MetricsIntensity" : 0.03284814217618856,
      "Density" : 3.1053475935828874
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onLocale(String)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.isAuthenticated()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "fb50a206-b5fe-44da-833e-86895462ba8c",
    "objectives" : {
      "NumberOfConcerns" : 0.995575221238938,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4850859878226814,
      "MetricsIntensity" : 0.032848340884274844,
      "Density" : 0.9933264887063655
    },
    "euclideanDistance" : 13.084886509381402,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5853044791142428,
      "LackOfCohesion" : 0.4850859878226814,
      "MetricsIntensity" : 0.03284834088427484,
      "Density" : 3.109266202463845
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='jenkins.model.GlobalProjectNamingStrategyConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.checkPermission(Job<?,?>, BuildAuthorizationToken, StaplerRequest, StaplerResponse)', targetType='hudson.cli.ReloadJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='hudson.model.ProxyView.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.issueCrumb(ServletRequest, String)', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor.RevokeAllSelectedModel'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.ViewPropertyDescriptor'"
      } ]
    } ]
  }, {
    "solutionId" : "97486b58-9fa0-46f2-8982-011515df6ad5",
    "objectives" : {
      "NumberOfConcerns" : 0.9962073324905183,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4849688235912787,
      "MetricsIntensity" : 0.03287102541871601,
      "Density" : 0.9934976043805612
    },
    "euclideanDistance" : 13.084943324423893,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5863110216406642,
      "LackOfCohesion" : 0.4849688235912787,
      "MetricsIntensity" : 0.03287102541871601,
      "Density" : 3.1081370449678807
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='jenkins.model.GlobalProjectNamingStrategyConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.name()', targetType='hudson.util.ProcessTree.WindowsOSProcessException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.checkPermission(Job<?,?>, BuildAuthorizationToken, StaplerRequest, StaplerResponse)', targetType='hudson.cli.ReloadJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.issueCrumb(ServletRequest, String)', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor.RevokeAllSelectedModel'"
      } ]
    } ]
  }, {
    "solutionId" : "36d5163b-18b2-4f29-aeb4-0820028118a8",
    "objectives" : {
      "NumberOfConcerns" : 0.9974715549936789,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4869269688885241,
      "MetricsIntensity" : 0.03281088266371039,
      "Density" : 0.992984257357974
    },
    "euclideanDistance" : 13.085073238825773,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5867269984917036,
      "LackOfCohesion" : 0.4869269688885241,
      "MetricsIntensity" : 0.03281088266371039,
      "Density" : 3.103208556149731
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onLocale(String)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.isAuthenticated()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.fastTail(int)', targetType='hudson.cli.PlainCLIProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "e54682d4-8847-4d79-8c54-922a10039885",
    "objectives" : {
      "NumberOfConcerns" : 0.9974715549936789,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48689380890638484,
      "MetricsIntensity" : 0.032812728271430155,
      "Density" : 0.9931553730321697
    },
    "euclideanDistance" : 13.085084996066787,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5875251509054327,
      "LackOfCohesion" : 0.48689380890638484,
      "MetricsIntensity" : 0.03281272827143016,
      "Density" : 3.105403959336545
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onLocale(String)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.fastTail(int)', targetType='hudson.cli.PlainCLIProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern), hudson.MarkupText.subText(int, int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "e111ade5-b6b3-4347-aec5-d882f186debb",
    "objectives" : {
      "NumberOfConcerns" : 0.9987357774968394,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4858541792953267,
      "MetricsIntensity" : 0.03281396490180118,
      "Density" : 0.993668720054757
    },
    "euclideanDistance" : 13.085181760995864,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.588738059326294,
      "LackOfCohesion" : 0.4858541792953267,
      "MetricsIntensity" : 0.032813964901801176,
      "Density" : 3.105347593582887
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onLocale(String)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.isAuthenticated()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "81befa39-735d-4a1d-889a-a0d704493dc4",
    "objectives" : {
      "NumberOfConcerns" : 0.9952591656131479,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.4852197333738824,
      "MetricsIntensity" : 0.03285565097182118,
      "Density" : 0.9928131416837782
    },
    "euclideanDistance" : 14.078804509776148,
    "generation" : 1,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.584801207851032,
      "LackOfCohesion" : 0.4852197333738824,
      "MetricsIntensity" : 0.03285565097182118,
      "Density" : 3.107659346545259
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='jenkins.model.GlobalProjectNamingStrategyConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.checkPermission(Job<?,?>, BuildAuthorizationToken, StaplerRequest, StaplerResponse)', targetType='hudson.cli.ReloadJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='hudson.model.ProxyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.issueCrumb(ServletRequest, String)', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor.RevokeAllSelectedModel'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.ViewPropertyDescriptor'"
      } ]
    } ]
  }, {
    "solutionId" : "6513a660-ed31-4004-8b81-f869b6812d47",
    "objectives" : {
      "NumberOfConcerns" : 0.995575221238938,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.4851277539772671,
      "MetricsIntensity" : 0.03286330836986453,
      "Density" : 0.9926420260095825
    },
    "euclideanDistance" : 14.078811638333024,
    "generation" : 1,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5853044791142428,
      "LackOfCohesion" : 0.4851277539772671,
      "MetricsIntensity" : 0.03286330836986453,
      "Density" : 3.1071237279057313
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='jenkins.model.GlobalProjectNamingStrategyConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.checkPermission(Job<?,?>, BuildAuthorizationToken, StaplerRequest, StaplerResponse)', targetType='hudson.cli.ReloadJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='hudson.model.ProxyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.issueCrumb(ServletRequest, String)', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor.RevokeAllSelectedModel'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.ViewPropertyDescriptor'"
      } ]
    } ]
  }, {
    "solutionId" : "c62c4955-e587-4a68-b5b8-120f63a7f94f",
    "objectives" : {
      "NumberOfConcerns" : 0.995575221238938,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48512775397726715,
      "MetricsIntensity" : 0.03286330836986452,
      "Density" : 0.9926420260095825
    },
    "euclideanDistance" : 14.078811638333024,
    "generation" : 1,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5853044791142428,
      "LackOfCohesion" : 0.48512775397726715,
      "MetricsIntensity" : 0.03286330836986453,
      "Density" : 3.1071237279057318
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='jenkins.model.GlobalProjectNamingStrategyConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.checkPermission(Job<?,?>, BuildAuthorizationToken, StaplerRequest, StaplerResponse)', targetType='hudson.cli.ReloadJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='hudson.model.ProxyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.issueCrumb(ServletRequest, String)', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor.RevokeAllSelectedModel'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.ViewPropertyDescriptor'"
      } ]
    } ]
  }, {
    "solutionId" : "ab887c80-934f-4631-907f-a42add8bd65d",
    "objectives" : {
      "NumberOfConcerns" : 0.995575221238938,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.485164279809086,
      "MetricsIntensity" : 0.03286318638127485,
      "Density" : 0.9928131416837782
    },
    "euclideanDistance" : 14.078824962434428,
    "generation" : 1,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5853044791142428,
      "LackOfCohesion" : 0.485164279809086,
      "MetricsIntensity" : 0.032863186381274855,
      "Density" : 3.1076593465452587
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='jenkins.model.GlobalProjectNamingStrategyConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.checkPermission(Job<?,?>, BuildAuthorizationToken, StaplerRequest, StaplerResponse)', targetType='hudson.cli.ReloadJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='hudson.model.ProxyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.issueCrumb(ServletRequest, String)', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor.RevokeAllSelectedModel'"
      } ]
    } ]
  }, {
    "solutionId" : "03c2b1eb-8ff3-4069-a652-f9b2f420c74d",
    "objectives" : {
      "NumberOfConcerns" : 0.995575221238938,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48507490102041106,
      "MetricsIntensity" : 0.03285599828231817,
      "Density" : 0.9931553730321697
    },
    "euclideanDistance" : 14.078846003573968,
    "generation" : 1,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5853044791142428,
      "LackOfCohesion" : 0.48507490102041106,
      "MetricsIntensity" : 0.03285599828231817,
      "Density" : 3.108730583824316
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='jenkins.model.GlobalProjectNamingStrategyConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.checkPermission(Job<?,?>, BuildAuthorizationToken, StaplerRequest, StaplerResponse)', targetType='hudson.cli.ReloadJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='hudson.model.ProxyView.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.issueCrumb(ServletRequest, String)', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor.RevokeAllSelectedModel'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.ViewPropertyDescriptor'"
      } ]
    } ]
  }, {
    "solutionId" : "cafd95c2-4d96-40c1-b47e-51f667708606",
    "objectives" : {
      "NumberOfConcerns" : 0.9958912768647282,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48520481409675253,
      "MetricsIntensity" : 0.03286195029676738,
      "Density" : 0.992984257357974
    },
    "euclideanDistance" : 14.078860777424287,
    "generation" : 1,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5858077503774528,
      "LackOfCohesion" : 0.48520481409675253,
      "MetricsIntensity" : 0.032861950296767375,
      "Density" : 3.1081949651847895
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='jenkins.model.GlobalProjectNamingStrategyConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.checkPermission(Job<?,?>, BuildAuthorizationToken, StaplerRequest, StaplerResponse)', targetType='hudson.cli.ReloadJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='hudson.model.ProxyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.ViewPropertyDescriptor'"
      } ]
    } ]
  }, {
    "solutionId" : "9a71e754-dfa9-4693-a2ec-850db6a37763",
    "objectives" : {
      "NumberOfConcerns" : 0.9977876106194691,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48669233191919337,
      "MetricsIntensity" : 0.03281396490180119,
      "Density" : 0.992984257357974
    },
    "euclideanDistance" : 14.079046275707315,
    "generation" : 1,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.587229763700352,
      "LackOfCohesion" : 0.48669233191919337,
      "MetricsIntensity" : 0.03281396490180119,
      "Density" : 3.103208556149733
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.isAuthenticated()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.fastTail(int)', targetType='hudson.cli.PlainCLIProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "ddbe30f5-99e5-407f-acae-21ba6d3d0f26",
    "objectives" : {
      "NumberOfConcerns" : 0.9977876106194691,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48604883127569287,
      "MetricsIntensity" : 0.032811892868802234,
      "Density" : 0.9933264887063655
    },
    "euclideanDistance" : 14.079048182166632,
    "generation" : 1,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5872297637003516,
      "LackOfCohesion" : 0.48604883127569287,
      "MetricsIntensity" : 0.032811892868802234,
      "Density" : 3.10427807486631
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onLocale(String)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.isAuthenticated()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.lines2()', targetType='hudson.search.ParsedQuickSilver.MethodGetter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "8219067d-c82c-4983-8a1b-400b4d8bd57e",
    "objectives" : {
      "NumberOfConcerns" : 0.9984197218710493,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.4858134282341674,
      "MetricsIntensity" : 0.03281396490180116,
      "Density" : 0.9933264887063655
    },
    "euclideanDistance" : 14.079084874292505,
    "generation" : 1,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5882352941176472,
      "LackOfCohesion" : 0.4858134282341674,
      "MetricsIntensity" : 0.03281396490180117,
      "Density" : 3.1042780748663095
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onLocale(String)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.isAuthenticated()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "1aa35bb3-7e1b-4918-a01c-649218ee169b",
    "objectives" : {
      "NumberOfConcerns" : 0.995575221238938,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.485168112283945,
      "MetricsIntensity" : 0.03286318638127484,
      "Density" : 0.9928131416837782
    },
    "euclideanDistance" : 15.073596652479504,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5853044791142428,
      "LackOfCohesion" : 0.485168112283945,
      "MetricsIntensity" : 0.03286318638127485,
      "Density" : 3.107659346545259
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='jenkins.model.GlobalProjectNamingStrategyConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.checkPermission(Job<?,?>, BuildAuthorizationToken, StaplerRequest, StaplerResponse)', targetType='hudson.cli.ReloadJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='hudson.model.ProxyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.issueCrumb(ServletRequest, String)', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor.RevokeAllSelectedModel'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.ViewPropertyDescriptor'"
      } ]
    } ]
  }, {
    "solutionId" : "133fdab2-82a2-48e3-82d3-e3074ab3a35f",
    "objectives" : {
      "NumberOfConcerns" : 0.9977876106194691,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4866480091707891,
      "MetricsIntensity" : 0.032813964901801176,
      "Density" : 0.992984257357974
    },
    "euclideanDistance" : 15.073801806193053,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.587229763700352,
      "LackOfCohesion" : 0.4866480091707891,
      "MetricsIntensity" : 0.032813964901801176,
      "Density" : 3.103208556149733
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.isAuthenticated()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.isAnnotationPresent(Class<? extends Annotation>)', targetType='hudson.tasks.ArtifactArchiver.Migrator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.fastTail(int)', targetType='hudson.cli.PlainCLIProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "70d7d5f9-1961-4949-a976-3c96d6003a6a",
    "objectives" : {
      "NumberOfConcerns" : 0.9977876106194691,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4859897342778204,
      "MetricsIntensity" : 0.032814975106893025,
      "Density" : 0.9934976043805612
    },
    "euclideanDistance" : 15.073814396171604,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.588028169014085,
      "LackOfCohesion" : 0.4859897342778204,
      "MetricsIntensity" : 0.032814975106893025,
      "Density" : 3.1064740502942754
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onLocale(String)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.isAnnotationPresent(Class<? extends Annotation>)', targetType='hudson.tasks.ArtifactArchiver.Migrator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.lines2()', targetType='hudson.search.ParsedQuickSilver.MethodGetter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "aece54f9-61fe-41ff-a82b-a899c560a114",
    "objectives" : {
      "NumberOfConcerns" : 0.9984197218710493,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4857615542027015,
      "MetricsIntensity" : 0.03281598531198487,
      "Density" : 0.9958932238193019
    },
    "euclideanDistance" : 16.069402180252496,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5882352941176472,
      "LackOfCohesion" : 0.4857615542027015,
      "MetricsIntensity" : 0.03281598531198487,
      "Density" : 3.1122994652406417
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.<T extends Annotation>getAnnotation(Class<T>)', targetType='hudson.tasks.ArtifactArchiver.Migrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.isAnnotationPresent(Class<? extends Annotation>)', targetType='hudson.tasks.ArtifactArchiver.Migrator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.lines2()', targetType='hudson.search.ParsedQuickSilver.MethodGetter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "253feba9-fc8d-49e5-831f-e42ac089cc19",
    "objectives" : {
      "NumberOfConcerns" : 0.9987357774968394,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4857100084878905,
      "MetricsIntensity" : 0.03281497510689303,
      "Density" : 0.9958932238193019
    },
    "euclideanDistance" : 16.06942026027815,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5887380593262945,
      "LackOfCohesion" : 0.4857100084878905,
      "MetricsIntensity" : 0.03281497510689303,
      "Density" : 3.112299465240642
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onLocale(String)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.<T extends Annotation>getAnnotation(Class<T>)', targetType='hudson.tasks.ArtifactArchiver.Migrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.isAnnotationPresent(Class<? extends Annotation>)', targetType='hudson.tasks.ArtifactArchiver.Migrator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "818e1f9c-2459-4d79-b016-ca68019bf5eb",
    "objectives" : {
      "NumberOfConcerns" : 0.9949431099873578,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48528485096132123,
      "MetricsIntensity" : 0.03286486059597823,
      "Density" : 0.9924709103353867
    },
    "euclideanDistance" : 19.058108295043553,
    "generation" : 1,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5842979365878211,
      "LackOfCohesion" : 0.48528485096132123,
      "MetricsIntensity" : 0.03286486059597823,
      "Density" : 3.1065881092662013
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='jenkins.model.GlobalProjectNamingStrategyConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.genericType()', targetType='hudson.model.labels.LabelExpression.Implies'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.name()', targetType='hudson.util.ProcessTree.WindowsOSProcessException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.checkPermission(Job<?,?>, BuildAuthorizationToken, StaplerRequest, StaplerResponse)', targetType='hudson.cli.ReloadJobCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.security.apitoken.ApiTokenStats.SingleTokenStats'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='hudson.model.ProxyView.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, String)', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.MarkupText.markup', targetTypeName='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.issueCrumb(ServletRequest, String)', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor.RevokeAllSelectedModel'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.ViewPropertyDescriptor'"
      } ]
    } ]
  }, {
    "solutionId" : "68732bdd-ebd8-4e35-92d8-6595fc89df08",
    "objectives" : {
      "NumberOfConcerns" : 0.9984197218710493,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.48643525997844794,
      "MetricsIntensity" : 0.032800309634536125,
      "Density" : 0.9928131416837782
    },
    "euclideanDistance" : 23.04821500675884,
    "generation" : 1,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5882352941176465,
      "LackOfCohesion" : 0.48643525997844794,
      "MetricsIntensity" : 0.032800309634536125,
      "Density" : 3.1043338683788124
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.MappingWorksheet.Mapping.mapping], extractedMethods=[hudson.model.queue.MappingWorksheet.Mapping.size(), hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid(), hudson.model.queue.MappingWorksheet.Mapping.toMap(), hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext), hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid(), hudson.model.queue.MappingWorksheet.Mapping.assigned(int), hudson.model.queue.MappingWorksheet.Mapping.get(int)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onLocale(String)', targetType='hudson.security.HudsonPrivateSecurityRealm.MultiPasswordEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStdin(byte[])', targetType='hudson.FilePath.WriteToTar'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.cli.CLIAction.ServerSideImpl.runningThread', targetTypeName='hudson.model.UpdateCenter.RestartJenkinsJob.Running'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onEndStdin()', targetType='hudson.util.ForkOutputStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='hudson.security.AbstractPasswordBasedSecurityRealm'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.<T extends Annotation>getAnnotation(Class<T>)', targetType='hudson.tasks.ArtifactArchiver.Migrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.isAnnotationPresent(Class<? extends Annotation>)', targetType='hudson.tasks.ArtifactArchiver.Migrator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.getToken()', targetType='hudson.markup.EscapedMarkupFormatter.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.fastTail(int)', targetType='hudson.cli.PlainCLIProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.read()', targetType='hudson.model.UpdateCenter.CompleteBatchJob.Success'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.exists()', targetType='jenkins.tasks.filters.EnvVarsFilterException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.head(int)', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.readTrim()', targetType='hudson.util.ProcessTree.FreeBSD.FreeBSDProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.TextFile.lines2()', targetType='hudson.search.ParsedQuickSilver.MethodGetter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.MarkupText.markup, hudson.MarkupText.tags, hudson.MarkupText.pos], extractedMethods=[hudson.MarkupText.addMarkup(int, String), hudson.MarkupText.toString(boolean), hudson.MarkupText.rangeCheck(int), hudson.MarkupText.addMarkup(int, int, String, String), hudson.MarkupText.toString(), hudson.MarkupText.findTokens(Pattern)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='jenkins.widgets.HistoryPageEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.WorkspaceSnapshot'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  } ]
}