{
  "executionId" : "a9584eaa-c0d7-4ba7-8b07-3dfb4f29bf59",
  "computingTime" : 10391,
  "maxEvaluations" : 1000,
  "initialPopulationSize" : 50,
  "finalPopulationSize" : 34,
  "algorithm" : "Baseline",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.0736329182458038,
    "meanNumConcerns" : 1.5337361530715001,
    "meanMetricsIntensity" : 0.032969370243008465,
    "meanLackOfCohesion" : 0.4853503005035552
  },
  "population" : [ {
    "solutionId" : "bec385f9-68cd-4c24-a9f9-10155d878e3b",
    "objectives" : {
      "NumberOfConcerns" : 1.0019697964543663,
      "NumberOfRefactorings" : 3.0,
      "LackOfCohesion" : 0.48628888179635243,
      "MetricsIntensity" : 0.03289042015191797,
      "Density" : 0.9998238506253303
    },
    "euclideanDistance" : 3.352782405940264,
    "generation" : 0,
    "numberOfRefactorings" : 3,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5344394167923572,
      "LackOfCohesion" : 0.48628888179635243,
      "MetricsIntensity" : 0.03289042015191797,
      "Density" : 3.069767441860466,
      "baselineType" : "EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "53fb0e5c-34d9-44be-89b1-2bc2c7711f5e",
    "objectives" : {
      "NumberOfConcerns" : 1.004267892317794,
      "NumberOfRefactorings" : 8.0,
      "LackOfCohesion" : 0.4859542721644174,
      "MetricsIntensity" : 0.03284250442540739,
      "Density" : 1.0010568962480184
    },
    "euclideanDistance" : 8.139281239384587,
    "generation" : 0,
    "numberOfRefactorings" : 8,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5341023069207624,
      "LackOfCohesion" : 0.4859542721644174,
      "MetricsIntensity" : 0.0328425044254074,
      "Density" : 3.063611859838275,
      "baselineType" : "CONCERN_EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "f269b060-d018-4d2f-955f-b48afa60a851",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48533336164169005,
      "MetricsIntensity" : 0.03283864952837938,
      "Density" : 0.9954201162585873
    },
    "euclideanDistance" : 10.110501578264289,
    "generation" : 0,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5297079556898283,
      "LackOfCohesion" : 0.48533336164169005,
      "MetricsIntensity" : 0.03283864952837938,
      "Density" : 3.0612134344528705,
      "baselineType" : "MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    } ]
  }, {
    "solutionId" : "a897f30f-1090-4137-9e8e-dd856ef84bd5",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4858078386807005,
      "MetricsIntensity" : 0.03280533675044804,
      "Density" : 0.9982385062533028
    },
    "euclideanDistance" : 13.085724805350686,
    "generation" : 0,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5311244979919678,
      "LackOfCohesion" : 0.4858078386807005,
      "MetricsIntensity" : 0.03280533675044804,
      "Density" : 3.0599352051835855,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "1ce2193e-a27e-4989-97b3-d3c5286944b2",
    "objectives" : {
      "NumberOfConcerns" : 0.9996717005909389,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4878858731658785,
      "MetricsIntensity" : 0.03281494696815523,
      "Density" : 0.9977100581292936
    },
    "euclideanDistance" : 15.074278699660361,
    "generation" : 0,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5301507537688446,
      "LackOfCohesion" : 0.4878858731658785,
      "MetricsIntensity" : 0.03281494696815523,
      "Density" : 3.0616216216216214,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "a81fb0ed-f620-49da-a6a8-6ee63dce435f",
    "objectives" : {
      "NumberOfConcerns" : 0.9980302035456337,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4866541460814211,
      "MetricsIntensity" : 0.032868453540510614,
      "Density" : 0.9991192531266514
    },
    "euclideanDistance" : 16.069605351790507,
    "generation" : 0,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5276381909547738,
      "LackOfCohesion" : 0.4866541460814211,
      "MetricsIntensity" : 0.032868453540510614,
      "Density" : 3.064289573203674,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.AbstractProject.BecauseOfUpstreamBuildInProgress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.search.UserSearchProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.model.Queue.StubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "d59f3e17-795e-4f90-8316-7639d9e84663",
    "objectives" : {
      "NumberOfConcerns" : 1.0016414970453054,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4863045069712628,
      "MetricsIntensity" : 0.03284563146774428,
      "Density" : 0.9991192531266514
    },
    "euclideanDistance" : 16.069819410297637,
    "generation" : 0,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5323957810145654,
      "LackOfCohesion" : 0.4863045069712628,
      "MetricsIntensity" : 0.032845631467744274,
      "Density" : 3.062634989200864,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "8dad2eac-6f3f-40ab-a65b-78c5da1c64ee",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.4851318368325874,
      "MetricsIntensity" : 0.032857493629500176,
      "Density" : 0.9985908050026422
    },
    "euclideanDistance" : 17.065510460674833,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5291457286432169,
      "LackOfCohesion" : 0.4851318368325874,
      "MetricsIntensity" : 0.032857493629500176,
      "Density" : 3.0626688276607243,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.Launcher.RemoteLauncher.KillTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.AbstractProject.BecauseOfUpstreamBuildInProgress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.search.UserSearchProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "0cecb696-3f54-44f9-ad97-8463e1391f22",
    "objectives" : {
      "NumberOfConcerns" : 0.9986868023637557,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48661158218328365,
      "MetricsIntensity" : 0.03281033818765057,
      "Density" : 0.9984146556279725
    },
    "euclideanDistance" : 17.06552297774654,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5278754394776501,
      "LackOfCohesion" : 0.48661158218328365,
      "MetricsIntensity" : 0.03281033818765057,
      "Density" : 3.0621285791464077,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.AbstractProject.BecauseOfUpstreamBuildInProgress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.search.UserSearchProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "f3eced3e-52c9-4f88-a6ee-e7e21a77b85b",
    "objectives" : {
      "NumberOfConcerns" : 1.0016414970453054,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48732350640440314,
      "MetricsIntensity" : 0.032823971968298185,
      "Density" : 0.9984146556279725
    },
    "euclideanDistance" : 17.06571648440832,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5316265060240961,
      "LackOfCohesion" : 0.48732350640440314,
      "MetricsIntensity" : 0.03282397196829818,
      "Density" : 3.0604751619870396,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "ad97e361-926f-41b2-99c4-c23dbffa0bd3",
    "objectives" : {
      "NumberOfConcerns" : 1.0006565988181222,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.48786812197487117,
      "MetricsIntensity" : 0.03284286119962081,
      "Density" : 0.9984146556279725
    },
    "euclideanDistance" : 18.06203862833047,
    "generation" : 0,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5308890005022606,
      "LackOfCohesion" : 0.48786812197487117,
      "MetricsIntensity" : 0.03284286119962081,
      "Density" : 3.0621285791464063,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.model.Queue.StubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "88dd67f9-9a78-4006-8290-fcdf0b3fc289",
    "objectives" : {
      "NumberOfConcerns" : 1.0016414970453054,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.4876086894840279,
      "MetricsIntensity" : 0.032873389438284294,
      "Density" : 0.9991192531266514
    },
    "euclideanDistance" : 18.062125231111786,
    "generation" : 0,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5316265060240961,
      "LackOfCohesion" : 0.4876086894840279,
      "MetricsIntensity" : 0.032873389438284294,
      "Density" : 3.0609821910415547,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.FullDuplexHttpService.Response'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.View.UserInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "43e89bd1-5e3a-41b2-a04e-bbd43cb6608e",
    "objectives" : {
      "NumberOfConcerns" : 0.9967170059093894,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4867652831068356,
      "MetricsIntensity" : 0.03289633703704036,
      "Density" : 0.9985908050026422
    },
    "euclideanDistance" : 19.058558471078904,
    "generation" : 0,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5263951734539967,
      "LackOfCohesion" : 0.4867652831068356,
      "MetricsIntensity" : 0.032896337037040355,
      "Density" : 3.064324324324324,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.AbstractProject.BecauseOfUpstreamBuildInProgress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.search.UserSearchProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.model.Queue.StubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.FullDuplexHttpService.Response'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.View.UserInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "05e8b05f-7020-40e4-b8f3-e09c8828641b",
    "objectives" : {
      "NumberOfConcerns" : 0.9986868023637557,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4857990491982567,
      "MetricsIntensity" : 0.03281542299259861,
      "Density" : 0.9973577593799542
    },
    "euclideanDistance" : 19.058572228726867,
    "generation" : 0,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.528643216080402,
      "LackOfCohesion" : 0.4857990491982567,
      "MetricsIntensity" : 0.03281542299259861,
      "Density" : 3.06054054054054,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.AbstractProject.BecauseOfUpstreamBuildInProgress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.search.UserSearchProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "a650a4ed-e5c5-4059-9126-72abf401250c",
    "objectives" : {
      "NumberOfConcerns" : 0.9983585029546946,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.486075616231641,
      "MetricsIntensity" : 0.032858837424916125,
      "Density" : 0.9984146556279725
    },
    "euclideanDistance" : 19.0586174926957,
    "generation" : 0,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5281407035175878,
      "LackOfCohesion" : 0.486075616231641,
      "MetricsIntensity" : 0.03285883742491612,
      "Density" : 3.0621285791464072,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.AbstractProject.BecauseOfUpstreamBuildInProgress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.search.UserSearchProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.model.Queue.StubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "50c1973b-2d6f-4629-9cde-baa9584658c7",
    "objectives" : {
      "NumberOfConcerns" : 0.9993434011818779,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4882256344147307,
      "MetricsIntensity" : 0.03283360272068066,
      "Density" : 0.9978862075039634
    },
    "euclideanDistance" : 19.05869634660723,
    "generation" : 0,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5296482412060306,
      "LackOfCohesion" : 0.4882256344147307,
      "MetricsIntensity" : 0.03283360272068065,
      "Density" : 3.0621621621621626,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "33ba7e02-6c71-481d-b430-21f2092c7f58",
    "objectives" : {
      "NumberOfConcerns" : 1.0009848982271832,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4873684294082099,
      "MetricsIntensity" : 0.0328632096698925,
      "Density" : 0.998766954377312
    },
    "euclideanDistance" : 19.058806735264636,
    "generation" : 0,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321608040201,
      "LackOfCohesion" : 0.4873684294082099,
      "MetricsIntensity" : 0.0328632096698925,
      "Density" : 3.0632090761750397,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.Launcher.RemoteLauncher.KillTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "f2005055-69b7-41d6-93a6-0f64cda93817",
    "objectives" : {
      "NumberOfConcerns" : 0.9986868023637557,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.4875368999859302,
      "MetricsIntensity" : 0.03288466221506773,
      "Density" : 0.9977100581292936
    },
    "euclideanDistance" : 20.0557117629658,
    "generation" : 0,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5286432160804022,
      "LackOfCohesion" : 0.4875368999859302,
      "MetricsIntensity" : 0.03288466221506772,
      "Density" : 3.059967585089142,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.Launcher.RemoteLauncher.KillTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.AbstractProject.BecauseOfUpstreamBuildInProgress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.search.UserSearchProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "a433b2e8-9305-4b9c-835f-eeb7da19bb1b",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.48791397094101413,
      "MetricsIntensity" : 0.0328821517999441,
      "Density" : 0.998766954377312
    },
    "euclideanDistance" : 20.055838967944037,
    "generation" : 0,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5314228255404725,
      "LackOfCohesion" : 0.48791397094101413,
      "MetricsIntensity" : 0.0328821517999441,
      "Density" : 3.0648648648648646,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.Launcher.RemoteLauncher.KillTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.model.Queue.StubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "835244ff-c284-41ba-8278-166acabbfdf9",
    "objectives" : {
      "NumberOfConcerns" : 1.000328299409061,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.48907355895667537,
      "MetricsIntensity" : 0.03286042819049069,
      "Density" : 0.9978862075039634
    },
    "euclideanDistance" : 20.05583970676712,
    "generation" : 0,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5311557788944723,
      "LackOfCohesion" : 0.48907355895667537,
      "MetricsIntensity" : 0.03286042819049069,
      "Density" : 3.0621621621621626,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.model.Queue.StubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "ccaf5885-09a2-4e30-b653-b76259831381",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.48600275620924815,
      "MetricsIntensity" : 0.032788828383059465,
      "Density" : 0.9989431037519817
    },
    "euclideanDistance" : 20.055866703550954,
    "generation" : 0,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5311244979919678,
      "LackOfCohesion" : 0.48600275620924815,
      "MetricsIntensity" : 0.032788828383059465,
      "Density" : 3.060442525634106,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Build'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.ApiTokenFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "d67f968c-3e7f-4d84-ba8b-d49fab5f6460",
    "objectives" : {
      "NumberOfConcerns" : 0.9970453053184505,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4871926764521641,
      "MetricsIntensity" : 0.032852887171337754,
      "Density" : 0.9975339087546239
    },
    "euclideanDistance" : 21.05297150656308,
    "generation" : 0,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5268979386626456,
      "LackOfCohesion" : 0.4871926764521641,
      "MetricsIntensity" : 0.03285288717133775,
      "Density" : 3.0627366143861554,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.AbstractProject.BecauseOfUpstreamBuildInProgress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.search.UserSearchProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.FullDuplexHttpService.Response'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.View.UserInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "3f06c2f2-97bb-4651-9de2-88f0d3bf33d2",
    "objectives" : {
      "NumberOfConcerns" : 0.9977019041365726,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.48818807002398895,
      "MetricsIntensity" : 0.032921807914812126,
      "Density" : 0.9984146556279725
    },
    "euclideanDistance" : 22.0506610411398,
    "generation" : 0,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.52790346907994,
      "LackOfCohesion" : 0.48818807002398895,
      "MetricsIntensity" : 0.032921807914812126,
      "Density" : 3.0637837837837854,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.Launcher.RemoteLauncher.KillTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.AbstractProject.BecauseOfUpstreamBuildInProgress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.search.UserSearchProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.model.Queue.StubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.FullDuplexHttpService.Response'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.View.UserInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "e41c693c-0ed5-4e02-a376-60215f8f6bc4",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48710870646702514,
      "MetricsIntensity" : 0.032878870113913314,
      "Density" : 0.9963008631319359
    },
    "euclideanDistance" : 24.046324572152404,
    "generation" : 0,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.527400703871292,
      "LackOfCohesion" : 0.48710870646702514,
      "MetricsIntensity" : 0.03287887011391332,
      "Density" : 3.0589507842076795,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.AbstractProject.BecauseOfUpstreamBuildInProgress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.search.UserSearchProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "b32ffb8e-91ec-473c-bc6a-40864eaa49e6",
    "objectives" : {
      "NumberOfConcerns" : 0.9967170059093894,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48739528786604935,
      "MetricsIntensity" : 0.032883310360221144,
      "Density" : 0.9970054606306148
    },
    "euclideanDistance" : 26.04277443278904,
    "generation" : 0,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5271629778672033,
      "LackOfCohesion" : 0.48739528786604935,
      "MetricsIntensity" : 0.032883310360221144,
      "Density" : 3.0644288034650784,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.Launcher.RemoteLauncher.KillTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.AbstractProject.BecauseOfUpstreamBuildInProgress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.search.UserSearchProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.FullDuplexHttpService.Response'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.View.UserInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "1acfb6dc-04eb-4acd-8b75-40038a36812c",
    "objectives" : {
      "NumberOfConcerns" : 0.9963887065003283,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48790169246505805,
      "MetricsIntensity" : 0.03287797568442134,
      "Density" : 0.9973577593799542
    },
    "euclideanDistance" : 26.042784835294253,
    "generation" : 0,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5266599597585517,
      "LackOfCohesion" : 0.48790169246505805,
      "MetricsIntensity" : 0.03287797568442134,
      "Density" : 3.062195781503515,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.AbstractProject.BecauseOfUpstreamBuildInProgress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.search.UserSearchProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "e47652e0-0447-4ea4-a959-fd593102d9ad",
    "objectives" : {
      "NumberOfConcerns" : 0.9960604070912672,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.48729723062513497,
      "MetricsIntensity" : 0.03291467578340213,
      "Density" : 0.9963008631319359
    },
    "euclideanDistance" : 27.041140762018696,
    "generation" : 0,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5261569416498992,
      "LackOfCohesion" : 0.48729723062513497,
      "MetricsIntensity" : 0.03291467578340213,
      "Density" : 3.060606060606059,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.AbstractProject.BecauseOfUpstreamBuildInProgress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.search.UserSearchProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.FullDuplexHttpService.Response'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.View.UserInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "67e69e27-a65b-4acf-9a56-6d1b6f678787",
    "objectives" : {
      "NumberOfConcerns" : 0.9983585029546946,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.48631981466600543,
      "MetricsIntensity" : 0.032836869584837454,
      "Density" : 0.9985908050026422
    },
    "euclideanDistance" : 27.041292286397827,
    "generation" : 0,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.528140703517588,
      "LackOfCohesion" : 0.48631981466600543,
      "MetricsIntensity" : 0.032836869584837454,
      "Density" : 3.062668827660725,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.Launcher.RemoteLauncher.KillTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.AbstractProject.BecauseOfUpstreamBuildInProgress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.search.UserSearchProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Build'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.ApiTokenFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "48e95a17-b561-4c91-ba32-b31fa8c9b6a3",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.48938429601563715,
      "MetricsIntensity" : 0.03283566297353576,
      "Density" : 0.9966531618812753
    },
    "euclideanDistance" : 30.037175697269003,
    "generation" : 0,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5306841046277664,
      "LackOfCohesion" : 0.48938429601563715,
      "MetricsIntensity" : 0.03283566297353576,
      "Density" : 3.061688311688311,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.Launcher.RemoteLauncher.KillTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Build'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.ApiTokenFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "0a99823e-db30-44ab-8467-61461c80bd5e",
    "objectives" : {
      "NumberOfConcerns" : 0.9996717005909389,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.4891418096806685,
      "MetricsIntensity" : 0.03287047106102241,
      "Density" : 0.9982385062533028
    },
    "euclideanDistance" : 30.037246275285867,
    "generation" : 0,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5309200603318258,
      "LackOfCohesion" : 0.4891418096806685,
      "MetricsIntensity" : 0.03287047106102241,
      "Density" : 3.0632432432432437,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.Launcher.RemoteLauncher.KillTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.FullDuplexHttpService.Response'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.View.UserInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Build'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.ApiTokenFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "6763ffaa-d0dd-47e4-9e66-d897da16d85f",
    "objectives" : {
      "NumberOfConcerns" : 0.9980302035456337,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.4896852131384451,
      "MetricsIntensity" : 0.03286256215803133,
      "Density" : 0.9977100581292936
    },
    "euclideanDistance" : 31.035984940118137,
    "generation" : 0,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5291750503018111,
      "LackOfCohesion" : 0.4896852131384451,
      "MetricsIntensity" : 0.032862562158031336,
      "Density" : 3.0632774472687934,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.FullDuplexHttpService.Response'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.View.UserInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Build'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.ApiTokenFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "ae7d6325-c8a7-4ed2-856b-cfab0f6ce3c4",
    "objectives" : {
      "NumberOfConcerns" : 0.9960604070912672,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.4898587335661936,
      "MetricsIntensity" : 0.032840710069483706,
      "Density" : 0.9966531618812753
    },
    "euclideanDistance" : 35.031792616860926,
    "generation" : 0,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5269250125817815,
      "LackOfCohesion" : 0.4898587335661936,
      "MetricsIntensity" : 0.032840710069483706,
      "Density" : 3.0633459664320517,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.model.Slave.GetClockDifference2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.AbstractProject.BecauseOfUpstreamBuildInProgress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.search.UserSearchProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Build'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.ApiTokenFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "68c79690-676e-4212-98f5-b5b68a36f6f3",
    "objectives" : {
      "NumberOfConcerns" : 0.9947472094550229,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48903833424450255,
      "MetricsIntensity" : 0.032894476100124366,
      "Density" : 0.9977100581292936
    },
    "euclideanDistance" : 36.03089213313667,
    "generation" : 0,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.524911927528938,
      "LackOfCohesion" : 0.48903833424450255,
      "MetricsIntensity" : 0.032894476100124366,
      "Density" : 3.0649350649350655,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.AbstractProject.BecauseOfUpstreamBuildInProgress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.search.UserSearchProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.util.Iterators.FilterIterator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.model.Queue.StubTask'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.Mode'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.model.InvalidBuildsDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.cli.AbstractBuildRangeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.util.FullDuplexHttpService.Response'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.View.UserInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Build'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.ApiTokenFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.NullTaskListener'"
      } ]
    } ]
  }, {
    "solutionId" : "792e825a-8169-4188-b6fe-64be186529e7",
    "objectives" : {
      "NumberOfConcerns" : 0.9963887065003283,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.4848545736094296,
      "MetricsIntensity" : 0.03291643746913942,
      "Density" : 0.991192531266514
    },
    "euclideanDistance" : 38.02908650675014,
    "generation" : 0,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5281973816717014,
      "LackOfCohesion" : 0.4848545736094296,
      "MetricsIntensity" : 0.03291643746913942,
      "Density" : 3.046561992420141,
      "baselineType" : "CONCERN_MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.os.PosixException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='jenkins.security.s2m.CallableDirectionChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='jenkins.security.s2m.CallableDirectionChecker'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.security.PermissionScope'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.Iterators.FilterIterator'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.diagnosis.OldDataMonitor.RunSaveableReference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.diagnosis.OldDataMonitor.RunSaveableReference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='jenkins.telemetry.impl.UserLanguages'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.telemetry.impl.UserLanguages'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.telemetry.impl.UserLanguages'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.CreateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='jenkins.security.apitoken.ApiTokenPropertyConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.scm.ChangeLogParser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.GlobalBuildDiscarderStrategyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.model.GlobalBuildDiscarderStrategyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.tasks.filters.impl.RetainVariablesLocalRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.tasks.filters.impl.RetainVariablesLocalRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.tasks.filters.impl.RetainVariablesLocalRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.tasks.filters.impl.RetainVariablesLocalRule'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.tools.DownloadFromUrlInstaller.Installable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.ResponseHeaderFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.security.FederatedLoginService.UnclaimedIdentityException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.HttpResponses.JSONObjectResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.util.FormFieldValidator.HudsonURL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.util.FormFieldValidator.HudsonURL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='jenkins.security.apitoken.ApiTokenStats'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='jenkins.security.apitoken.ApiTokenStats'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='jenkins.security.apitoken.ApiTokenStats'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='jenkins.security.apitoken.ApiTokenStats'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='jenkins.security.apitoken.ApiTokenStats'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='jenkins.security.apitoken.ApiTokenStats'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.util.Area'"
      } ]
    } ]
  } ]
}