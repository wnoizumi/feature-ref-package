{
  "executionId" : "87c35da6-3263-4889-b75a-4ee0c0aa0236",
  "computingTime" : 722993,
  "maxEvaluations" : 10240,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 128,
  "algorithm" : "NSGAII",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.04582651391162,
    "meanNumConcerns" : 1.488418932527694,
    "meanMetricsIntensity" : 0.03296937024300846,
    "meanLackOfCohesion" : 0.48535030050355515
  },
  "population" : [ {
    "solutionId" : "ec0e3961-7627-4e0d-a807-8e016806bb82",
    "objectives" : {
      "NumberOfConcerns" : 1.0013531799729365,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4872967788151058,
      "MetricsIntensity" : 0.032918512731484426,
      "Density" : 0.9992835393157801
    },
    "euclideanDistance" : 9.123585784225051,
    "generation" : 24,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4866901054746355,
      "LackOfCohesion" : 0.4872967788151058,
      "MetricsIntensity" : 0.032918512731484426,
      "Density" : 3.037016875340229
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "4283bb12-2dc5-48f4-93b8-300371a1e3a6",
    "objectives" : {
      "NumberOfConcerns" : 1.0016914749661705,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.48817565356979653,
      "MetricsIntensity" : 0.03290576090881018,
      "Density" : 0.99892530897367
    },
    "euclideanDistance" : 9.123630628306218,
    "generation" : 25,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4864457831325295,
      "LackOfCohesion" : 0.48817565356979653,
      "MetricsIntensity" : 0.03290576090881018,
      "Density" : 3.0342763873775827
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "addff81f-339f-4d8c-8303-1fcfc8451bd7",
    "objectives" : {
      "NumberOfConcerns" : 1.0020297699594045,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.48699401797146497,
      "MetricsIntensity" : 0.03291432008682707,
      "Density" : 0.99964176965789
    },
    "euclideanDistance" : 9.123683129829555,
    "generation" : 36,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4869477911646585,
      "LackOfCohesion" : 0.48699401797146497,
      "MetricsIntensity" : 0.03291432008682707,
      "Density" : 3.0364526659412405
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "fd7226d6-e9db-41d1-9dc2-45e7d315bc99",
    "objectives" : {
      "NumberOfConcerns" : 1.0023680649526387,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.48699375575203985,
      "MetricsIntensity" : 0.032968078722349706,
      "Density" : 0.999462654486835
    },
    "euclideanDistance" : 9.123700847118283,
    "generation" : 25,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4881968859869414,
      "LackOfCohesion" : 0.48699375575203985,
      "MetricsIntensity" : 0.03296807872234971,
      "Density" : 3.037561241154055
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "87a01fb8-b292-4c0e-ba82-12009cc050b2",
    "objectives" : {
      "NumberOfConcerns" : 1.0023680649526387,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.48874482467035557,
      "MetricsIntensity" : 0.03294756029225329,
      "Density" : 0.9987461938026151
    },
    "euclideanDistance" : 9.123715950348485,
    "generation" : 35,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4881968859869414,
      "LackOfCohesion" : 0.48874482467035557,
      "MetricsIntensity" : 0.03294756029225329,
      "Density" : 3.035383777898747
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "a13a08a4-84d7-444b-8319-2353be0023b5",
    "objectives" : {
      "NumberOfConcerns" : 1.0027063599458728,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4884416955853632,
      "MetricsIntensity" : 0.03288962678475603,
      "Density" : 0.9992835393157801
    },
    "euclideanDistance" : 9.12379551797166,
    "generation" : 31,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4872052182639237,
      "LackOfCohesion" : 0.4884416955853632,
      "MetricsIntensity" : 0.03288962678475603,
      "Density" : 3.033713974986406
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "c7fc59fc-a617-4c90-aa60-bf1e9348cf3c",
    "objectives" : {
      "NumberOfConcerns" : 1.0027063599458728,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4868819317388628,
      "MetricsIntensity" : 0.03292031986423003,
      "Density" : 1.000179115171055
    },
    "euclideanDistance" : 9.123810392024485,
    "generation" : 27,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4872052182639237,
      "LackOfCohesion" : 0.4868819317388628,
      "MetricsIntensity" : 0.03292031986423003,
      "Density" : 3.0364328439369226
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "5da6138c-2df3-47cf-84ec-5866f3893713",
    "objectives" : {
      "NumberOfConcerns" : 1.003044654939107,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.48688166966375224,
      "MetricsIntensity" : 0.03297404891327192,
      "Density" : 1.0
    },
    "euclideanDistance" : 9.123828123543221,
    "generation" : 18,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4884538152610438,
      "LackOfCohesion" : 0.48688166966375224,
      "MetricsIntensity" : 0.03297404891327192,
      "Density" : 3.037540805223069
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "2c0de6ff-0814-48b7-99f7-ff797880f4e3",
    "objectives" : {
      "NumberOfConcerns" : 1.003382949932341,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4887954169493874,
      "MetricsIntensity" : 0.03288817863685753,
      "Density" : 0.999820884828945
    },
    "euclideanDistance" : 9.12394770578393,
    "generation" : 35,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.48820873055695,
      "LackOfCohesion" : 0.4887954169493874,
      "MetricsIntensity" : 0.03288817863685753,
      "Density" : 3.035345296356715
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "658d8dc4-c7d1-4a90-9cb8-f99c06614987",
    "objectives" : {
      "NumberOfConcerns" : 1.003721244925575,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.487614431673344,
      "MetricsIntensity" : 0.03289673310426462,
      "Density" : 1.000537345513165
    },
    "euclideanDistance" : 9.124000292980407,
    "generation" : 11,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.488710486703462,
      "LackOfCohesion" : 0.487614431673344,
      "MetricsIntensity" : 0.032896733104264615,
      "Density" : 3.037520391517129
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "b232983a-2770-45b3-a183-c7f4428fcfcc",
    "objectives" : {
      "NumberOfConcerns" : 1.003721244925575,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4893645368773403,
      "MetricsIntensity" : 0.032876228047793284,
      "Density" : 0.999820884828945
    },
    "euclideanDistance" : 9.124015378964401,
    "generation" : 33,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.488710486703462,
      "LackOfCohesion" : 0.4893645368773403,
      "MetricsIntensity" : 0.032876228047793284,
      "Density" : 3.0353452963567156
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "46482202-ac91-4306-8950-1c4d6fa65621",
    "objectives" : {
      "NumberOfConcerns" : 1.0043978349120433,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.48906097172326224,
      "MetricsIntensity" : 0.032872063058675766,
      "Density" : 1.000179115171055
    },
    "euclideanDistance" : 9.124112805078255,
    "generation" : 21,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4889669007021062,
      "LackOfCohesion" : 0.48906097172326224,
      "MetricsIntensity" : 0.032872063058675766,
      "Density" : 3.0347826086956524
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "a11f70ec-5708-4065-be9a-48e7fa515492",
    "objectives" : {
      "NumberOfConcerns" : 1.0043978349120433,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.489060971723262,
      "MetricsIntensity" : 0.03287206305867578,
      "Density" : 1.000179115171055
    },
    "euclideanDistance" : 9.124112805078255,
    "generation" : 40,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.488966900702106,
      "LackOfCohesion" : 0.489060971723262,
      "MetricsIntensity" : 0.03287206305867578,
      "Density" : 3.0347826086956524
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "e65e0349-784a-421a-803d-401faab20aa6",
    "objectives" : {
      "NumberOfConcerns" : 1.0047361299052775,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4880708727133609,
      "MetricsIntensity" : 0.03289079523968488,
      "Density" : 1.00107469102633
    },
    "euclideanDistance" : 9.12419531843511,
    "generation" : 27,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.489468405215647,
      "LackOfCohesion" : 0.4880708727133609,
      "MetricsIntensity" : 0.032890795239684883,
      "Density" : 3.0374999999999996
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "0aa5f277-38af-42c1-8c15-76c9768ce4a8",
    "objectives" : {
      "NumberOfConcerns" : 1.0047361299052775,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4880708727133611,
      "MetricsIntensity" : 0.03289079523968487,
      "Density" : 1.00107469102633
    },
    "euclideanDistance" : 9.12419531843511,
    "generation" : 42,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4894684052156473,
      "LackOfCohesion" : 0.4880708727133611,
      "MetricsIntensity" : 0.03289079523968488,
      "Density" : 3.0374999999999996
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "23f1f06a-2bd1-4f94-82df-11238146c0aa",
    "objectives" : {
      "NumberOfConcerns" : 1.0050744248985115,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4889478724168353,
      "MetricsIntensity" : 0.03287807947020373,
      "Density" : 1.00071646068422
    },
    "euclideanDistance" : 9.124240188877101,
    "generation" : 12,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.48922305764411,
      "LackOfCohesion" : 0.4889478724168353,
      "MetricsIntensity" : 0.032878079470203735,
      "Density" : 3.034763715372081
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "46baca3c-f2d2-40b6-9461-992b062ca81f",
    "objectives" : {
      "NumberOfConcerns" : 1.0050744248985115,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4889478724168355,
      "MetricsIntensity" : 0.03287807947020372,
      "Density" : 1.00071646068422
    },
    "euclideanDistance" : 9.124240188877101,
    "generation" : 41,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.48922305764411,
      "LackOfCohesion" : 0.4889478724168355,
      "MetricsIntensity" : 0.03287807947020372,
      "Density" : 3.034763715372081
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "50a53104-bc82-4744-ba2c-7da77e1c9259",
    "objectives" : {
      "NumberOfConcerns" : 1.0006765899864682,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4863973739498988,
      "MetricsIntensity" : 0.03294022620778246,
      "Density" : 0.9992835393157801
    },
    "euclideanDistance" : 11.10124266438593,
    "generation" : 16,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.48643216080402,
      "LackOfCohesion" : 0.4863973739498988,
      "MetricsIntensity" : 0.03294022620778246,
      "Density" : 3.037016875340229
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "5c48bf09-3e3d-469a-b3f4-0fb3862f3610",
    "objectives" : {
      "NumberOfConcerns" : 1.0010148849797023,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48737444946095854,
      "MetricsIntensity" : 0.03290762072124352,
      "Density" : 0.9985670786315601
    },
    "euclideanDistance" : 11.10125145089357,
    "generation" : 32,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4861878453038677,
      "LackOfCohesion" : 0.48737444946095854,
      "MetricsIntensity" : 0.03290762072124352,
      "Density" : 3.0348394120849216
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "42f1e756-6153-414a-8067-dd56a80d080e",
    "objectives" : {
      "NumberOfConcerns" : 1.0016914749661705,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48831648886510876,
      "MetricsIntensity" : 0.03297211181928566,
      "Density" : 0.9982088482894501
    },
    "euclideanDistance" : 11.101321852341666,
    "generation" : 21,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4871923656454031,
      "LackOfCohesion" : 0.48831648886510876,
      "MetricsIntensity" : 0.03297211181928565,
      "Density" : 3.035403050108935
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "ee4da5f9-58fa-451a-a725-995389a15bcd",
    "objectives" : {
      "NumberOfConcerns" : 1.0016914749661705,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48888618440451825,
      "MetricsIntensity" : 0.03290640945653223,
      "Density" : 0.9983879634605051
    },
    "euclideanDistance" : 11.101362838394556,
    "generation" : 46,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4864457831325293,
      "LackOfCohesion" : 0.48888618440451825,
      "MetricsIntensity" : 0.03290640945653223,
      "Density" : 3.0342950462710943
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "f386fd98-1bbb-4044-bb70-4815924939bf",
    "objectives" : {
      "NumberOfConcerns" : 1.0040595399188093,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48727049283532176,
      "MetricsIntensity" : 0.03289264476852217,
      "Density" : 1.00071646068422
    },
    "euclideanDistance" : 11.101715338345429,
    "generation" : 42,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4892122428499754,
      "LackOfCohesion" : 0.48727049283532176,
      "MetricsIntensity" : 0.03289264476852216,
      "Density" : 3.0380641653072313
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "1953ec74-f62a-4701-a656-2164733e8789",
    "objectives" : {
      "NumberOfConcerns" : 1.0043978349120433,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48814841518983093,
      "MetricsIntensity" : 0.03287992098732579,
      "Density" : 1.00035823034211
    },
    "euclideanDistance" : 11.101752184418713,
    "generation" : 40,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4889669007021062,
      "LackOfCohesion" : 0.48814841518983093,
      "MetricsIntensity" : 0.0328799209873258,
      "Density" : 3.0353260869565215
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "3e9fdd08-f29d-4077-9687-ae1fe9780968",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48782019479306743,
      "MetricsIntensity" : 0.032943494415807975,
      "Density" : 0.9987461938026151
    },
    "euclideanDistance" : 12.09283042864273,
    "generation" : 33,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4846810647915618,
      "LackOfCohesion" : 0.48782019479306743,
      "MetricsIntensity" : 0.032943494415807975,
      "Density" : 3.0353837778987485
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "e0925175-ca6f-4342-9ce2-5402688eeebd",
    "objectives" : {
      "NumberOfConcerns" : 1.0010148849797023,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4892679524236592,
      "MetricsIntensity" : 0.03297254166269696,
      "Density" : 0.9982088482894501
    },
    "euclideanDistance" : 12.092928595775584,
    "generation" : 25,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4861878453038677,
      "LackOfCohesion" : 0.4892679524236592,
      "MetricsIntensity" : 0.03297254166269697,
      "Density" : 3.033750680457268
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "484c9c1d-e1c1-47ae-b682-bb38bc207bf4",
    "objectives" : {
      "NumberOfConcerns" : 1.0006765899864682,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48751562471537324,
      "MetricsIntensity" : 0.03292023338404957,
      "Density" : 0.9980297331183952
    },
    "euclideanDistance" : 13.085723985016763,
    "generation" : 30,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4856855851330995,
      "LackOfCohesion" : 0.48751562471537324,
      "MetricsIntensity" : 0.03292023338404957,
      "Density" : 3.0348583877995643
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "a9f74120-7ff3-4712-8ffc-4b8d05073b7f",
    "objectives" : {
      "NumberOfConcerns" : 1.0027063599458728,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4887055261463543,
      "MetricsIntensity" : 0.032890676291019334,
      "Density" : 0.99892530897367
    },
    "euclideanDistance" : 13.085992003094642,
    "generation" : 41,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4879518072289157,
      "LackOfCohesion" : 0.4887055261463543,
      "MetricsIntensity" : 0.032890676291019334,
      "Density" : 3.0359281437125754
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "6db200dd-0e54-42f8-b373-dd43632056b1",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48796110768358386,
      "MetricsIntensity" : 0.033009921153093626,
      "Density" : 0.9980297331183952
    },
    "euclideanDistance" : 14.079604363961892,
    "generation" : 33,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4854271356783915,
      "LackOfCohesion" : 0.48796110768358386,
      "MetricsIntensity" : 0.033009921153093626,
      "Density" : 3.036512261580382
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "e8daf1fe-adec-486d-b36d-89f0e0b71b59",
    "objectives" : {
      "NumberOfConcerns" : 1.000338294993234,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48883961661841263,
      "MetricsIntensity" : 0.03299709318972941,
      "Density" : 0.9976715027762851
    },
    "euclideanDistance" : 14.079633450868544,
    "generation" : 32,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.48518332496233,
      "LackOfCohesion" : 0.48883961661841263,
      "MetricsIntensity" : 0.03299709318972941,
      "Density" : 3.0337690631808285
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "8efed988-abfe-4f25-9027-88a58d25df2b",
    "objectives" : {
      "NumberOfConcerns" : 1.0023680649526387,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.4887839765997686,
      "MetricsIntensity" : 0.03289885646470971,
      "Density" : 0.9992835393157801
    },
    "euclideanDistance" : 14.079889965483456,
    "generation" : 40,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4867034621174107,
      "LackOfCohesion" : 0.4887839765997686,
      "MetricsIntensity" : 0.03289885646470971,
      "Density" : 3.033713974986406
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "91110ecc-89a4-4128-a8d7-5f0099892334",
    "objectives" : {
      "NumberOfConcerns" : 1.0023680649526387,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4891247288426947,
      "MetricsIntensity" : 0.032892361638019764,
      "Density" : 1.0
    },
    "euclideanDistance" : 15.074649801751828,
    "generation" : 41,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4867034621174107,
      "LackOfCohesion" : 0.4891247288426947,
      "MetricsIntensity" : 0.032892361638019764,
      "Density" : 3.0342391304347816
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "84b81114-8bd0-4182-a062-ba8841a06c21",
    "objectives" : {
      "NumberOfConcerns" : 0.9989851150202977,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4873644921778774,
      "MetricsIntensity" : 0.032947952935249235,
      "Density" : 0.9983879634605051
    },
    "euclideanDistance" : 16.069640926338504,
    "generation" : 46,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4831742842792566,
      "LackOfCohesion" : 0.4873644921778774,
      "MetricsIntensity" : 0.03294795293524924,
      "Density" : 3.0359477124183014
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "1dbf32b8-d5c8-4c08-a005-271d331d3a56",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48860852538678634,
      "MetricsIntensity" : 0.032987066465142545,
      "Density" : 0.9973132724341752
    },
    "euclideanDistance" : 16.06967517409758,
    "generation" : 41,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4854271356783917,
      "LackOfCohesion" : 0.48860852538678634,
      "MetricsIntensity" : 0.032987066465142545,
      "Density" : 3.03433242506812
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "d5c02e3f-a5c9-4e7f-a497-973a23dfb59a",
    "objectives" : {
      "NumberOfConcerns" : 1.0020297699594045,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48719711180431813,
      "MetricsIntensity" : 0.03290945357129522,
      "Density" : 1.00035823034211
    },
    "euclideanDistance" : 16.069947862603133,
    "generation" : 41,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4862017059708974,
      "LackOfCohesion" : 0.48719711180431813,
      "MetricsIntensity" : 0.032909453571295225,
      "Density" : 3.036976617727025
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "0ccf15a9-e740-419b-afa3-acfa694dd064",
    "objectives" : {
      "NumberOfConcerns" : 1.0023680649526387,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.488211670076719,
      "MetricsIntensity" : 0.032900223891341576,
      "Density" : 1.000179115171055
    },
    "euclideanDistance" : 17.06588799505002,
    "generation" : 42,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4867034621174107,
      "LackOfCohesion" : 0.488211670076719,
      "MetricsIntensity" : 0.032900223891341576,
      "Density" : 3.034782608695653
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "91a323e5-ba50-407d-be9a-5ec40fdb578e",
    "objectives" : {
      "NumberOfConcerns" : 1.003044654939107,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.48773440191991446,
      "MetricsIntensity" : 0.03288834447664506,
      "Density" : 0.99964176965789
    },
    "euclideanDistance" : 18.062235430241333,
    "generation" : 43,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.488453815261044,
      "LackOfCohesion" : 0.48773440191991446,
      "MetricsIntensity" : 0.032888344476645064,
      "Density" : 3.0364526659412405
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "c577b185-1d0e-45d6-b12c-32f5a5207b9f",
    "objectives" : {
      "NumberOfConcerns" : 1.0040595399188093,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.488499637268004,
      "MetricsIntensity" : 0.03288163382605551,
      "Density" : 0.999820884828945
    },
    "euclideanDistance" : 18.062322399373127,
    "generation" : 26,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4884653961885654,
      "LackOfCohesion" : 0.488499637268004,
      "MetricsIntensity" : 0.03288163382605551,
      "Density" : 3.0336956521739133
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "fcf2a629-9154-437f-bfed-ad212a764d0b",
    "objectives" : {
      "NumberOfConcerns" : 0.9976319350473613,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48751491180488654,
      "MetricsIntensity" : 0.03295024251921701,
      "Density" : 0.9980297331183952
    },
    "euclideanDistance" : 19.058596205747396,
    "generation" : 46,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4819095477386932,
      "LackOfCohesion" : 0.48751491180488654,
      "MetricsIntensity" : 0.03295024251921701,
      "Density" : 3.0348583877995643
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "420198ec-c1d8-45a5-aeab-5db591472873",
    "objectives" : {
      "NumberOfConcerns" : 0.9979702300405954,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4865448959220641,
      "MetricsIntensity" : 0.03297782829897351,
      "Density" : 0.9987461938026151
    },
    "euclideanDistance" : 19.058626708464324,
    "generation" : 43,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4816675037669516,
      "LackOfCohesion" : 0.4865448959220641,
      "MetricsIntensity" : 0.03297782829897351,
      "Density" : 3.0337323177366704
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "22a8dae6-10c2-40eb-8b5b-9d50c54fc676",
    "objectives" : {
      "NumberOfConcerns" : 1.0006765899864682,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48876915768378265,
      "MetricsIntensity" : 0.03291100749316829,
      "Density" : 0.9987461938026151
    },
    "euclideanDistance" : 19.058825410326296,
    "generation" : 38,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.485685585133099,
      "LackOfCohesion" : 0.48876915768378265,
      "MetricsIntensity" : 0.03291100749316829,
      "Density" : 3.0353837778987476
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "4dce55ac-3978-459a-8dcc-1b827f080787",
    "objectives" : {
      "NumberOfConcerns" : 0.9983085250338295,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.48947333145613775,
      "MetricsIntensity" : 0.03295173101141548,
      "Density" : 0.9976715027762851
    },
    "euclideanDistance" : 20.0557382885146,
    "generation" : 40,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.48216976393772,
      "LackOfCohesion" : 0.48947333145613775,
      "MetricsIntensity" : 0.03295173101141548,
      "Density" : 3.0321175830157867
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "071f1b66-d3f8-4799-9b80-8f7d97c53fe9",
    "objectives" : {
      "NumberOfConcerns" : 0.9996617050067659,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.489151398407329,
      "MetricsIntensity" : 0.03292337651468579,
      "Density" : 0.9987461938026151
    },
    "euclideanDistance" : 20.05585127895042,
    "generation" : 24,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4841788046207938,
      "LackOfCohesion" : 0.489151398407329,
      "MetricsIntensity" : 0.032923376514685784,
      "Density" : 3.0337323177366695
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "17554ac8-6794-44e8-b891-787aa05ee20b",
    "objectives" : {
      "NumberOfConcerns" : 1.0013531799729365,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.4877545362000983,
      "MetricsIntensity" : 0.03298170656971238,
      "Density" : 0.9978506179473401
    },
    "euclideanDistance" : 20.055857157631827,
    "generation" : 39,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4866901054746353,
      "LackOfCohesion" : 0.4877545362000983,
      "MetricsIntensity" : 0.03298170656971238,
      "Density" : 3.0343137254901964
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "76c77610-4582-450b-9af4-95eb423122ea",
    "objectives" : {
      "NumberOfConcerns" : 1.0020297699594045,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.4884877017129993,
      "MetricsIntensity" : 0.032904348185920376,
      "Density" : 0.9983879634605051
    },
    "euclideanDistance" : 20.055935408659504,
    "generation" : 46,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4869477911646585,
      "LackOfCohesion" : 0.4884877017129993,
      "MetricsIntensity" : 0.03290434818592038,
      "Density" : 3.0342950462710943
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "ec5f8e48-c47b-484c-b72e-ec9d21795a55",
    "objectives" : {
      "NumberOfConcerns" : 1.003382949932341,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.4876994933638525,
      "MetricsIntensity" : 0.032883478312837985,
      "Density" : 0.999462654486835
    },
    "euclideanDistance" : 20.056037371846465,
    "generation" : 40,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4882087305569496,
      "LackOfCohesion" : 0.4876994933638525,
      "MetricsIntensity" : 0.03288347831283799,
      "Density" : 3.0342577487765086
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "ca4856b6-2a25-4d92-8ca2-417f25771a96",
    "objectives" : {
      "NumberOfConcerns" : 0.9972936400541272,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4870858412355348,
      "MetricsIntensity" : 0.033028690766442735,
      "Density" : 0.9973132724341752
    },
    "euclideanDistance" : 21.052970618870194,
    "generation" : 44,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4821518350930112,
      "LackOfCohesion" : 0.4870858412355348,
      "MetricsIntensity" : 0.03302869076644273,
      "Density" : 3.035986913849509
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "dfca3a58-d9a9-460a-9dc4-6815a291e7d2",
    "objectives" : {
      "NumberOfConcerns" : 0.9972936400541272,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48765616488468966,
      "MetricsIntensity" : 0.03296286213497939,
      "Density" : 0.9974923876052302
    },
    "euclideanDistance" : 21.05299220427474,
    "generation" : 42,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4814070351758795,
      "LackOfCohesion" : 0.48765616488468966,
      "MetricsIntensity" : 0.03296286213497939,
      "Density" : 3.034877384196185
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "0f514ed4-1085-45a9-89b6-ddbe37957906",
    "objectives" : {
      "NumberOfConcerns" : 0.9976319350473613,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.48867240103736476,
      "MetricsIntensity" : 0.032953617190946395,
      "Density" : 0.9973132724341752
    },
    "euclideanDistance" : 22.050618809857045,
    "generation" : 39,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.481909547738692,
      "LackOfCohesion" : 0.48867240103736476,
      "MetricsIntensity" : 0.032953617190946395,
      "Density" : 3.0326797385620914
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "fce5316f-a2c0-4b49-8cf1-12c35badce6b",
    "objectives" : {
      "NumberOfConcerns" : 0.9996617050067659,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4870656116237101,
      "MetricsIntensity" : 0.03292381881561097,
      "Density" : 0.9971341572631202
    },
    "euclideanDistance" : 22.050667040702184,
    "generation" : 42,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4849246231155788,
      "LackOfCohesion" : 0.4870656116237101,
      "MetricsIntensity" : 0.03292381881561097,
      "Density" : 3.033787465940056
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "781b5f21-6468-4837-a2a4-e1298a42c444",
    "objectives" : {
      "NumberOfConcerns" : 1.000338294993234,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4876354102558022,
      "MetricsIntensity" : 0.03296569328371269,
      "Density" : 0.9969550420920652
    },
    "euclideanDistance" : 22.050702281121385,
    "generation" : 41,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4866767219708397,
      "LackOfCohesion" : 0.4876354102558022,
      "MetricsIntensity" : 0.03296569328371269,
      "Density" : 3.0348964013086155
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "72c9b2ea-a456-47b5-ba25-085a01931f48",
    "objectives" : {
      "NumberOfConcerns" : 1.0006765899864682,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4868558790826873,
      "MetricsIntensity" : 0.033003416000283066,
      "Density" : 0.9978506179473401
    },
    "euclideanDistance" : 22.050740970905036,
    "generation" : 33,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4864321608040196,
      "LackOfCohesion" : 0.4868558790826873,
      "MetricsIntensity" : 0.033003416000283066,
      "Density" : 3.0343137254901973
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "c4882f6c-5527-47d4-b416-e898b98dc7bd",
    "objectives" : {
      "NumberOfConcerns" : 0.9986468200270636,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4874480630643037,
      "MetricsIntensity" : 0.03293619465577317,
      "Density" : 0.9971341572631202
    },
    "euclideanDistance" : 23.04843297072134,
    "generation" : 27,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.483417085427136,
      "LackOfCohesion" : 0.4874480630643037,
      "MetricsIntensity" : 0.03293619465577317,
      "Density" : 3.032135076252724
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "de46e840-6e14-402d-b823-4e0b1890d655",
    "objectives" : {
      "NumberOfConcerns" : 0.9986468200270636,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.48713819303607614,
      "MetricsIntensity" : 0.03293700037644115,
      "Density" : 0.9974923876052302
    },
    "euclideanDistance" : 23.048441921301077,
    "generation" : 46,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4841628959276016,
      "LackOfCohesion" : 0.48713819303607614,
      "MetricsIntensity" : 0.03293700037644115,
      "Density" : 3.034877384196185
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "70adc5a8-468f-4b3f-8a2f-e8845a6dffe6",
    "objectives" : {
      "NumberOfConcerns" : 0.9993234100135318,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4883905809399698,
      "MetricsIntensity" : 0.033000732442807455,
      "Density" : 0.9967759269210102
    },
    "euclideanDistance" : 23.048466845631683,
    "generation" : 38,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4844221105527637,
      "LackOfCohesion" : 0.4883905809399698,
      "MetricsIntensity" : 0.03300073244280745,
      "Density" : 3.0326975476839237
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "67a2afb0-f3ec-4d99-b10b-38c3a8d7e39e",
    "objectives" : {
      "NumberOfConcerns" : 1.0010148849797023,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4895802627862877,
      "MetricsIntensity" : 0.03291735894402474,
      "Density" : 0.9978506179473401
    },
    "euclideanDistance" : 23.048611868004517,
    "generation" : 39,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.485441767068273,
      "LackOfCohesion" : 0.4895802627862877,
      "MetricsIntensity" : 0.03291735894402474,
      "Density" : 3.032661948829614
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "b35b0b89-2184-4b41-93b6-45fa11ef635a",
    "objectives" : {
      "NumberOfConcerns" : 1.0006765899864682,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48897978503990114,
      "MetricsIntensity" : 0.03290011050023034,
      "Density" : 0.9987461938026151
    },
    "euclideanDistance" : 24.046601241024288,
    "generation" : 42,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4856855851331001,
      "LackOfCohesion" : 0.48897978503990114,
      "MetricsIntensity" : 0.032900110500230346,
      "Density" : 3.03373231773667
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "3b2b2738-470d-4988-a38d-c5e80a66f1ab",
    "objectives" : {
      "NumberOfConcerns" : 0.9962787550744249,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.48641970416255037,
      "MetricsIntensity" : 0.033056334950046104,
      "Density" : 0.9983879634605051
    },
    "euclideanDistance" : 25.044501327302832,
    "generation" : 34,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4813883299798796,
      "LackOfCohesion" : 0.48641970416255037,
      "MetricsIntensity" : 0.033056334950046104,
      "Density" : 3.0359477124183014
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "d7e4c8ba-4fef-4be1-8b0e-95d90b72472d",
    "objectives" : {
      "NumberOfConcerns" : 0.9983085250338295,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.48758931614410717,
      "MetricsIntensity" : 0.03294881427153556,
      "Density" : 0.9965968117499552
    },
    "euclideanDistance" : 25.04453341713367,
    "generation" : 25,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4829145728643218,
      "LackOfCohesion" : 0.48758931614410717,
      "MetricsIntensity" : 0.03294881427153556,
      "Density" : 3.032152588555858
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "2aa4bc4f-b0dd-447d-babe-d67179ae5ed9",
    "objectives" : {
      "NumberOfConcerns" : 0.9989851150202977,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.488159114776199,
      "MetricsIntensity" : 0.03299070219701243,
      "Density" : 0.9964176965789002
    },
    "euclideanDistance" : 25.044564424119223,
    "generation" : 42,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.48466566113625,
      "LackOfCohesion" : 0.488159114776199,
      "MetricsIntensity" : 0.032990702197012424,
      "Density" : 3.033260632497273
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "c660b48c-c144-4cdf-b3b1-e53db0f85387",
    "objectives" : {
      "NumberOfConcerns" : 0.9976319350473613,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48699391952058113,
      "MetricsIntensity" : 0.03295970929412239,
      "Density" : 0.9978506179473401
    },
    "euclideanDistance" : 26.042834422421286,
    "generation" : 44,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4811652435961828,
      "LackOfCohesion" : 0.48699391952058113,
      "MetricsIntensity" : 0.03295970929412239,
      "Density" : 3.032661948829614
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "acc65dd1-b4c9-4ac7-927c-2736c286e3f5",
    "objectives" : {
      "NumberOfConcerns" : 1.0006765899864682,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48535910054205383,
      "MetricsIntensity" : 0.0329817471919309,
      "Density" : 1.0008955758552749
    },
    "euclideanDistance" : 26.04303758864623,
    "generation" : 30,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.485685585133099,
      "LackOfCohesion" : 0.48535910054205383,
      "MetricsIntensity" : 0.0329817471919309,
      "Density" : 3.0402611534276383
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "1da496ca-9fbc-4566-a281-a766f1d28ece",
    "objectives" : {
      "NumberOfConcerns" : 1.0023680649526387,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48598075616636194,
      "MetricsIntensity" : 0.03296411339544352,
      "Density" : 1.0017911517105498
    },
    "euclideanDistance" : 26.04314864177176,
    "generation" : 31,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.487449799196787,
      "LackOfCohesion" : 0.48598075616636194,
      "MetricsIntensity" : 0.03296411339544352,
      "Density" : 3.0413268080478524
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "fa953e75-da4f-46a8-9adf-ea5938682229",
    "objectives" : {
      "NumberOfConcerns" : 0.9956021650879567,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.4866586260436477,
      "MetricsIntensity" : 0.0329952325365646,
      "Density" : 0.9976715027762851
    },
    "euclideanDistance" : 27.041163018669383,
    "generation" : 35,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.479638009049774,
      "LackOfCohesion" : 0.4866586260436477,
      "MetricsIntensity" : 0.0329952325365646,
      "Density" : 3.0354223433242513
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "dd8a3a6c-95be-49b9-9c33-fc77101c3c67",
    "objectives" : {
      "NumberOfConcerns" : 0.9979702300405954,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.4865843968252445,
      "MetricsIntensity" : 0.03301520835467947,
      "Density" : 0.9973132724341752
    },
    "euclideanDistance" : 27.04123578394,
    "generation" : 42,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4839034205231392,
      "LackOfCohesion" : 0.4865843968252445,
      "MetricsIntensity" : 0.03301520835467948,
      "Density" : 3.035986913849509
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "4db9fdb9-ebc4-4831-a629-3e0dcfff4c59",
    "objectives" : {
      "NumberOfConcerns" : 0.9969553450608931,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.4863274803454842,
      "MetricsIntensity" : 0.032965146733844757,
      "Density" : 0.9976715027762851
    },
    "euclideanDistance" : 29.038368919526725,
    "generation" : 40,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4816490698843643,
      "LackOfCohesion" : 0.4863274803454842,
      "MetricsIntensity" : 0.032965146733844757,
      "Density" : 3.0337690631808285
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "40c753f0-580f-44ee-bbef-684bd219fb61",
    "objectives" : {
      "NumberOfConcerns" : 0.9962787550744249,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.48720598109643387,
      "MetricsIntensity" : 0.032966473056988924,
      "Density" : 0.9965968117499552
    },
    "euclideanDistance" : 30.037047674819256,
    "generation" : 45,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4806435394670698,
      "LackOfCohesion" : 0.48720598109643387,
      "MetricsIntensity" : 0.032966473056988924,
      "Density" : 3.0338058887677213
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "a8406a3d-0205-444e-be67-aeda958d2301",
    "objectives" : {
      "NumberOfConcerns" : 0.9962787550744249,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.48710865285970456,
      "MetricsIntensity" : 0.03298632961220978,
      "Density" : 0.9969550420920652
    },
    "euclideanDistance" : 30.03705800592657,
    "generation" : 46,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4806435394670696,
      "LackOfCohesion" : 0.48710865285970456,
      "MetricsIntensity" : 0.03298632961220978,
      "Density" : 3.0332425068119897
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "ef83dec1-af19-4d48-989f-7642b3c8fa6d",
    "objectives" : {
      "NumberOfConcerns" : 0.9956021650879567,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.48626829793150644,
      "MetricsIntensity" : 0.033043152568464504,
      "Density" : 0.9987461938026151
    },
    "euclideanDistance" : 31.03588674966881,
    "generation" : 44,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.479638009049774,
      "LackOfCohesion" : 0.48626829793150644,
      "MetricsIntensity" : 0.033043152568464504,
      "Density" : 3.0353837778987476
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "858a80b0-9ce2-4ebd-905c-7ac254c943c7",
    "objectives" : {
      "NumberOfConcerns" : 0.996617050067659,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.48625720105044656,
      "MetricsIntensity" : 0.0329893275447644,
      "Density" : 0.9976715027762851
    },
    "euclideanDistance" : 32.03476437143315,
    "generation" : 45,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4826371414192248,
      "LackOfCohesion" : 0.48625720105044656,
      "MetricsIntensity" : 0.0329893275447644,
      "Density" : 3.0370774263904035
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "997dc2e6-fa3d-4ac3-8cad-3c3ffdf4f0ee",
    "objectives" : {
      "NumberOfConcerns" : 0.9983085250338295,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.48602107925026505,
      "MetricsIntensity" : 0.033005100036716646,
      "Density" : 0.999462654486835
    },
    "euclideanDistance" : 32.034869304165625,
    "generation" : 42,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.484406438631791,
      "LackOfCohesion" : 0.48602107925026505,
      "MetricsIntensity" : 0.033005100036716646,
      "Density" : 3.0425299890948754
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "b1daea9d-442a-4526-8699-8a536f3cf8d5",
    "objectives" : {
      "NumberOfConcerns" : 1.000338294993234,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.4858081241405709,
      "MetricsIntensity" : 0.03296362818707977,
      "Density" : 1.0
    },
    "euclideanDistance" : 33.033888248867925,
    "generation" : 34,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4851833249623307,
      "LackOfCohesion" : 0.4858081241405709,
      "MetricsIntensity" : 0.03296362818707976,
      "Density" : 3.0391943385955367
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "ce80b5d4-f88a-4127-bde9-8cb526667b7d",
    "objectives" : {
      "NumberOfConcerns" : 0.9962787550744249,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.4873373007195479,
      "MetricsIntensity" : 0.032992753928431,
      "Density" : 0.9962385814078453
    },
    "euclideanDistance" : 35.03175200921848,
    "generation" : 35,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4806435394670696,
      "LackOfCohesion" : 0.4873373007195479,
      "MetricsIntensity" : 0.032992753928431005,
      "Density" : 3.029411764705881
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "0b3d3eb2-b8d7-4e9f-ac8b-b9b1a3c4e66c",
    "objectives" : {
      "NumberOfConcerns" : 0.9956021650879567,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.48735217395833325,
      "MetricsIntensity" : 0.033002367024189086,
      "Density" : 0.9971341572631202
    },
    "euclideanDistance" : 35.031758469942666,
    "generation" : 46,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4811273276295924,
      "LackOfCohesion" : 0.48735217395833325,
      "MetricsIntensity" : 0.03300236702418909,
      "Density" : 3.035441657579062
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "005dd8f3-ab98-42dd-83cd-8f8d7896c5b4",
    "objectives" : {
      "NumberOfConcerns" : 0.9996617050067659,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.4849078986278033,
      "MetricsIntensity" : 0.03298536653408098,
      "Density" : 1.0
    },
    "euclideanDistance" : 35.031921831795266,
    "generation" : 37,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4849246231155777,
      "LackOfCohesion" : 0.4849078986278033,
      "MetricsIntensity" : 0.03298536653408098,
      "Density" : 3.0391943385955367
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "4ceba03a-956f-4d45-a68a-650f8fa4c609",
    "objectives" : {
      "NumberOfConcerns" : 0.9949255751014885,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48677833363864875,
      "MetricsIntensity" : 0.0329868797505134,
      "Density" : 0.9967759269210102
    },
    "euclideanDistance" : 36.030840684458305,
    "generation" : 45,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4793762575452714,
      "LackOfCohesion" : 0.48677833363864875,
      "MetricsIntensity" : 0.0329868797505134,
      "Density" : 3.0343511450381677
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "f76a95ca-c332-4b58-b3ab-dfd3dc8075a2",
    "objectives" : {
      "NumberOfConcerns" : 0.9952638700947226,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.4867780708403724,
      "MetricsIntensity" : 0.03304086483635089,
      "Density" : 0.9965968117499552
    },
    "euclideanDistance" : 36.03084511866612,
    "generation" : 46,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4806240563663822,
      "LackOfCohesion" : 0.4867780708403724,
      "MetricsIntensity" : 0.03304086483635088,
      "Density" : 3.035460992907802
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "68e643e6-0529-47f8-8f3e-9daf28ee9839",
    "objectives" : {
      "NumberOfConcerns" : 0.9959404600811907,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.4864615723772062,
      "MetricsIntensity" : 0.03306866664606894,
      "Density" : 0.9980297331183952
    },
    "euclideanDistance" : 36.03089922755646,
    "generation" : 38,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.480885311871228,
      "LackOfCohesion" : 0.4864615723772062,
      "MetricsIntensity" : 0.033068666646068945,
      "Density" : 3.039825422804145
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.AsyncPeriodicWork.lastRotateMillis, hudson.model.AsyncPeriodicWork.name, hudson.model.AsyncPeriodicWork.thread], extractedMethods=[hudson.model.AsyncPeriodicWork.createListener(), hudson.model.AsyncPeriodicWork.doRun(), hudson.model.AsyncPeriodicWork.getLogFile(), hudson.model.AsyncPeriodicWork.execute(TaskListener), hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "4fff0b26-e0e5-4223-ac95-55d6bfdc6d2b",
    "objectives" : {
      "NumberOfConcerns" : 0.9952638700947226,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.48780342786734987,
      "MetricsIntensity" : 0.03301415856873865,
      "Density" : 0.9962385814078453
    },
    "euclideanDistance" : 37.030015981648006,
    "generation" : 40,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4798792756539232,
      "LackOfCohesion" : 0.48780342786734987,
      "MetricsIntensity" : 0.03301415856873865,
      "Density" : 3.0327153762268266
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "e6e14d9a-0fbd-4216-94c1-ec306b6b39ae",
    "objectives" : {
      "NumberOfConcerns" : 0.9972936400541272,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.484857404066092,
      "MetricsIntensity" : 0.03301897640771913,
      "Density" : 1.00071646068422
    },
    "euclideanDistance" : 37.03015264611068,
    "generation" : 29,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4814070351758792,
      "LackOfCohesion" : 0.484857404066092,
      "MetricsIntensity" : 0.03301897640771913,
      "Density" : 3.039717083786724
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "ade50389-2465-42bf-b8aa-9b92ded36287",
    "objectives" : {
      "NumberOfConcerns" : 0.9952638700947226,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.48630777813678305,
      "MetricsIntensity" : 0.033026707630489406,
      "Density" : 0.9974923876052302
    },
    "euclideanDistance" : 39.02849122439836,
    "generation" : 42,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.480624056366382,
      "LackOfCohesion" : 0.48630777813678305,
      "MetricsIntensity" : 0.033026707630489406,
      "Density" : 3.036532170119957
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.version], extractedMethods=[hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "68d7e3db-c82c-4447-b279-43cb6fc09f1b",
    "objectives" : {
      "NumberOfConcerns" : 0.9959404600811907,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.4855092315371258,
      "MetricsIntensity" : 0.033064120165322085,
      "Density" : 0.9987461938026151
    },
    "euclideanDistance" : 39.028530638618875,
    "generation" : 40,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.481630598892803,
      "LackOfCohesion" : 0.4855092315371258,
      "MetricsIntensity" : 0.03306412016532208,
      "Density" : 3.0420076377523175
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "9e0afae0-0e94-4547-a51f-a8c4748d40aa",
    "objectives" : {
      "NumberOfConcerns" : 0.9939106901217862,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.48621734331191313,
      "MetricsIntensity" : 0.03303120599061836,
      "Density" : 0.9971341572631202
    },
    "euclideanDistance" : 40.02773580097962,
    "generation" : 27,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4786109713135378,
      "LackOfCohesion" : 0.48621734331191313,
      "MetricsIntensity" : 0.03303120599061836,
      "Density" : 3.0354416575790615
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "ac773acd-32c7-485a-9bac-be365947df81",
    "objectives" : {
      "NumberOfConcerns" : 0.9939106901217862,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.48611996136202923,
      "MetricsIntensity" : 0.03305107350420302,
      "Density" : 0.9974923876052302
    },
    "euclideanDistance" : 40.02774356010545,
    "generation" : 28,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.478610971313538,
      "LackOfCohesion" : 0.48611996136202923,
      "MetricsIntensity" : 0.03305107350420302,
      "Density" : 3.034877384196185
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.UserIdMapper.MAPPING_FILE, hudson.model.UserIdMapper.PREFIX_PATTERN, hudson.model.UserIdMapper.PREFIX_MAX, hudson.model.UserIdMapper.idToDirectoryNameMap, hudson.model.UserIdMapper.XSTREAM], extractedMethods=[hudson.model.UserIdMapper.remove(String), hudson.model.UserIdMapper.clear(), hudson.model.UserIdMapper.isMapped(String), hudson.model.UserIdMapper.getConfigFile(File), hudson.model.UserIdMapper.getConvertedUserIds(), hudson.model.UserIdMapper.reload(), hudson.model.UserIdMapper.load(), hudson.model.UserIdMapper.save(), hudson.model.UserIdMapper.getIdStrategy(), hudson.model.UserIdMapper.getXmlConfigFile(), hudson.model.UserIdMapper.generatePrefix(String), hudson.model.UserIdMapper.getInstance()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "bcfc866f-0956-4ece-b323-7b5a3af430c2",
    "objectives" : {
      "NumberOfConcerns" : 0.9952638700947226,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.4874883263807777,
      "MetricsIntensity" : 0.03303770534030827,
      "Density" : 0.9960594662367902
    },
    "euclideanDistance" : 41.02708155584221,
    "generation" : 38,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4798792756539236,
      "LackOfCohesion" : 0.4874883263807777,
      "MetricsIntensity" : 0.03303770534030827,
      "Density" : 3.0305177111716626
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "966f298c-d1a8-4564-9e42-57e645c69115",
    "objectives" : {
      "NumberOfConcerns" : 0.9962787550744249,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.48548059276544153,
      "MetricsIntensity" : 0.032984176505748995,
      "Density" : 0.9962385814078453
    },
    "euclideanDistance" : 41.02708668709917,
    "generation" : 38,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4821338701560143,
      "LackOfCohesion" : 0.48548059276544153,
      "MetricsIntensity" : 0.032984176505749,
      "Density" : 3.032715376226827
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "c048c5e6-969b-4457-831d-ef6ffcbbf3d7",
    "objectives" : {
      "NumberOfConcerns" : 0.9945872801082544,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.4859361321479479,
      "MetricsIntensity" : 0.033108997251406015,
      "Density" : 0.9985670786315601
    },
    "euclideanDistance" : 42.026462737167236,
    "generation" : 37,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4796175138399599,
      "LackOfCohesion" : 0.4859361321479479,
      "MetricsIntensity" : 0.033108997251406015,
      "Density" : 3.039803707742639
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "79aa962b-d378-4161-9ba6-ec3e693450fe",
    "objectives" : {
      "NumberOfConcerns" : 0.9945872801082544,
      "NumberOfRefactorings" : 43.0,
      "LackOfCohesion" : 0.48674902620407245,
      "MetricsIntensity" : 0.03306319074676929,
      "Density" : 0.9958803510657352
    },
    "euclideanDistance" : 43.025794580931155,
    "generation" : 24,
    "numberOfRefactorings" : 43,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4796175138399597,
      "LackOfCohesion" : 0.48674902620407245,
      "MetricsIntensity" : 0.03306319074676929,
      "Density" : 3.033278777959629
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "7fc8597b-ffb9-45b5-b03f-7eab035bddcf",
    "objectives" : {
      "NumberOfConcerns" : 0.9962787550744249,
      "NumberOfRefactorings" : 43.0,
      "LackOfCohesion" : 0.4851056210545152,
      "MetricsIntensity" : 0.033044064614076864,
      "Density" : 1.000179115171055
    },
    "euclideanDistance" : 43.0259148536556,
    "generation" : 41,
    "numberOfRefactorings" : 43,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.48064353946707,
      "LackOfCohesion" : 0.4851056210545152,
      "MetricsIntensity" : 0.033044064614076864,
      "Density" : 3.0413943355119835
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "c21d140f-c6b1-4643-9cc8-30dfed7156d2",
    "objectives" : {
      "NumberOfConcerns" : 0.9962787550744249,
      "NumberOfRefactorings" : 43.0,
      "LackOfCohesion" : 0.48500834647172025,
      "MetricsIntensity" : 0.033063910223015906,
      "Density" : 1.000537345513165
    },
    "euclideanDistance" : 43.025922101169265,
    "generation" : 24,
    "numberOfRefactorings" : 43,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4806435394670692,
      "LackOfCohesion" : 0.48500834647172025,
      "MetricsIntensity" : 0.03306391022301591,
      "Density" : 3.040827436037017
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "6c8a712e-cbaa-4db0-bdc0-d485886bb668",
    "objectives" : {
      "NumberOfConcerns" : 0.9949255751014885,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.48600516482507683,
      "MetricsIntensity" : 0.03300921336772981,
      "Density" : 0.9957012358946803
    },
    "euclideanDistance" : 44.025204014059454,
    "generation" : 39,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4801207851031704,
      "LackOfCohesion" : 0.48600516482507683,
      "MetricsIntensity" : 0.033009213367729814,
      "Density" : 3.031079607415485
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "c4d4eedf-576e-4241-bf36-6ff72a722f1e",
    "objectives" : {
      "NumberOfConcerns" : 0.9956021650879567,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.4857024484464556,
      "MetricsIntensity" : 0.03300496206138854,
      "Density" : 0.9983879634605051
    },
    "euclideanDistance" : 44.0252768122207,
    "generation" : 37,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4803822937625761,
      "LackOfCohesion" : 0.4857024484464556,
      "MetricsIntensity" : 0.03300496206138854,
      "Density" : 3.0376021798365125
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "4a1d2374-f299-4031-8051-14d75818a3f3",
    "objectives" : {
      "NumberOfConcerns" : 0.9942489851150202,
      "NumberOfRefactorings" : 46.0,
      "LackOfCohesion" : 0.4856435781391987,
      "MetricsIntensity" : 0.033082988960821895,
      "Density" : 0.999462654486835
    },
    "euclideanDistance" : 46.02417191880005,
    "generation" : 38,
    "numberOfRefactorings" : 46,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4783702213279681,
      "LackOfCohesion" : 0.4856435781391987,
      "MetricsIntensity" : 0.033082988960821895,
      "Density" : 3.0392156862745097
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "c564b1c8-33a5-48b0-a196-a0f08cfab7ac",
    "objectives" : {
      "NumberOfConcerns" : 0.9956021650879567,
      "NumberOfRefactorings" : 46.0,
      "LackOfCohesion" : 0.48461402558650946,
      "MetricsIntensity" : 0.03299679420133964,
      "Density" : 0.99892530897367
    },
    "euclideanDistance" : 46.024178591108594,
    "generation" : 40,
    "numberOfRefactorings" : 46,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4803822937625755,
      "LackOfCohesion" : 0.48461402558650946,
      "MetricsIntensity" : 0.03299679420133965,
      "Density" : 3.0392370572207077
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "dc569c4c-7688-42e7-9739-1adaf73c1d0f",
    "objectives" : {
      "NumberOfConcerns" : 0.9962787550744249,
      "NumberOfRefactorings" : 46.0,
      "LackOfCohesion" : 0.4845030047965187,
      "MetricsIntensity" : 0.03300276172556834,
      "Density" : 0.999462654486835
    },
    "euclideanDistance" : 46.02420373346469,
    "generation" : 28,
    "numberOfRefactorings" : 46,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4806435394670692,
      "LackOfCohesion" : 0.4845030047965187,
      "MetricsIntensity" : 0.03300276172556834,
      "Density" : 3.0392156862745097
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "6247df20-3470-43df-a829-9e26f6edf278",
    "objectives" : {
      "NumberOfConcerns" : 0.9962787550744249,
      "NumberOfRefactorings" : 46.0,
      "LackOfCohesion" : 0.4844056765597896,
      "MetricsIntensity" : 0.03302261828078921,
      "Density" : 0.999820884828945
    },
    "euclideanDistance" : 46.02421050395492,
    "generation" : 36,
    "numberOfRefactorings" : 46,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.48064353946707,
      "LackOfCohesion" : 0.4844056765597896,
      "MetricsIntensity" : 0.03302261828078921,
      "Density" : 3.0386499727817093
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "c2a6a58f-7fae-4c9b-ae16-98a02890f9e5",
    "objectives" : {
      "NumberOfConcerns" : 0.996617050067659,
      "NumberOfRefactorings" : 46.0,
      "LackOfCohesion" : 0.48440541390646563,
      "MetricsIntensity" : 0.03307664091395535,
      "Density" : 0.99964176965789
    },
    "euclideanDistance" : 46.024213973530564,
    "generation" : 20,
    "numberOfRefactorings" : 46,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.481891348088531,
      "LackOfCohesion" : 0.48440541390646563,
      "MetricsIntensity" : 0.03307664091395535,
      "Density" : 3.0397603485838784
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "cf7112bb-1260-4702-9201-a2fdc62cde81",
    "objectives" : {
      "NumberOfConcerns" : 0.9952638700947226,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.4855343494913495,
      "MetricsIntensity" : 0.033049056044318244,
      "Density" : 0.9962385814078453
    },
    "euclideanDistance" : 47.02360978622167,
    "generation" : 19,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4813695871097687,
      "LackOfCohesion" : 0.4855343494913495,
      "MetricsIntensity" : 0.033049056044318244,
      "Density" : 3.032715376226827
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "b75ebc27-ee01-4365-b085-64a9e01688aa",
    "objectives" : {
      "NumberOfConcerns" : 0.9959404600811907,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.4853292748944739,
      "MetricsIntensity" : 0.03302492242777989,
      "Density" : 0.9964176965789002
    },
    "euclideanDistance" : 47.02362577233548,
    "generation" : 37,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4816305988928034,
      "LackOfCohesion" : 0.4853292748944739,
      "MetricsIntensity" : 0.03302492242777989,
      "Density" : 3.033260632497273
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "8487692d-e243-4c02-8b25-981ed203cf1a",
    "objectives" : {
      "NumberOfConcerns" : 0.9959404600811907,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.48523189294458996,
      "MetricsIntensity" : 0.03304478994136456,
      "Density" : 0.9965968117499552
    },
    "euclideanDistance" : 47.02362857705995,
    "generation" : 24,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4816305988928034,
      "LackOfCohesion" : 0.48523189294458996,
      "MetricsIntensity" : 0.03304478994136456,
      "Density" : 3.032152588555858
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "7163c0cf-1676-4c3b-83f4-f66cec5c80d2",
    "objectives" : {
      "NumberOfConcerns" : 0.9942489851150202,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.486244752973015,
      "MetricsIntensity" : 0.03302414878429423,
      "Density" : 0.9983879634605051
    },
    "euclideanDistance" : 47.023641225708815,
    "generation" : 41,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4783702213279666,
      "LackOfCohesion" : 0.486244752973015,
      "MetricsIntensity" : 0.03302414878429422,
      "Density" : 3.0376021798365125
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "536a55ee-d380-4498-a776-15106fd068aa",
    "objectives" : {
      "NumberOfConcerns" : 0.993234100135318,
      "NumberOfRefactorings" : 48.0,
      "LackOfCohesion" : 0.48608750395494893,
      "MetricsIntensity" : 0.03309991474331527,
      "Density" : 0.9985670786315601
    },
    "euclideanDistance" : 48.02313012345255,
    "generation" : 25,
    "numberOfRefactorings" : 48,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4776044287871164,
      "LackOfCohesion" : 0.48608750395494893,
      "MetricsIntensity" : 0.03309991474331528,
      "Density" : 3.039803707742639
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.tasks.Fingerprinter.FingerprintAction.ref, hudson.tasks.Fingerprinter.FingerprintAction.record], extractedMethods=[hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>), hudson.tasks.Fingerprinter.FingerprintAction.getDependencies(), hudson.tasks.Fingerprinter.FingerprintAction.getRecords(), hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName(), hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName(), hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints(), hudson.tasks.Fingerprinter.FingerprintAction.getBuild(), hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()]"
      } ]
    } ]
  }, {
    "solutionId" : "2285d2b1-b92c-4db6-8cae-249855d8f2db",
    "objectives" : {
      "NumberOfConcerns" : 0.9956021650879567,
      "NumberOfRefactorings" : 48.0,
      "LackOfCohesion" : 0.48494603835850564,
      "MetricsIntensity" : 0.033073736096213294,
      "Density" : 0.9983879634605051
    },
    "euclideanDistance" : 48.02316387670485,
    "generation" : 32,
    "numberOfRefactorings" : 48,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4811273276295924,
      "LackOfCohesion" : 0.48494603835850564,
      "MetricsIntensity" : 0.033073736096213294,
      "Density" : 3.040916530278233
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "4c23af24-11b8-4c38-a1ff-6648f9ce51ca",
    "objectives" : {
      "NumberOfConcerns" : 0.9935723951285521,
      "NumberOfRefactorings" : 49.0,
      "LackOfCohesion" : 0.48544071301821756,
      "MetricsIntensity" : 0.033026078076089906,
      "Density" : 0.9980297331183952
    },
    "euclideanDistance" : 49.02264775448424,
    "generation" : 34,
    "numberOfRefactorings" : 49,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4781077000503273,
      "LackOfCohesion" : 0.48544071301821756,
      "MetricsIntensity" : 0.03302607807608991,
      "Density" : 3.0381679389312977
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "a1ffb6d2-fcab-46c1-b155-40b5a77321f2",
    "objectives" : {
      "NumberOfConcerns" : 0.9949255751014885,
      "NumberOfRefactorings" : 49.0,
      "LackOfCohesion" : 0.4857732722853599,
      "MetricsIntensity" : 0.03304182419412868,
      "Density" : 0.9978506179473401
    },
    "euclideanDistance" : 49.02267485755895,
    "generation" : 43,
    "numberOfRefactorings" : 49,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4808660624370598,
      "LackOfCohesion" : 0.4857732722853599,
      "MetricsIntensity" : 0.03304182419412868,
      "Density" : 3.040938864628821
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "dff52b57-b836-401c-8303-777299191411",
    "objectives" : {
      "NumberOfConcerns" : 0.9939106901217862,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.4861563572733426,
      "MetricsIntensity" : 0.03305421442224858,
      "Density" : 0.9955221207236253
    },
    "euclideanDistance" : 50.02215872328579,
    "generation" : 33,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4793554884189328,
      "LackOfCohesion" : 0.4861563572733426,
      "MetricsIntensity" : 0.03305421442224858,
      "Density" : 3.032187670485543
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "fc75d333-856a-439e-991b-07b8f858ec33",
    "objectives" : {
      "NumberOfConcerns" : 0.9939106901217862,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.4860589215509849,
      "MetricsIntensity" : 0.033074092906299056,
      "Density" : 0.9957012358946803
    },
    "euclideanDistance" : 50.02216135456305,
    "generation" : 18,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.479355488418933,
      "LackOfCohesion" : 0.4860589215509849,
      "MetricsIntensity" : 0.03307409290629906,
      "Density" : 3.031079607415485
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "e0189bad-3456-4c7f-a646-66031d121f96",
    "objectives" : {
      "NumberOfConcerns" : 0.9942489851150202,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.4870378015206163,
      "MetricsIntensity" : 0.03304135955929758,
      "Density" : 0.9951638903815153
    },
    "euclideanDistance" : 50.0221668839393,
    "generation" : 23,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.479114242576749,
      "LackOfCohesion" : 0.4870378015206163,
      "MetricsIntensity" : 0.03304135955929759,
      "Density" : 3.0294438386041436
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "e9a81c97-a905-4af5-b9b2-d19e6d146ccc",
    "objectives" : {
      "NumberOfConcerns" : 0.9942489851150202,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.48694041957073236,
      "MetricsIntensity" : 0.03306122707288225,
      "Density" : 0.9953430055525703
    },
    "euclideanDistance" : 50.02216951272757,
    "generation" : 43,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.479114242576749,
      "LackOfCohesion" : 0.48694041957073236,
      "MetricsIntensity" : 0.033061227072882254,
      "Density" : 3.028337874659401
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "d19de42f-8500-441c-86c0-2bd552ef2a62",
    "objectives" : {
      "NumberOfConcerns" : 0.9942489851150202,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.48694041957073236,
      "MetricsIntensity" : 0.03306122707288225,
      "Density" : 0.9953430055525703
    },
    "euclideanDistance" : 50.02216951272757,
    "generation" : 24,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.479114242576749,
      "LackOfCohesion" : 0.48694041957073236,
      "MetricsIntensity" : 0.03306122707288225,
      "Density" : 3.028337874659401
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item, hudson.search.SuggestedItem.path], extractedMethods=[hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getUrl(), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.getUrl(StringBuilder)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "3285d6d7-17d1-4714-ae03-7f332d79aaf3",
    "objectives" : {
      "NumberOfConcerns" : 0.9945872801082544,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.48585355745518033,
      "MetricsIntensity" : 0.03304994547250794,
      "Density" : 0.9958803510657352
    },
    "euclideanDistance" : 50.02217635718761,
    "generation" : 41,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4796175138399599,
      "LackOfCohesion" : 0.48585355745518033,
      "MetricsIntensity" : 0.03304994547250794,
      "Density" : 3.031624863685931
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "ce319e5a-cd1c-4355-be8e-d460f60234e3",
    "objectives" : {
      "NumberOfConcerns" : 0.9945872801082544,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.4857561755052961,
      "MetricsIntensity" : 0.03306981298609261,
      "Density" : 0.9960594662367902
    },
    "euclideanDistance" : 50.0221789908497,
    "generation" : 23,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4796175138399594,
      "LackOfCohesion" : 0.4857561755052961,
      "MetricsIntensity" : 0.033069812986092614,
      "Density" : 3.0305177111716626
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "0da84264-87e1-4d64-90b6-08deb02de2bc",
    "objectives" : {
      "NumberOfConcerns" : 0.993234100135318,
      "NumberOfRefactorings" : 51.0,
      "LackOfCohesion" : 0.48558220008987024,
      "MetricsIntensity" : 0.03303871859679282,
      "Density" : 0.9974923876052302
    },
    "euclideanDistance" : 51.02174425351384,
    "generation" : 42,
    "numberOfRefactorings" : 51,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4776044287871162,
      "LackOfCohesion" : 0.48558220008987024,
      "MetricsIntensity" : 0.033038718596792825,
      "Density" : 3.038188761593017
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getAuthorities()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "7679cc05-4ed5-419f-b8da-a9973ffcaed3",
    "objectives" : {
      "NumberOfConcerns" : 0.9935723951285521,
      "NumberOfRefactorings" : 51.0,
      "LackOfCohesion" : 0.485581937146482,
      "MetricsIntensity" : 0.03309285480918622,
      "Density" : 0.9973132724341752
    },
    "euclideanDistance" : 51.02174737131665,
    "generation" : 25,
    "numberOfRefactorings" : 51,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4788519637462239,
      "LackOfCohesion" : 0.485581937146482,
      "MetricsIntensity" : 0.03309285480918623,
      "Density" : 3.0393013100436677
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "376e1056-f080-4866-8d83-fec7f5a01d13",
    "objectives" : {
      "NumberOfConcerns" : 0.9935723951285521,
      "NumberOfRefactorings" : 51.0,
      "LackOfCohesion" : 0.48548450142412397,
      "MetricsIntensity" : 0.033112706333900906,
      "Density" : 0.9976715027762851
    },
    "euclideanDistance" : 51.0217534605021,
    "generation" : 18,
    "numberOfRefactorings" : 51,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4788519637462239,
      "LackOfCohesion" : 0.48548450142412397,
      "MetricsIntensity" : 0.033112706333900906,
      "Density" : 3.0387343153300597
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "faa3cbf6-3082-4314-a3c8-3e77ead8ce09",
    "objectives" : {
      "NumberOfConcerns" : 0.9939106901217862,
      "NumberOfRefactorings" : 52.0,
      "LackOfCohesion" : 0.4850673334068479,
      "MetricsIntensity" : 0.03304604226862789,
      "Density" : 0.9983879634605051
    },
    "euclideanDistance" : 52.02135157168034,
    "generation" : 28,
    "numberOfRefactorings" : 52,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4793554884189328,
      "LackOfCohesion" : 0.4850673334068479,
      "MetricsIntensity" : 0.03304604226862788,
      "Density" : 3.0409165302782326
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "80193e4a-86e5-4f08-8aad-09aaf1bb956a",
    "objectives" : {
      "NumberOfConcerns" : 0.9945872801082544,
      "NumberOfRefactorings" : 52.0,
      "LackOfCohesion" : 0.4847651345952343,
      "MetricsIntensity" : 0.03304177761245903,
      "Density" : 0.9987461938026151
    },
    "euclideanDistance" : 52.02136855958497,
    "generation" : 24,
    "numberOfRefactorings" : 52,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4796175138399599,
      "LackOfCohesion" : 0.4847651345952343,
      "MetricsIntensity" : 0.03304177761245903,
      "Density" : 3.040348964013087
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "9e9af057-dcb8-4279-9958-297c4fc8a8aa",
    "objectives" : {
      "NumberOfConcerns" : 0.9945872801082544,
      "NumberOfRefactorings" : 52.0,
      "LackOfCohesion" : 0.4846677526453503,
      "MetricsIntensity" : 0.03306164512604372,
      "Density" : 0.9991044241447251
    },
    "euclideanDistance" : 52.021374543652065,
    "generation" : 44,
    "numberOfRefactorings" : 52,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4796175138399597,
      "LackOfCohesion" : 0.4846677526453503,
      "MetricsIntensity" : 0.03306164512604371,
      "Density" : 3.039782016348774
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "ebcc4280-d845-4cb5-af48-80f7afe93dbd",
    "objectives" : {
      "NumberOfConcerns" : 0.9952638700947226,
      "NumberOfRefactorings" : 52.0,
      "LackOfCohesion" : 0.48465403045774846,
      "MetricsIntensity" : 0.0330477203250986,
      "Density" : 0.9992835393157801
    },
    "euclideanDistance" : 52.02139078729173,
    "generation" : 41,
    "numberOfRefactorings" : 52,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4798792756539234,
      "LackOfCohesion" : 0.48465403045774846,
      "MetricsIntensity" : 0.0330477203250986,
      "Density" : 3.04032697547684
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "0286960d-e380-4894-836a-9e3fee7bcd9b",
    "objectives" : {
      "NumberOfConcerns" : 0.9952638700947226,
      "NumberOfRefactorings" : 52.0,
      "LackOfCohesion" : 0.48455670222101926,
      "MetricsIntensity" : 0.033067576880319464,
      "Density" : 0.99964176965789
    },
    "euclideanDistance" : 52.02139677576015,
    "generation" : 44,
    "numberOfRefactorings" : 52,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4798792756539236,
      "LackOfCohesion" : 0.48455670222101926,
      "MetricsIntensity" : 0.033067576880319464,
      "Density" : 3.039760348583878
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "e05d2128-1974-46e7-a8d8-9638faea7f3a",
    "objectives" : {
      "NumberOfConcerns" : 0.9935723951285521,
      "NumberOfRefactorings" : 54.0,
      "LackOfCohesion" : 0.4852088204785004,
      "MetricsIntensity" : 0.03305868998492156,
      "Density" : 0.9978506179473401
    },
    "euclideanDistance" : 54.02054620638849,
    "generation" : 25,
    "numberOfRefactorings" : 54,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4788519637462236,
      "LackOfCohesion" : 0.4852088204785004,
      "MetricsIntensity" : 0.03305868998492156,
      "Density" : 3.0409388646288216
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "6047749e-978a-4573-b996-dcb70734df5a",
    "objectives" : {
      "NumberOfConcerns" : 0.9925575101488497,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.4855919054664829,
      "MetricsIntensity" : 0.03307107913060869,
      "Density" : 0.9978506179473401
    },
    "euclideanDistance" : 55.02015784657129,
    "generation" : 37,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.477341389728097,
      "LackOfCohesion" : 0.4855919054664829,
      "MetricsIntensity" : 0.03307107913060868,
      "Density" : 3.0392798690671037
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "e4101d51-79d1-4070-943f-bdce9d5938e9",
    "objectives" : {
      "NumberOfConcerns" : 0.9925575101488497,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.48549446974412575,
      "MetricsIntensity" : 0.033090957614659175,
      "Density" : 0.9982088482894501
    },
    "euclideanDistance" : 55.0201634967344,
    "generation" : 36,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.477341389728097,
      "LackOfCohesion" : 0.48549446974412575,
      "MetricsIntensity" : 0.033090957614659175,
      "Density" : 3.0387131952017454
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "7aa4a350-7def-4c68-99ae-3e235515a712",
    "objectives" : {
      "NumberOfConcerns" : 0.9928958051420839,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.4865372709700197,
      "MetricsIntensity" : 0.03308176574011172,
      "Density" : 0.9976715027762851
    },
    "euclideanDistance" : 55.02016906032358,
    "generation" : 40,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4771011575239055,
      "LackOfCohesion" : 0.4865372709700197,
      "MetricsIntensity" : 0.033081765740111714,
      "Density" : 3.0387343153300597
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.enter(Queue)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "2a5f004c-d3e8-4ff6-8b10-cebef89c188f",
    "objectives" : {
      "NumberOfConcerns" : 0.993234100135318,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.4852894171559406,
      "MetricsIntensity" : 0.0330668006571871,
      "Density" : 0.9982088482894501
    },
    "euclideanDistance" : 55.02017388298754,
    "generation" : 46,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4776044287871155,
      "LackOfCohesion" : 0.4852894171559406,
      "MetricsIntensity" : 0.0330668006571871,
      "Density" : 3.0387131952017454
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "87498222-19b3-46ec-b94c-0860d5d22d25",
    "objectives" : {
      "NumberOfConcerns" : 0.993234100135318,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.48519203520605664,
      "MetricsIntensity" : 0.03308666817077176,
      "Density" : 0.9985670786315601
    },
    "euclideanDistance" : 55.02017953648312,
    "generation" : 24,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4776044287871157,
      "LackOfCohesion" : 0.48519203520605664,
      "MetricsIntensity" : 0.03308666817077176,
      "Density" : 3.038147138964579
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_START, hudson.views.ListViewColumn.LIST, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_PROPERTIES_END, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ACTIONS_START, hudson.views.ListViewColumn.DEFAULT_COLUMNS_ORDINAL_ICON_END], extractedMethods=[hudson.views.ListViewColumn.getColumnCaption()]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "2cce4fb4-8f80-4791-8b73-3103d6d76fe2",
    "objectives" : {
      "NumberOfConcerns" : 0.9922192151556157,
      "NumberOfRefactorings" : 57.0,
      "LackOfCohesion" : 0.4857333925381362,
      "MetricsIntensity" : 0.03308372684690234,
      "Density" : 0.9973132724341752
    },
    "euclideanDistance" : 57.01943672289219,
    "generation" : 13,
    "numberOfRefactorings" : 57,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4768378650553882,
      "LackOfCohesion" : 0.4857333925381362,
      "MetricsIntensity" : 0.03308372684690234,
      "Density" : 3.039301310043667
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "d4a2ff43-a46b-4227-9201-ddb26c3b24f0",
    "objectives" : {
      "NumberOfConcerns" : 0.9922192151556157,
      "NumberOfRefactorings" : 57.0,
      "LackOfCohesion" : 0.4857333925381358,
      "MetricsIntensity" : 0.03308372684690236,
      "Density" : 0.9973132724341752
    },
    "euclideanDistance" : 57.01943672289219,
    "generation" : 41,
    "numberOfRefactorings" : 57,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4768378650553882,
      "LackOfCohesion" : 0.4857333925381358,
      "MetricsIntensity" : 0.03308372684690236,
      "Density" : 3.0393013100436677
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.triggers.ReverseBuildTrigger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='jenkins.util.TimeDuration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  }, {
    "solutionId" : "5e076e21-f010-4c20-a89e-d682873a1c0a",
    "objectives" : {
      "NumberOfConcerns" : 0.9922192151556157,
      "NumberOfRefactorings" : 57.0,
      "LackOfCohesion" : 0.4856359568157778,
      "MetricsIntensity" : 0.03310360533095284,
      "Density" : 0.9976715027762851
    },
    "euclideanDistance" : 57.01944217132972,
    "generation" : 17,
    "numberOfRefactorings" : 57,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4768378650553882,
      "LackOfCohesion" : 0.4856359568157778,
      "MetricsIntensity" : 0.03310360533095284,
      "Density" : 3.0387343153300597
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.UserIdMapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.save()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getXmlConfigFile()', targetType='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.XSTREAM', targetTypeName='hudson.model.DirectoryBrowserSupport.FileComparator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getInstance()', targetType='hudson.views.LastSuccessColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.reload()', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.clear()', targetType='hudson.FilePath.CopyRecursiveLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.generatePrefix(String)', targetType='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_PATTERN', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.PREFIX_MAX', targetTypeName='hudson.util.DataSetBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConfigFile(File)', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getConvertedUserIds()', targetType='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.UserIdMapper.MAPPING_FILE', targetTypeName='hudson.console.HyperlinkNote'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.remove(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.isMapped(String)', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.load()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.UserIdMapper.getIdStrategy()', targetType='jenkins.model.IdStrategy.CaseSensitiveEmailAddress'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.setAuthenticated(boolean)', targetType='hudson.model.UpdateCenter.UpdateCenterConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='org.acegisecurity.InsufficientAuthenticationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.toSpring()', targetType='hudson.model.User.AllUsers'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getCredentials()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getAuthorities()', targetType='hudson.views.LastStableColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.getPrincipal()', targetType='hudson.model.UpdateCenter.CoreUpdateMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.isAuthenticated()', targetType='hudson.model.OneOffExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.security.csrf.GlobalCrumbIssuerConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.cli.UpdateNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.util.RobustReflectionConverter.SeenFields'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='org.acegisecurity.AcegiSecurityException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.security.s2m.MasterKillSwitchConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.install.InstallState.Restart'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue.Item'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.queue.QueueListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.queue.QueueListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.views.ListViewColumn",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getDescriptor()', targetType='jenkins.model.UnlabeledLoadStatistics.UnlabeledNodesIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.getColumnCaption()', targetType='hudson.model.queue.BackFiller.PseudoExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.views.ListViewColumn.shownByDefault()', targetType='jenkins.model.NewViewLink.NewViewLinkAction'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.AsyncPeriodicWork",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.createListener()', targetType='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.lastRotateMillis', targetTypeName='hudson.slaves.ComputerLauncherFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getLogFile()', targetType='jenkins.security.RSAConfidentialKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.execute(TaskListener)', targetType='hudson.scheduler.RareOrImpossibleDateException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.doRun()', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.AsyncPeriodicWork.thread', targetTypeName='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller.FindEffectiveRestarters'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.AsyncPeriodicWork.getNormalLoggingLevel()', targetType='hudson.model.Slave.GetClockDifference1'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.tasks.Fingerprinter.FingerprintAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getUrlName()', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getIconFileName()', targetType='jenkins.FilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.compact(Map<String,String>)', targetType='jenkins.diagnostics.RootUrlNotSetMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDisplayName()', targetType='hudson.tasks.BuildTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getDependencies()', targetType='hudson.util.ProcessTreeRemoting'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.add(Map<String,String>)', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getRecords()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getFingerprints()', targetType='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.tasks.Fingerprinter.FingerprintAction.ref', targetTypeName='hudson.model.Queue.BlockedItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.Fingerprinter.FingerprintAction.getBuild()', targetType='hudson.tasks.BuildStepCompatibilityLayer'"
      } ]
    } ]
  } ]
}