{
  "executionId" : "8ce66277-ad10-42d4-a974-316dfdc1bf63",
  "computingTime" : 10999,
  "maxEvaluations" : 1000,
  "initialPopulationSize" : 50,
  "finalPopulationSize" : 34,
  "algorithm" : "Baseline",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.077711818672422,
    "meanNumConcerns" : 1.5644511581067468,
    "meanMetricsIntensity" : 0.03296937024300845,
    "meanLackOfCohesion" : 0.485350300503555
  },
  "population" : [ {
    "solutionId" : "e406fbfe-4559-48cb-a261-30dafa1a8e31",
    "objectives" : {
      "NumberOfConcerns" : 1.0019311232700354,
      "NumberOfRefactorings" : 3.0,
      "LackOfCohesion" : 0.48551344341543357,
      "MetricsIntensity" : 0.032924638117904415,
      "Density" : 0.9998246536910398
    },
    "euclideanDistance" : 3.352659041632159,
    "generation" : 0,
    "numberOfRefactorings" : 3,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.565108094519859,
      "LackOfCohesion" : 0.48551344341543357,
      "MetricsIntensity" : 0.032924638117904415,
      "Density" : 3.072198275862069,
      "baselineType" : "EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    } ]
  }, {
    "solutionId" : "ad7192af-c737-4754-a791-dc4bc15934f6",
    "objectives" : {
      "NumberOfConcerns" : 1.0045059542967494,
      "NumberOfRefactorings" : 8.0,
      "LackOfCohesion" : 0.48624882255185337,
      "MetricsIntensity" : 0.03289578175951602,
      "Density" : 1.0021041557075223
    },
    "euclideanDistance" : 8.139457291551725,
    "generation" : 0,
    "numberOfRefactorings" : 8,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5651955867602805,
      "LackOfCohesion" : 0.48624882255185337,
      "MetricsIntensity" : 0.03289578175951602,
      "Density" : 3.0725806451612905,
      "baselineType" : "CONCERN_EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "8a3b8f14-c440-499c-a1fd-601750c9d7f0",
    "objectives" : {
      "NumberOfConcerns" : 1.002574831026714,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.486729422681292,
      "MetricsIntensity" : 0.03285902174270171,
      "Density" : 0.9996493073820796
    },
    "euclideanDistance" : 10.111500396863528,
    "generation" : 0,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5629703963873551,
      "LackOfCohesion" : 0.486729422681292,
      "MetricsIntensity" : 0.03285902174270171,
      "Density" : 3.0667025282409908,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "98be500d-2d70-45e6-a9a1-089e4753c5fc",
    "objectives" : {
      "NumberOfConcerns" : 0.9996781461216607,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4850515083040791,
      "MetricsIntensity" : 0.03285041328526366,
      "Density" : 0.9977204979835175
    },
    "euclideanDistance" : 13.08553234313724,
    "generation" : 0,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5639476334340376,
      "LackOfCohesion" : 0.4850515083040791,
      "MetricsIntensity" : 0.03285041328526366,
      "Density" : 3.069039913700107,
      "baselineType" : "MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "57b526bc-2c18-421e-b6d0-7259303c44eb",
    "objectives" : {
      "NumberOfConcerns" : 1.0012874155133569,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48531770516513006,
      "MetricsIntensity" : 0.03287603637111484,
      "Density" : 0.9989479221462388
    },
    "euclideanDistance" : 13.085758959584268,
    "generation" : 0,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5617469879518076,
      "LackOfCohesion" : 0.48531770516513006,
      "MetricsIntensity" : 0.03287603637111483,
      "Density" : 3.0662002152852543,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.search.FixedSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.slaves.ChannelPinger.SetUpRemotePing'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "ea3086d3-23d2-48b4-98ea-99dc4049c815",
    "objectives" : {
      "NumberOfConcerns" : 1.0009655616350177,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48621518105040795,
      "MetricsIntensity" : 0.03289425762871052,
      "Density" : 0.999123268455199
    },
    "euclideanDistance" : 14.079689861485472,
    "generation" : 0,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5612449799196793,
      "LackOfCohesion" : 0.48621518105040795,
      "MetricsIntensity" : 0.03289425762871052,
      "Density" : 3.0667384284176533,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.Cause.RemoteCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Iff'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.DependencyGraph'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.search.FixedSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.slaves.ChannelPinger.SetUpRemotePing'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "07e0bd8a-1981-40bb-8266-8ee3e7c20c8a",
    "objectives" : {
      "NumberOfConcerns" : 1.0012874155133569,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4885679307692422,
      "MetricsIntensity" : 0.032847155990081194,
      "Density" : 0.9992986147641593
    },
    "euclideanDistance" : 15.074513317801268,
    "generation" : 0,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5625313912606729,
      "LackOfCohesion" : 0.4885679307692422,
      "MetricsIntensity" : 0.03284715599008119,
      "Density" : 3.0689283791060853,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.DeleteSuffixesRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "7bffd6d5-9bd6-48a1-beb0-c2e10f371dd2",
    "objectives" : {
      "NumberOfConcerns" : 1.0006437077566785,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4857264365606076,
      "MetricsIntensity" : 0.03289941726894239,
      "Density" : 0.999123268455199
    },
    "euclideanDistance" : 16.06974012478958,
    "generation" : 0,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5615268709191361,
      "LackOfCohesion" : 0.4857264365606076,
      "MetricsIntensity" : 0.03289941726894239,
      "Density" : 3.0683898761443187,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.triggers.SlowTriggerAdminMonitor.Value'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.triggers.SCMTrigger.AdministrativeMonitorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.TransientUserActionFactory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.search.FixedSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.slaves.ChannelPinger.SetUpRemotePing'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "5c63f2e5-d854-4771-ac43-4e9e7c651231",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.4876096312965802,
      "MetricsIntensity" : 0.03290305929278384,
      "Density" : 0.9985972295283184
    },
    "euclideanDistance" : 17.065639225961203,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560522350577599,
      "LackOfCohesion" : 0.4876096312965802,
      "MetricsIntensity" : 0.03290305929278383,
      "Density" : 3.0667743672590198,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.DeleteSuffixesRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.triggers.SlowTriggerAdminMonitor.Value'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.triggers.SCMTrigger.AdministrativeMonitorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.TransientUserActionFactory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "98a66ffe-11c7-4d69-9dca-beac8d433084",
    "objectives" : {
      "NumberOfConcerns" : 1.0012874155133569,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48687672800310394,
      "MetricsIntensity" : 0.03292665904105319,
      "Density" : 0.9998246536910398
    },
    "euclideanDistance" : 17.065765700364587,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5625313912606738,
      "LackOfCohesion" : 0.48687672800310394,
      "MetricsIntensity" : 0.032926659041053186,
      "Density" : 3.0688912809472546,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.DeleteSuffixesRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.triggers.SlowTriggerAdminMonitor.Value'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.triggers.SCMTrigger.AdministrativeMonitorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.TransientUserActionFactory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "caee58c0-bb47-401a-b25e-3246bdecb182",
    "objectives" : {
      "NumberOfConcerns" : 1.0009655616350177,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.4877356707231101,
      "MetricsIntensity" : 0.032872711645473215,
      "Density" : 0.9994739610731194
    },
    "euclideanDistance" : 18.062110811145775,
    "generation" : 0,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5620291310899048,
      "LackOfCohesion" : 0.4877356707231101,
      "MetricsIntensity" : 0.032872711645473215,
      "Density" : 3.0694668820678523,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.DeleteSuffixesRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.Cause.RemoteCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Iff'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.DependencyGraph'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "516cda25-61c4-4d9f-965c-971b9ed8d17e",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4853564722602629,
      "MetricsIntensity" : 0.03292044675991719,
      "Density" : 0.9978958442924777
    },
    "euclideanDistance" : 19.058607519597942,
    "generation" : 0,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5597989949748743,
      "LackOfCohesion" : 0.4853564722602629,
      "MetricsIntensity" : 0.0329204467599172,
      "Density" : 3.066271551724138,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.triggers.SlowTriggerAdminMonitor.Value'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.triggers.SCMTrigger.AdministrativeMonitorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.TransientUserActionFactory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.Cause.RemoteCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Iff'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.DependencyGraph'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.search.FixedSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.slaves.ChannelPinger.SetUpRemotePing'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "1f52747c-b5d5-4fa2-a4a8-d8db29c853ee",
    "objectives" : {
      "NumberOfConcerns" : 1.0006437077566785,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4845949474009099,
      "MetricsIntensity" : 0.03289703126647384,
      "Density" : 0.9994739610731194
    },
    "euclideanDistance" : 23.048560703576456,
    "generation" : 0,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5615268709191361,
      "LackOfCohesion" : 0.4845949474009099,
      "MetricsIntensity" : 0.03289703126647384,
      "Density" : 3.067814854682455,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.logging.LogRecorder.ComputerLogInitializer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.ExtensionFinder.DefaultGuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "83387cb8-0e45-4523-85f3-d0c364e3622e",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48510451915031977,
      "MetricsIntensity" : 0.03294703686490407,
      "Density" : 0.9987725758372786
    },
    "euclideanDistance" : 24.046455630072014,
    "generation" : 0,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5597989949748747,
      "LackOfCohesion" : 0.48510451915031977,
      "MetricsIntensity" : 0.03294703686490408,
      "Density" : 3.067312870220787,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.search.FixedSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.slaves.ChannelPinger.SetUpRemotePing'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.logging.LogRecorder.ComputerLogInitializer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.ExtensionFinder.DefaultGuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.model.UpdateSite.Deprecation'"
      } ]
    } ]
  }, {
    "solutionId" : "4c3e1ee2-83a0-4333-bdc1-94bf4c726e7c",
    "objectives" : {
      "NumberOfConcerns" : 1.0003218538783392,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48573153716791617,
      "MetricsIntensity" : 0.03295493297632588,
      "Density" : 0.9998246536910398
    },
    "euclideanDistance" : 24.046565540702105,
    "generation" : 0,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5610246107483678,
      "LackOfCohesion" : 0.48573153716791617,
      "MetricsIntensity" : 0.032954932976325874,
      "Density" : 3.0688912809472546,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.Cause.RemoteCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Iff'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.DependencyGraph'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.logging.LogRecorder.ComputerLogInitializer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.ExtensionFinder.DefaultGuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.model.UpdateSite.Deprecation'"
      } ]
    } ]
  }, {
    "solutionId" : "a7e48636-0823-479c-b51c-9a8050cc15f1",
    "objectives" : {
      "NumberOfConcerns" : 0.9996781461216607,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4865698033890596,
      "MetricsIntensity" : 0.032932898927478305,
      "Density" : 0.9985972295283184
    },
    "euclideanDistance" : 25.044647882772413,
    "generation" : 0,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5615887380593263,
      "LackOfCohesion" : 0.4865698033890596,
      "MetricsIntensity" : 0.032932898927478305,
      "Density" : 3.0667743672590198,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.DeleteSuffixesRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.util.ConsistentHash.Point'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.AbstractMarkupText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.util.HistoricalSecrets'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.util.xml.RestrictiveEntityResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.model.UpdateSite.Deprecation'"
      } ]
    } ]
  }, {
    "solutionId" : "7f0b8b86-fd73-45ad-9dd3-1d68b5c8b88a",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.48805639310550136,
      "MetricsIntensity" : 0.0329257025936952,
      "Density" : 0.9984218832193582
    },
    "euclideanDistance" : 25.044682657235523,
    "generation" : 0,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.559738955823293,
      "LackOfCohesion" : 0.48805639310550136,
      "MetricsIntensity" : 0.032925702593695205,
      "Density" : 3.066235864297253,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.slaves.SlaveComputer.DetectOS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.init.InitStrategy.FilterByExtension'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.model.Jenkins.CloudList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "7694d00b-7572-4e55-8b25-483848754bda",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.484216176663753,
      "MetricsIntensity" : 0.03288372637045832,
      "Density" : 0.9975451516745573
    },
    "euclideanDistance" : 26.042824593040432,
    "generation" : 0,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5605832076420312,
      "LackOfCohesion" : 0.484216176663753,
      "MetricsIntensity" : 0.03288372637045831,
      "Density" : 3.065193965517241,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.triggers.SlowTriggerAdminMonitor.Value'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.triggers.SCMTrigger.AdministrativeMonitorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.TransientUserActionFactory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.util.ConsistentHash.Point'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.AbstractMarkupText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.util.HistoricalSecrets'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.util.xml.RestrictiveEntityResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "58449b39-3f4e-4cbe-9f1e-ddedb7bb09e4",
    "objectives" : {
      "NumberOfConcerns" : 1.0006437077566785,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.4848347657797832,
      "MetricsIntensity" : 0.032882292095550304,
      "Density" : 0.9985972295283184
    },
    "euclideanDistance" : 26.042938203127868,
    "generation" : 0,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5623115577889446,
      "LackOfCohesion" : 0.4848347657797832,
      "MetricsIntensity" : 0.03288229209555031,
      "Density" : 3.0667743672590198,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.util.ConsistentHash.Point'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.AbstractMarkupText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.util.HistoricalSecrets'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.util.xml.RestrictiveEntityResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.model.UpdateSite.Deprecation'"
      } ]
    } ]
  }, {
    "solutionId" : "f220befa-a243-4790-96a9-3b58a52dbd16",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.4883371079639271,
      "MetricsIntensity" : 0.0328945936147688,
      "Density" : 0.998246536910398
    },
    "euclideanDistance" : 27.041376653819924,
    "generation" : 0,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5613065326633169,
      "LackOfCohesion" : 0.4883371079639271,
      "MetricsIntensity" : 0.032894593614768805,
      "Density" : 3.0673491379310343,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.slaves.SlaveComputer.DetectOS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.init.InitStrategy.FilterByExtension'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.model.Jenkins.CloudList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "3f3719f0-21f7-4aeb-ab78-862b06e262c0",
    "objectives" : {
      "NumberOfConcerns" : 0.9996781461216607,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.4842142853613262,
      "MetricsIntensity" : 0.03290845961862167,
      "Density" : 0.9978958442924777
    },
    "euclideanDistance" : 28.03980561545946,
    "generation" : 0,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5615887380593263,
      "LackOfCohesion" : 0.4842142853613262,
      "MetricsIntensity" : 0.03290845961862167,
      "Density" : 3.0646203554119555,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.Cause.RemoteCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Iff'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.DependencyGraph'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.util.ConsistentHash.Point'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.AbstractMarkupText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.util.HistoricalSecrets'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.util.xml.RestrictiveEntityResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "bb68a9d3-83f2-45b9-b4e7-8ed3a7e3ede8",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.4871431213106092,
      "MetricsIntensity" : 0.03295583084016635,
      "Density" : 0.9994739610731194
    },
    "euclideanDistance" : 28.03992408524477,
    "generation" : 0,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5620915032679736,
      "LackOfCohesion" : 0.4871431213106092,
      "MetricsIntensity" : 0.03295583084016635,
      "Density" : 3.0694668820678523,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.DeleteSuffixesRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.Cause.RemoteCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Iff'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.DependencyGraph'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.util.ConsistentHash.Point'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.AbstractMarkupText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.util.HistoricalSecrets'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.util.xml.RestrictiveEntityResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.model.UpdateSite.Deprecation'"
      } ]
    } ]
  }, {
    "solutionId" : "5869701f-8701-4918-a87d-d71b8d8fa87b",
    "objectives" : {
      "NumberOfConcerns" : 0.9964596073382684,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.48799212700939,
      "MetricsIntensity" : 0.03295949812581923,
      "Density" : 0.997369805365597
    },
    "euclideanDistance" : 35.03179842546271,
    "generation" : 0,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5565610859728503,
      "LackOfCohesion" : 0.48799212700939,
      "MetricsIntensity" : 0.03295949812581922,
      "Density" : 3.0663072776280322,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.slaves.SlaveComputer.DetectOS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.init.InitStrategy.FilterByExtension'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.model.Jenkins.CloudList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.search.FixedSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.slaves.ChannelPinger.SetUpRemotePing'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.logging.LogRecorder.ComputerLogInitializer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.ExtensionFinder.DefaultGuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "f6331da5-ecae-4086-af67-64dd19c963ac",
    "objectives" : {
      "NumberOfConcerns" : 0.9980688767299646,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.4840123223092576,
      "MetricsIntensity" : 0.03298574161808515,
      "Density" : 0.9987725758372786
    },
    "euclideanDistance" : 35.03182901488643,
    "generation" : 0,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5598591549295773,
      "LackOfCohesion" : 0.4840123223092576,
      "MetricsIntensity" : 0.03298574161808515,
      "Density" : 3.067312870220787,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.triggers.SlowTriggerAdminMonitor.Value'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.triggers.SCMTrigger.AdministrativeMonitorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.TransientUserActionFactory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.logging.LogRecorder.ComputerLogInitializer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.ExtensionFinder.DefaultGuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.util.ConsistentHash.Point'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.AbstractMarkupText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.util.HistoricalSecrets'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.util.xml.RestrictiveEntityResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "fd396efb-42e1-432e-8dc8-e0483749f113",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.4857387295041582,
      "MetricsIntensity" : 0.032998097361021314,
      "Density" : 0.9996493073820796
    },
    "euclideanDistance" : 35.031905451096414,
    "generation" : 0,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5605832076420312,
      "LackOfCohesion" : 0.4857387295041582,
      "MetricsIntensity" : 0.032998097361021314,
      "Density" : 3.068353067814855,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.DeleteSuffixesRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.logging.LogRecorder.ComputerLogInitializer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.ExtensionFinder.DefaultGuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.util.ConsistentHash.Point'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.AbstractMarkupText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.util.HistoricalSecrets'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.util.xml.RestrictiveEntityResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.model.UpdateSite.Deprecation'"
      } ]
    } ]
  }, {
    "solutionId" : "aa54201a-9ec5-47eb-bd3d-4638be5b5a5d",
    "objectives" : {
      "NumberOfConcerns" : 0.9964596073382684,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.48796153668730274,
      "MetricsIntensity" : 0.033033232141741614,
      "Density" : 0.9978958442924777
    },
    "euclideanDistance" : 37.030094862433515,
    "generation" : 0,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5573440643863177,
      "LackOfCohesion" : 0.48796153668730274,
      "MetricsIntensity" : 0.033033232141741614,
      "Density" : 3.0679245283018863,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.slaves.SlaveComputer.DetectOS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.init.InitStrategy.FilterByExtension'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.model.Jenkins.CloudList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.triggers.SlowTriggerAdminMonitor.Value'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.triggers.SCMTrigger.AdministrativeMonitorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.TransientUserActionFactory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.logging.LogRecorder.ComputerLogInitializer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.ExtensionFinder.DefaultGuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.model.UpdateSite.Deprecation'"
      } ]
    } ]
  }, {
    "solutionId" : "4e4dbed8-b810-4be0-90e8-7ee4cbf08a3c",
    "objectives" : {
      "NumberOfConcerns" : 0.9967814612166077,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.48959769481534315,
      "MetricsIntensity" : 0.03296723825561366,
      "Density" : 0.9977204979835175
    },
    "euclideanDistance" : 38.029328316643834,
    "generation" : 0,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5570638511814978,
      "LackOfCohesion" : 0.48959769481534315,
      "MetricsIntensity" : 0.03296723825561366,
      "Density" : 3.0673854447439357,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.DeleteSuffixesRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.slaves.SlaveComputer.DetectOS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.init.InitStrategy.FilterByExtension'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.model.Jenkins.CloudList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.logging.LogRecorder.ComputerLogInitializer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.ExtensionFinder.DefaultGuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "317e163c-8dc9-404e-8687-b6cbb3a25771",
    "objectives" : {
      "NumberOfConcerns" : 0.9967814612166077,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.48666501992223943,
      "MetricsIntensity" : 0.032915141209397154,
      "Density" : 0.9959670348939155
    },
    "euclideanDistance" : 39.028495357420034,
    "generation" : 0,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5586311021640666,
      "LackOfCohesion" : 0.48666501992223943,
      "MetricsIntensity" : 0.03291514120939715,
      "Density" : 3.0636461704422855,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.slaves.SlaveComputer.DetectOS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.init.InitStrategy.FilterByExtension'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.model.Jenkins.CloudList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.util.ConsistentHash.Point'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.AbstractMarkupText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.util.HistoricalSecrets'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.util.xml.RestrictiveEntityResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "24065398-38fc-4375-8b8d-3cf237371747",
    "objectives" : {
      "NumberOfConcerns" : 0.9967814612166077,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.4865307077097922,
      "MetricsIntensity" : 0.033007195517151165,
      "Density" : 0.9985972295283184
    },
    "euclideanDistance" : 39.028560969023026,
    "generation" : 0,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5578470824949697,
      "LackOfCohesion" : 0.4865307077097922,
      "MetricsIntensity" : 0.03300719551715116,
      "Density" : 3.068426724137931,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.DeleteSuffixesRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.Cause.RemoteCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Iff'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.DependencyGraph'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.search.FixedSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.slaves.ChannelPinger.SetUpRemotePing'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.logging.LogRecorder.ComputerLogInitializer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.ExtensionFinder.DefaultGuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.util.ConsistentHash.Point'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.AbstractMarkupText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.util.HistoricalSecrets'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.util.xml.RestrictiveEntityResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.model.UpdateSite.Deprecation'"
      } ]
    } ]
  }, {
    "solutionId" : "e8a78f0c-3f85-4ebd-975e-f363d7f8afb6",
    "objectives" : {
      "NumberOfConcerns" : 0.9954940457032507,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.48901051772840726,
      "MetricsIntensity" : 0.033003722257641595,
      "Density" : 0.9970191127476766
    },
    "euclideanDistance" : 42.02648303199242,
    "generation" : 0,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5558350100603615,
      "LackOfCohesion" : 0.48901051772840726,
      "MetricsIntensity" : 0.033003722257641595,
      "Density" : 3.06688241639698,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.FilePath.DeleteSuffixesRecursive'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='jenkins.security.s2m.CallableDirectionChecker.ChannelConfiguratorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.slaves.SlaveComputer.DetectOS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.init.InitStrategy.FilterByExtension'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.model.Jenkins.CloudList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.search.FixedSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.slaves.ChannelPinger.SetUpRemotePing'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.logging.LogRecorder.ComputerLogInitializer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.ExtensionFinder.DefaultGuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.model.UpdateSite.Deprecation'"
      } ]
    } ]
  }, {
    "solutionId" : "c52a4323-7dcd-41b3-a038-068dfb4e227d",
    "objectives" : {
      "NumberOfConcerns" : 0.998712584486643,
      "NumberOfRefactorings" : 43.0,
      "LackOfCohesion" : 0.48712814079799,
      "MetricsIntensity" : 0.03300873238243056,
      "Density" : 0.9992986147641593
    },
    "euclideanDistance" : 43.02597364325243,
    "generation" : 0,
    "numberOfRefactorings" : 43,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5585133098945252,
      "LackOfCohesion" : 0.48712814079799,
      "MetricsIntensity" : 0.03300873238243056,
      "Density" : 3.067276641550055,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.slaves.SlaveComputer.DetectOS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.init.InitStrategy.FilterByExtension'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.model.Jenkins.CloudList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.logging.LogRecorder.ComputerLogInitializer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.ExtensionFinder.DefaultGuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.util.ConsistentHash.Point'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.AbstractMarkupText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.util.HistoricalSecrets'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.util.xml.RestrictiveEntityResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "908a5176-f569-441c-8970-40b130851f46",
    "objectives" : {
      "NumberOfConcerns" : 0.9961377534599292,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.48673313183670036,
      "MetricsIntensity" : 0.03297307431895826,
      "Density" : 0.9970191127476766
    },
    "euclideanDistance" : 47.023657172749864,
    "generation" : 0,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5576245596376443,
      "LackOfCohesion" : 0.48673313183670036,
      "MetricsIntensity" : 0.03297307431895826,
      "Density" : 3.06522911051213,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.slaves.SlaveComputer.DetectOS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.init.InitStrategy.FilterByExtension'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.model.Jenkins.CloudList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.logging.LogRecorder.ComputerLogInitializer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.ExtensionFinder.DefaultGuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.util.ConsistentHash.Point'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.AbstractMarkupText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.util.HistoricalSecrets'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.util.xml.RestrictiveEntityResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    } ]
  }, {
    "solutionId" : "97e9699d-7c46-4846-b2db-4d0de7a5de77",
    "objectives" : {
      "NumberOfConcerns" : 0.9948503379465723,
      "NumberOfRefactorings" : 52.0,
      "LackOfCohesion" : 0.4862299880025157,
      "MetricsIntensity" : 0.03303923917160014,
      "Density" : 0.9964930738207961
    },
    "euclideanDistance" : 52.0213440506264,
    "generation" : 0,
    "numberOfRefactorings" : 52,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5563947633434032,
      "LackOfCohesion" : 0.4862299880025157,
      "MetricsIntensity" : 0.03303923917160015,
      "Density" : 3.0652642934196335,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.slaves.SlaveComputer.DetectOS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.init.InitStrategy.FilterByExtension'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.Run.AddArtifacts'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.model.Jenkins.CloudList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.management.ConfigureLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.AdminCallableWhitelist'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.Cause.RemoteCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Iff'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='jenkins.model.lazy.BuildReferenceMapAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.DependencyGraph'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.LockedException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.logging.LogRecorder.ComputerLogInitializer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.ExtensionFinder.DefaultGuiceExtensionAnnotation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.model.OptionalJobProperty.OptionalJobPropertyDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='jenkins.model.BuildDiscarder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step1'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.util.ConsistentHash.Point'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.AbstractMarkupText'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.util.HistoricalSecrets'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.console.ConsoleAnnotator.ConsoleAnnotatorAggregator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.util.xml.RestrictiveEntityResolver'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.util.xml.RestrictiveEntityResolver'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.model.UpdateSite.Deprecation'"
      } ]
    } ]
  }, {
    "solutionId" : "29085b26-3214-4191-b1ec-519c3a8d35c0",
    "objectives" : {
      "NumberOfConcerns" : 0.9967814612166077,
      "NumberOfRefactorings" : 53.0,
      "LackOfCohesion" : 0.4890877646038208,
      "MetricsIntensity" : 0.0330637297281136,
      "Density" : 0.9977204979835175
    },
    "euclideanDistance" : 53.02102714513583,
    "generation" : 0,
    "numberOfRefactorings" : 53,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5594159113796575,
      "LackOfCohesion" : 0.4890877646038208,
      "MetricsIntensity" : 0.0330637297281136,
      "Density" : 3.0740140464613726,
      "baselineType" : "CONCERN_MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='jenkins.FilePathFilterAggregator.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='org.acegisecurity.GrantedAuthorityImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='org.acegisecurity.userdetails.UsernameNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='jenkins.model.ArtifactManagerFactoryDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.NullTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='jenkins.security.SecureRequester.Default'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='jenkins.security.SecureRequester.Default'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.security.s2m.ConfigDirectory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.ProcessTree.Darwin.DarwinProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.util.ProcessTree.Darwin.DarwinProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.util.ProcessTree.Darwin.DarwinProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.util.ProcessTree.Darwin.DarwinProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.util.ProcessTree.Darwin.DarwinProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.util.ProcessTree.Darwin.DarwinProcess'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='hudson.security.FullControlOnceLoggedInAuthorizationStrategy.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.node_monitors.ArchitectureMonitor.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings()', targetType='hudson.model.Slave.GetClockDifference3'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.Slave.GetClockDifference3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='hudson.model.UpdateCenter.RestartJenkinsJob.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.AsyncPeriodicWork.LazyTaskListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.destroy()', targetType='hudson.model.StringParameterDefinition.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.FilePath.GetHomeDirectory'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.Queue.BuildableRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.NotReallyRoleSensitiveCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.RenameTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.model.MasterBuildConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.node_monitors.SwapSpaceMonitor.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.model.UpdateCenter.DownloadJob.Failure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.cli.StopBuildsCommand'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.model.ComputerPanelBox'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='hudson.util.AdministrativeError'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.model.queue.MappingWorksheet.ExecutorSlot'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.views.ListViewColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='jenkins.I18n'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='jenkins.I18n'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='jenkins.I18n'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='jenkins.I18n'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.FilePath.CreateTextTempFile'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ProcessTree.OSProcess.CheckVetoes'"
      } ]
    } ]
  } ]
}