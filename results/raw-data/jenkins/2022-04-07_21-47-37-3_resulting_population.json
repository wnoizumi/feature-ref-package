{
  "executionId" : "27a3c2d2-5cd8-4856-809c-00757b579778",
  "computingTime" : 3791570,
  "maxEvaluations" : 100,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 42,
  "algorithm" : "MOSA",
  "projectBeforeRefactoring" : {
    "meanDensity" : 2.990243902439024,
    "meanNumConcerns" : 1.4843907351460226,
    "meanMetricsIntensity" : 0.03296937024300845,
    "meanLackOfCohesion" : 0.48535030050355515
  },
  "population" : [ {
    "solutionId" : "8930d62c-75c9-4662-8a26-eb6705ef235f",
    "objectives" : {
      "NumberOfConcerns" : 1.0003392130257802,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4864729802796153,
      "MetricsIntensity" : 0.032924834517967454,
      "Density" : 0.9961935834692768
    },
    "euclideanDistance" : 9.123092688454534,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4819095477386925,
      "LackOfCohesion" : 0.4864729802796153,
      "MetricsIntensity" : 0.032924834517967454,
      "Density" : 2.9740259740259742
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='hudson.model.ViewProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "814863d1-f714-4787-a3fe-9f1c423cac2c",
    "objectives" : {
      "NumberOfConcerns" : 1.0003392130257802,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4864729802796153,
      "MetricsIntensity" : 0.032924834517967454,
      "Density" : 0.9961935834692768
    },
    "euclideanDistance" : 9.123092688454534,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4819095477386925,
      "LackOfCohesion" : 0.4864729802796153,
      "MetricsIntensity" : 0.03292483451796745,
      "Density" : 2.9740259740259742
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='hudson.model.ViewProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "02ef35da-cb6b-46be-a44e-21e0f4b44a0c",
    "objectives" : {
      "NumberOfConcerns" : 1.0003392130257802,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.487574908654271,
      "MetricsIntensity" : 0.03293395315964395,
      "Density" : 0.9960123255392423
    },
    "euclideanDistance" : 9.123131755628824,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4819095477386928,
      "LackOfCohesion" : 0.487574908654271,
      "MetricsIntensity" : 0.03293395315964395,
      "Density" : 2.973484848484848
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='hudson.model.ViewProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "c419f33d-d7d8-4ab5-80b8-2512fbbb32b5",
    "objectives" : {
      "NumberOfConcerns" : 0.9989823609226595,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.48745553308034983,
      "MetricsIntensity" : 0.03292506004567409,
      "Density" : 0.9980061627696212
    },
    "euclideanDistance" : 9.123194561921302,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4798994974874369,
      "LackOfCohesion" : 0.48745553308034983,
      "MetricsIntensity" : 0.03292506004567409,
      "Density" : 2.979437229437229
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String)', targetType='hudson.model.User.FullNameIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "dbf84aad-97c8-4cc2-b83e-9fc0ac2a69a1",
    "objectives" : {
      "NumberOfConcerns" : 0.998303934871099,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48748308128971624,
      "MetricsIntensity" : 0.03294319301004384,
      "Density" : 0.9947435200290012
    },
    "euclideanDistance" : 10.110630565178822,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4788944723618094,
      "LackOfCohesion" : 0.48748308128971624,
      "MetricsIntensity" : 0.03294319301004384,
      "Density" : 2.96969696969697
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String)', targetType='hudson.model.User.FullNameIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "aa9e6efa-8a67-4d2b-90d3-7d37afd0cbab",
    "objectives" : {
      "NumberOfConcerns" : 0.9989823609226595,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48739671983971833,
      "MetricsIntensity" : 0.03294182407660577,
      "Density" : 0.9949247779590357
    },
    "euclideanDistance" : 10.110711240932334,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4798994974874369,
      "LackOfCohesion" : 0.48739671983971833,
      "MetricsIntensity" : 0.03294182407660577,
      "Density" : 2.9702380952380953
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "ab2be8b2-d1f2-4fe9-b49c-668775e6e121",
    "objectives" : {
      "NumberOfConcerns" : 0.9989823609226595,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4873967198397184,
      "MetricsIntensity" : 0.032941824076605765,
      "Density" : 0.9949247779590357
    },
    "euclideanDistance" : 10.110711240932334,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4798994974874369,
      "LackOfCohesion" : 0.4873967198397184,
      "MetricsIntensity" : 0.032941824076605765,
      "Density" : 2.9702380952380953
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "17e35cae-fcc5-4e15-b843-d1ebaf72ab71",
    "objectives" : {
      "NumberOfConcerns" : 0.9993215739484396,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48740437212009863,
      "MetricsIntensity" : 0.03293372763193732,
      "Density" : 0.9949247779590357
    },
    "euclideanDistance" : 10.110745104804746,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.480402010050251,
      "LackOfCohesion" : 0.48740437212009863,
      "MetricsIntensity" : 0.03293372763193732,
      "Density" : 2.970238095238096
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "cedcd83d-fa58-4353-a3bb-971cbe409f85",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4875749086542709,
      "MetricsIntensity" : 0.032924487781537407,
      "Density" : 0.9954685517491391
    },
    "euclideanDistance" : 10.110873896502044,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4814070351758797,
      "LackOfCohesion" : 0.4875749086542709,
      "MetricsIntensity" : 0.032924487781537407,
      "Density" : 2.9718614718614713
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='hudson.model.ViewProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.install.InstallState.Upgrade'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "cff7fc17-ee19-4b2c-836e-bdf5c71b4387",
    "objectives" : {
      "NumberOfConcerns" : 0.9989823609226595,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4873691716303521,
      "MetricsIntensity" : 0.03292506004567409,
      "Density" : 0.9980061627696212
    },
    "euclideanDistance" : 10.111013541054895,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4798994974874369,
      "LackOfCohesion" : 0.4873691716303521,
      "MetricsIntensity" : 0.03292506004567408,
      "Density" : 2.9794372294372296
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String)', targetType='hudson.model.User.FullNameIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "68e4550c-0975-417a-b456-e3d3902700ee",
    "objectives" : {
      "NumberOfConcerns" : 0.9989823609226595,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4872520917405449,
      "MetricsIntensity" : 0.03291977381506432,
      "Density" : 0.9981874206996556
    },
    "euclideanDistance" : 10.11102577371313,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4798994974874369,
      "LackOfCohesion" : 0.4872520917405449,
      "MetricsIntensity" : 0.032919773815064314,
      "Density" : 2.9799783549783543
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.removeNode(Node)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String)', targetType='hudson.model.User.FullNameIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "d5a92c2f-6905-4201-820c-1c16b8b14fa6",
    "objectives" : {
      "NumberOfConcerns" : 0.998303934871099,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48739671983971855,
      "MetricsIntensity" : 0.03294319301004383,
      "Density" : 0.9947435200290012
    },
    "euclideanDistance" : 11.100665125725351,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4788944723618094,
      "LackOfCohesion" : 0.48739671983971855,
      "MetricsIntensity" : 0.032943193010043836,
      "Density" : 2.96969696969697
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String)', targetType='hudson.model.User.FullNameIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "ab6c6045-4f49-4fcb-9677-de99f3fb7bed",
    "objectives" : {
      "NumberOfConcerns" : 0.9993215739484396,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4872994265606069,
      "MetricsIntensity" : 0.032933727631937304,
      "Density" : 0.9947435200290012
    },
    "euclideanDistance" : 11.100752390731923,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4804020100502513,
      "LackOfCohesion" : 0.4872994265606069,
      "MetricsIntensity" : 0.032933727631937304,
      "Density" : 2.96969696969697
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "86ee8903-cd3f-4c19-9dab-fbe695688f8e",
    "objectives" : {
      "NumberOfConcerns" : 0.9996607869742198,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48729177428022735,
      "MetricsIntensity" : 0.03294182407660578,
      "Density" : 0.9952872938191046
    },
    "euclideanDistance" : 11.100831361808282,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4809045226130653,
      "LackOfCohesion" : 0.48729177428022735,
      "MetricsIntensity" : 0.03294182407660578,
      "Density" : 2.9713203463203457
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "0a513f75-b383-40b8-ad5e-1dc76921dfe9",
    "objectives" : {
      "NumberOfConcerns" : 0.9996607869742198,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4872917742802276,
      "MetricsIntensity" : 0.03294182407660577,
      "Density" : 0.9952872938191046
    },
    "euclideanDistance" : 11.100831361808282,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4809045226130653,
      "LackOfCohesion" : 0.4872917742802276,
      "MetricsIntensity" : 0.03294182407660577,
      "Density" : 2.971320346320346
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "ec8ea276-b26a-4fda-b2a5-9376ab3913d8",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4874961994846525,
      "MetricsIntensity" : 0.032924487781537434,
      "Density" : 0.9952872938191046
    },
    "euclideanDistance" : 11.100870838075966,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4814070351758792,
      "LackOfCohesion" : 0.4874961994846525,
      "MetricsIntensity" : 0.032924487781537434,
      "Density" : 2.9713203463203457
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='hudson.model.ViewProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.install.InstallState.Upgrade'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "3c329012-7d66-42cf-a0e7-0149d5cfa00a",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48751369041123455,
      "MetricsIntensity" : 0.032922893320392714,
      "Density" : 0.9956498096791735
    },
    "euclideanDistance" : 11.100904109970374,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4814070351758795,
      "LackOfCohesion" : 0.48751369041123455,
      "MetricsIntensity" : 0.03292289332039272,
      "Density" : 2.9724025974025965
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='hudson.model.ViewProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.install.InstallState.Upgrade'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "d535c556-43a5-4fc8-a5cc-be0db532c506",
    "objectives" : {
      "NumberOfConcerns" : 0.9993215739484396,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4861699499765851,
      "MetricsIntensity" : 0.03290784495932912,
      "Density" : 0.9981874206996556
    },
    "euclideanDistance" : 11.101011930518853,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4804020100502508,
      "LackOfCohesion" : 0.4861699499765851,
      "MetricsIntensity" : 0.03290784495932913,
      "Density" : 2.979978354978354
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='hudson.model.ViewProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String)', targetType='hudson.model.User.FullNameIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "5f40e7e2-5017-4777-8c44-ea3e51e2cf18",
    "objectives" : {
      "NumberOfConcerns" : 0.9989823609226595,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4872994265606068,
      "MetricsIntensity" : 0.032924262253830765,
      "Density" : 0.994199746238898
    },
    "euclideanDistance" : 12.09235062471426,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4798994974874369,
      "LackOfCohesion" : 0.4872994265606068,
      "MetricsIntensity" : 0.03292426225383077,
      "Density" : 2.9680735930735933
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.install.InstallState.Upgrade'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "ffc8f96c-6006-4545-9085-496ba23de0dd",
    "objectives" : {
      "NumberOfConcerns" : 0.9989823609226595,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48714485049694,
      "MetricsIntensity" : 0.03293372763193731,
      "Density" : 0.9945622620989668
    },
    "euclideanDistance" : 12.092374232813317,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4798994974874369,
      "LackOfCohesion" : 0.48714485049694,
      "MetricsIntensity" : 0.032933727631937304,
      "Density" : 2.969155844155844
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "a48bd36a-4ea0-4055-835d-e8ec23ab6498",
    "objectives" : {
      "NumberOfConcerns" : 0.9989823609226595,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4871448504969401,
      "MetricsIntensity" : 0.0329337276319373,
      "Density" : 0.9945622620989668
    },
    "euclideanDistance" : 12.092374232813317,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4798994974874369,
      "LackOfCohesion" : 0.4871448504969401,
      "MetricsIntensity" : 0.032933727631937304,
      "Density" : 2.9691558441558445
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "2a484eb4-36b6-4633-b7d4-3bd034fd8c2d",
    "objectives" : {
      "NumberOfConcerns" : 0.9993215739484396,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4872994265606069,
      "MetricsIntensity" : 0.03292426225383076,
      "Density" : 0.9943810041689324
    },
    "euclideanDistance" : 12.092393556603342,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.480402010050251,
      "LackOfCohesion" : 0.4872994265606069,
      "MetricsIntensity" : 0.032924262253830765,
      "Density" : 2.96861471861472
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.install.InstallState.Upgrade'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "c39fc54c-1bb1-404a-ad80-c279353f2819",
    "objectives" : {
      "NumberOfConcerns" : 0.9993215739484396,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4861974981859512,
      "MetricsIntensity" : 0.03292324005682275,
      "Density" : 0.9951060358890701
    },
    "euclideanDistance" : 12.092408840996063,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.480402010050251,
      "LackOfCohesion" : 0.4861974981859512,
      "MetricsIntensity" : 0.03292324005682275,
      "Density" : 2.970779220779221
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='hudson.model.ViewProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.install.InstallState.Upgrade'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "8a01650f-d211-4c8a-bb29-7dbf874687d7",
    "objectives" : {
      "NumberOfConcerns" : 0.9993215739484396,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48696272622390635,
      "MetricsIntensity" : 0.03293190764308596,
      "Density" : 0.9947435200290012
    },
    "euclideanDistance" : 12.092409829561305,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4804020100502515,
      "LackOfCohesion" : 0.48696272622390635,
      "MetricsIntensity" : 0.03293190764308596,
      "Density" : 2.96969696969697
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "57350e9a-42f3-47e6-9823-58e6518f4130",
    "objectives" : {
      "NumberOfConcerns" : 0.9993215739484396,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4869627262239064,
      "MetricsIntensity" : 0.03293190764308595,
      "Density" : 0.9947435200290012
    },
    "euclideanDistance" : 12.092409829561305,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.480402010050251,
      "LackOfCohesion" : 0.4869627262239064,
      "MetricsIntensity" : 0.03293190764308595,
      "Density" : 2.96969696969697
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "f7d8b9c3-4f36-4e7a-a06f-e71788d8f70a",
    "objectives" : {
      "NumberOfConcerns" : 0.9993215739484396,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4869550739435272,
      "MetricsIntensity" : 0.03293190764308596,
      "Density" : 0.9949247779590357
    },
    "euclideanDistance" : 12.09242443336058,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.480402010050251,
      "LackOfCohesion" : 0.4869550739435272,
      "MetricsIntensity" : 0.03293190764308597,
      "Density" : 2.970238095238096
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "1844948a-be00-4b73-aca2-fb666a0b4e51",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48715949914795237,
      "MetricsIntensity" : 0.03292244226497943,
      "Density" : 0.9952872938191046
    },
    "euclideanDistance" : 12.092518557440899,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4814070351758792,
      "LackOfCohesion" : 0.48715949914795237,
      "MetricsIntensity" : 0.03292244226497943,
      "Density" : 2.9713203463203457
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.install.InstallState.Upgrade'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "3c032823-68f6-4a29-8190-4f89c2c7ac9b",
    "objectives" : {
      "NumberOfConcerns" : 0.9989823609226595,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48601537391291794,
      "MetricsIntensity" : 0.03290784495932913,
      "Density" : 0.9978249048395867
    },
    "euclideanDistance" : 12.092597494669716,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4798994974874369,
      "LackOfCohesion" : 0.48601537391291794,
      "MetricsIntensity" : 0.03290784495932913,
      "Density" : 2.9788961038961035
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String)', targetType='hudson.model.User.FullNameIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "9dc70095-6a5f-4a8e-8ee5-a95675109a69",
    "objectives" : {
      "NumberOfConcerns" : 0.9989823609226595,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48601537391291794,
      "MetricsIntensity" : 0.03290784495932913,
      "Density" : 0.9978249048395867
    },
    "euclideanDistance" : 12.092597494669716,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4798994974874369,
      "LackOfCohesion" : 0.48601537391291794,
      "MetricsIntensity" : 0.03290784495932913,
      "Density" : 2.9788961038961035
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String)', targetType='hudson.model.User.FullNameIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "35e573f6-4e95-4522-b070-151b46bb8d53",
    "objectives" : {
      "NumberOfConcerns" : 0.9986431478968792,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4871448504969402,
      "MetricsIntensity" : 0.03292426225383078,
      "Density" : 0.9940184883088635
    },
    "euclideanDistance" : 13.08524952014106,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4793969849246231,
      "LackOfCohesion" : 0.4871448504969402,
      "MetricsIntensity" : 0.03292426225383077,
      "Density" : 2.9675324675324695
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.install.InstallState.Upgrade'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "1b2c7924-4a32-47fd-a41a-474d41986857",
    "objectives" : {
      "NumberOfConcerns" : 0.998303934871099,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48714485049694,
      "MetricsIntensity" : 0.032935096565375375,
      "Density" : 0.9943810041689324
    },
    "euclideanDistance" : 13.085251207133265,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4788944723618094,
      "LackOfCohesion" : 0.48714485049694,
      "MetricsIntensity" : 0.03293509656537537,
      "Density" : 2.9686147186147194
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String)', targetType='hudson.model.User.FullNameIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "72bcb39a-0a1f-49f1-8dfe-f36d90d2ab3b",
    "objectives" : {
      "NumberOfConcerns" : 0.9989823609226595,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4868840170542885,
      "MetricsIntensity" : 0.03292894424850318,
      "Density" : 0.9940184883088635
    },
    "euclideanDistance" : 13.085265716597684,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4798994974874369,
      "LackOfCohesion" : 0.4868840170542885,
      "MetricsIntensity" : 0.03292894424850318,
      "Density" : 2.9675324675324686
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.install.InstallState.Upgrade'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "bd44c8cb-ba0e-4f2a-b36d-3ab3faf69ed6",
    "objectives" : {
      "NumberOfConcerns" : 0.9989823609226595,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48696272622390663,
      "MetricsIntensity" : 0.03292244226497943,
      "Density" : 0.994199746238898
    },
    "euclideanDistance" : 13.085282399581303,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4798994974874369,
      "LackOfCohesion" : 0.48696272622390663,
      "MetricsIntensity" : 0.03292244226497943,
      "Density" : 2.968073593073593
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.install.InstallState.Upgrade'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "5839062f-ebb9-49b7-91cf-8ff6807d32f8",
    "objectives" : {
      "NumberOfConcerns" : 0.9989823609226595,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4868081501602396,
      "MetricsIntensity" : 0.03293190764308595,
      "Density" : 0.9945622620989668
    },
    "euclideanDistance" : 13.08530422023995,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4798994974874369,
      "LackOfCohesion" : 0.4868081501602396,
      "MetricsIntensity" : 0.03293190764308595,
      "Density" : 2.9691558441558445
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "c272cb91-d00a-4470-b511-bfa1c9cebacb",
    "objectives" : {
      "NumberOfConcerns" : 0.9993215739484396,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48677907149479727,
      "MetricsIntensity" : 0.03293840962660971,
      "Density" : 0.9947435200290012
    },
    "euclideanDistance" : 13.085342833952518,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4804020100502508,
      "LackOfCohesion" : 0.48677907149479727,
      "MetricsIntensity" : 0.03293840962660971,
      "Density" : 2.96969696969697
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='hudson.model.ViewProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "3199f0c9-27a9-4fe4-86eb-3a7e247d78cd",
    "objectives" : {
      "NumberOfConcerns" : 0.9986431478968792,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48598476479139985,
      "MetricsIntensity" : 0.03290784495932912,
      "Density" : 0.9978249048395867
    },
    "euclideanDistance" : 13.08549604697616,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4793969849246233,
      "LackOfCohesion" : 0.48598476479139985,
      "MetricsIntensity" : 0.03290784495932913,
      "Density" : 2.9788961038961035
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.security.GlobalSecurityConfiguration.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String)', targetType='hudson.model.User.FullNameIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "ff080bc2-52a4-4bd5-933c-da14d92cd858",
    "objectives" : {
      "NumberOfConcerns" : 0.9989823609226595,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4859847647913997,
      "MetricsIntensity" : 0.03290784495932913,
      "Density" : 0.9981874206996556
    },
    "euclideanDistance" : 13.085549587317564,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4798994974874369,
      "LackOfCohesion" : 0.4859847647913997,
      "MetricsIntensity" : 0.03290784495932913,
      "Density" : 2.9799783549783543
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='hudson.model.ViewProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.security.GlobalSecurityConfiguration.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String)', targetType='hudson.model.User.FullNameIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "3d0aca87-f998-41c4-9a87-986e62c4b3bf",
    "objectives" : {
      "NumberOfConcerns" : 0.9993215739484396,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48578963164172123,
      "MetricsIntensity" : 0.032907844959329115,
      "Density" : 0.9985499365597245
    },
    "euclideanDistance" : 13.085595900700612,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4804020100502508,
      "LackOfCohesion" : 0.48578963164172123,
      "MetricsIntensity" : 0.032907844959329115,
      "Density" : 2.9810606060606046
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='hudson.model.ViewProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.security.GlobalSecurityConfiguration.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String)', targetType='hudson.model.User.FullNameIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "952eeff1-252a-4abf-ad34-ca354ae62e9e",
    "objectives" : {
      "NumberOfConcerns" : 0.9979647218453188,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48662449543113034,
      "MetricsIntensity" : 0.03293168211537931,
      "Density" : 0.9936559724487947
    },
    "euclideanDistance" : 15.073857292440827,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4783919597989952,
      "LackOfCohesion" : 0.48662449543113034,
      "MetricsIntensity" : 0.03293168211537931,
      "Density" : 2.966450216450216
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String)', targetType='hudson.model.User.FullNameIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "467fbb0f-2241-4201-b6d6-016220aa825e",
    "objectives" : {
      "NumberOfConcerns" : 0.998303934871099,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48656633810024574,
      "MetricsIntensity" : 0.032913549151009566,
      "Density" : 0.9969186151894145
    },
    "euclideanDistance" : 15.074093258792727,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4788944723618094,
      "LackOfCohesion" : 0.48656633810024574,
      "MetricsIntensity" : 0.032913549151009566,
      "Density" : 2.976190476190477
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='hudson.security.GlobalSecurityConfiguration.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String)', targetType='hudson.model.User.FullNameIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "aad9cf8b-c967-48a5-a7e0-3016283a70aa",
    "objectives" : {
      "NumberOfConcerns" : 0.9993215739484396,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48637656154683295,
      "MetricsIntensity" : 0.03291354915100956,
      "Density" : 0.9974623889795179
    },
    "euclideanDistance" : 15.074190535047888,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.480402010050251,
      "LackOfCohesion" : 0.48637656154683295,
      "MetricsIntensity" : 0.032913549151009566,
      "Density" : 2.9778138528138527
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='hudson.model.ViewProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String)', targetType='hudson.model.User.FullNameIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  }, {
    "solutionId" : "0636c6aa-463f-4fb3-a617-c87d85db1e0d",
    "objectives" : {
      "NumberOfConcerns" : 0.9979647218453188,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4866244954311305,
      "MetricsIntensity" : 0.03292221673727278,
      "Density" : 0.9934747145187602
    },
    "euclideanDistance" : 16.069250538414803,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.478391959798995,
      "LackOfCohesion" : 0.4866244954311305,
      "MetricsIntensity" : 0.03292221673727278,
      "Density" : 2.9659090909090913
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.FilePath.WritePipe'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.FilePath.WritePipe'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.equals(Object)', targetType='jenkins.model.Jenkins.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getShortDescription()', targetType='hudson.scm.EditType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.widgets.HistoryWidget'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.install.InstallState.Upgrade'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext)', targetType='jenkins.util.groovy.AbstractGroovyViewModule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String)', targetType='hudson.model.User.FullNameIdResolver'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.SuggestedItem.path, hudson.search.SuggestedItem.parent, hudson.search.SuggestedItem.item], extractedMethods=[hudson.search.SuggestedItem.getPath(), hudson.search.SuggestedItem.build(SearchableModelObject, Item), hudson.search.SuggestedItem.getPath(StringBuilder), hudson.search.SuggestedItem.getUrl(StringBuilder), hudson.search.SuggestedItem.getUrl()]"
      } ]
    } ]
  } ]
}