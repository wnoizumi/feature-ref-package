{
  "executionId" : "b6b8aa0d-8d22-4aa1-82c6-cdbec835ce19",
  "computingTime" : 3758150,
  "maxEvaluations" : 100,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 35,
  "algorithm" : "MOSA",
  "projectBeforeRefactoring" : {
    "meanDensity" : 2.990243902439024,
    "meanNumConcerns" : 1.4843907351460226,
    "meanMetricsIntensity" : 0.03296937024300845,
    "meanLackOfCohesion" : 0.48535030050355515
  },
  "population" : [ {
    "solutionId" : "5196350b-2fe3-43db-bf0f-b31a7c3e8a69",
    "objectives" : {
      "NumberOfConcerns" : 0.9976255088195387,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4871433322282508,
      "MetricsIntensity" : 0.032880172139126106,
      "Density" : 0.9936559724487947
    },
    "euclideanDistance" : 9.122554388946385,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4786324786324792,
      "LackOfCohesion" : 0.4871433322282508,
      "MetricsIntensity" : 0.032880172139126106,
      "Density" : 2.9712737127371276
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.model.MyView'"
      } ]
    } ]
  }, {
    "solutionId" : "e0ab9c92-3357-4e1d-a709-b9bd2237926b",
    "objectives" : {
      "NumberOfConcerns" : 0.9976255088195387,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4882458680606653,
      "MetricsIntensity" : 0.032886238218382595,
      "Density" : 0.9934747145187602
    },
    "euclideanDistance" : 9.122593611280623,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4786324786324798,
      "LackOfCohesion" : 0.4882458680606653,
      "MetricsIntensity" : 0.032886238218382595,
      "Density" : 2.9707317073170736
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.jna.WINBASE.FILETIME'"
      } ]
    } ]
  }, {
    "solutionId" : "187eef30-2a13-400e-a1b5-935308b50ff2",
    "objectives" : {
      "NumberOfConcerns" : 0.9979647218453188,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4870908305219454,
      "MetricsIntensity" : 0.03287916249092791,
      "Density" : 0.9938372303788291
    },
    "euclideanDistance" : 9.122608428680884,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4791352438411258,
      "LackOfCohesion" : 0.4870908305219454,
      "MetricsIntensity" : 0.03287916249092791,
      "Density" : 2.971815718157181
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      } ]
    } ]
  }, {
    "solutionId" : "36ce7842-c730-4ab5-a2b2-0ae192b4595c",
    "objectives" : {
      "NumberOfConcerns" : 0.9979647218453188,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4870908305219454,
      "MetricsIntensity" : 0.03287916249092791,
      "Density" : 0.9938372303788291
    },
    "euclideanDistance" : 9.122608428680884,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4791352438411256,
      "LackOfCohesion" : 0.4870908305219454,
      "MetricsIntensity" : 0.032879162490927906,
      "Density" : 2.971815718157182
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      } ]
    } ]
  }, {
    "solutionId" : "842dac29-0be5-47e2-bd0a-dc45abc9a075",
    "objectives" : {
      "NumberOfConcerns" : 0.9979647218453188,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.48709083052194513,
      "MetricsIntensity" : 0.03287916249092793,
      "Density" : 0.9938372303788291
    },
    "euclideanDistance" : 9.122608428680884,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4791352438411258,
      "LackOfCohesion" : 0.48709083052194513,
      "MetricsIntensity" : 0.03287916249092792,
      "Density" : 2.9718157181571794
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      } ]
    } ]
  }, {
    "solutionId" : "801089f6-a69d-485e-a0ac-8521a0665b2d",
    "objectives" : {
      "NumberOfConcerns" : 0.9969470827679783,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4882091168662516,
      "MetricsIntensity" : 0.0328862382183826,
      "Density" : 0.9929309407286568
    },
    "euclideanDistance" : 10.11035335610736,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4776269482151845,
      "LackOfCohesion" : 0.4882091168662516,
      "MetricsIntensity" : 0.0328862382183826,
      "Density" : 2.9691056910569107
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.model.MyView'"
      } ]
    } ]
  }, {
    "solutionId" : "88c6b710-ab1f-4731-8e37-3a36cf39d68a",
    "objectives" : {
      "NumberOfConcerns" : 0.9976255088195387,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4871295505303457,
      "MetricsIntensity" : 0.032879162490927906,
      "Density" : 0.9934747145187602
    },
    "euclideanDistance" : 10.110421598655597,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4786324786324798,
      "LackOfCohesion" : 0.4871295505303457,
      "MetricsIntensity" : 0.03287916249092791,
      "Density" : 2.970731707317074
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      } ]
    } ]
  }, {
    "solutionId" : "f4189736-58a0-4088-a73f-65c98897c203",
    "objectives" : {
      "NumberOfConcerns" : 0.9976255088195387,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48706457966879263,
      "MetricsIntensity" : 0.03287916249092792,
      "Density" : 0.9936559724487947
    },
    "euclideanDistance" : 10.110436280968525,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.478632478632479,
      "LackOfCohesion" : 0.48706457966879263,
      "MetricsIntensity" : 0.03287916249092792,
      "Density" : 2.9712737127371276
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      } ]
    } ]
  }, {
    "solutionId" : "5901a94c-2c88-43b3-a98f-2e3cea468f62",
    "objectives" : {
      "NumberOfConcerns" : 0.9979647218453188,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4870607613628795,
      "MetricsIntensity" : 0.03287916249092792,
      "Density" : 0.9940184883088635
    },
    "euclideanDistance" : 10.110505208234311,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.479135243841126,
      "LackOfCohesion" : 0.4870607613628795,
      "MetricsIntensity" : 0.03287916249092791,
      "Density" : 2.9723577235772356
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      } ]
    } ]
  }, {
    "solutionId" : "845f54b9-4325-474e-8c9f-797363c16197",
    "objectives" : {
      "NumberOfConcerns" : 0.9989823609226595,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48608850173941187,
      "MetricsIntensity" : 0.03289950834229774,
      "Density" : 0.9978249048395867
    },
    "euclideanDistance" : 10.110933918650897,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4798994974874369,
      "LackOfCohesion" : 0.48608850173941187,
      "MetricsIntensity" : 0.03289950834229774,
      "Density" : 2.9821235102925243
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext), jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String), jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String), jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext), jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)]"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.model.MyView'"
      } ]
    } ]
  }, {
    "solutionId" : "2235dc53-791c-45d4-9432-b17c3e17b632",
    "objectives" : {
      "NumberOfConcerns" : 0.9976255088195387,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48700283050285387,
      "MetricsIntensity" : 0.03287916249092792,
      "Density" : 0.9936559724487947
    },
    "euclideanDistance" : 11.100489252446241,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4786324786324796,
      "LackOfCohesion" : 0.48700283050285387,
      "MetricsIntensity" : 0.03287916249092792,
      "Density" : 2.971273712737127
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String), org.jenkins.ui.icon.Icon.getClassSpec()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      } ]
    } ]
  }, {
    "solutionId" : "bd1b4a84-ac59-4bac-870a-4ec99e052e24",
    "objectives" : {
      "NumberOfConcerns" : 0.9986431478968792,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48604324396688126,
      "MetricsIntensity" : 0.03289950834229775,
      "Density" : 0.9974623889795179
    },
    "euclideanDistance" : 11.100880134787744,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4793969849246231,
      "LackOfCohesion" : 0.48604324396688126,
      "MetricsIntensity" : 0.03289950834229775,
      "Density" : 2.981040086673891
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext), jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String), jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String), jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext), jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)]"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.model.MyView'"
      } ]
    } ]
  }, {
    "solutionId" : "52eb7f20-4b1f-438a-900a-e677eb3e5879",
    "objectives" : {
      "NumberOfConcerns" : 0.9966078697421981,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48692676268974083,
      "MetricsIntensity" : 0.032881528714899,
      "Density" : 0.9927496827986224
    },
    "euclideanDistance" : 12.092020428608405,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4771241830065356,
      "LackOfCohesion" : 0.48692676268974083,
      "MetricsIntensity" : 0.03288152871489901,
      "Density" : 2.968563685636857
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.model.MyView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.model.MyView'"
      } ]
    } ]
  }, {
    "solutionId" : "ac3fc74c-c7cd-4ba4-956c-1c2baa40e7d5",
    "objectives" : {
      "NumberOfConcerns" : 0.9979647218453188,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48585481898506794,
      "MetricsIntensity" : 0.03291661910965945,
      "Density" : 0.9970998731194489
    },
    "euclideanDistance" : 12.092447235856243,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4783919597989947,
      "LackOfCohesion" : 0.48585481898506794,
      "MetricsIntensity" : 0.03291661910965945,
      "Density" : 2.9799566630552548
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext), jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String), jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String), jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext), jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)]"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String), org.jenkins.ui.icon.Icon.Icon(String, String, String, IconFormat)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.model.MyView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.model.MyView'"
      } ]
    } ]
  }, {
    "solutionId" : "11cac9a6-aaee-4675-899a-04e4369f77e3",
    "objectives" : {
      "NumberOfConcerns" : 0.9966078697421981,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4869524765936244,
      "MetricsIntensity" : 0.03288152871489898,
      "Density" : 0.9927496827986224
    },
    "euclideanDistance" : 13.084990756134303,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4771241830065351,
      "LackOfCohesion" : 0.4869524765936244,
      "MetricsIntensity" : 0.03288152871489898,
      "Density" : 2.9685636856368567
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.model.MyView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.model.MyView'"
      } ]
    } ]
  }, {
    "solutionId" : "d4d96311-ce3b-4c69-a9f0-881a39c29ad2",
    "objectives" : {
      "NumberOfConcerns" : 0.9966078697421981,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48689669353067516,
      "MetricsIntensity" : 0.03288152871489898,
      "Density" : 0.9929309407286568
    },
    "euclideanDistance" : 13.085002433480483,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4771241830065351,
      "LackOfCohesion" : 0.48689669353067516,
      "MetricsIntensity" : 0.03288152871489898,
      "Density" : 2.969105691056911
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.model.MyView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.model.MyView'"
      } ]
    } ]
  }, {
    "solutionId" : "f27637b6-f3e2-4baf-a55b-db9135c083a6",
    "objectives" : {
      "NumberOfConcerns" : 0.9966078697421981,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4869065376006074,
      "MetricsIntensity" : 0.032880172139126106,
      "Density" : 0.9929309407286568
    },
    "euclideanDistance" : 13.085002796375953,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.477124183006535,
      "LackOfCohesion" : 0.4869065376006074,
      "MetricsIntensity" : 0.032880172139126106,
      "Density" : 2.969105691056911
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.model.MyView'"
      } ]
    } ]
  }, {
    "solutionId" : "5cac98ad-6a52-44a2-bcf5-5559909c9053",
    "objectives" : {
      "NumberOfConcerns" : 0.996268656716418,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48676872062155563,
      "MetricsIntensity" : 0.03288152871489899,
      "Density" : 0.992568424868588
    },
    "euclideanDistance" : 14.078912184423476,
    "generation" : 1,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4766214177978887,
      "LackOfCohesion" : 0.48676872062155563,
      "MetricsIntensity" : 0.03288152871489899,
      "Density" : 2.9680216802168036
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.model.MyView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.model.MyView'"
      } ]
    } ]
  }, {
    "solutionId" : "d20d2682-42b7-42d5-8359-5fe00f3f025d",
    "objectives" : {
      "NumberOfConcerns" : 0.9959294436906377,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48756443966424257,
      "MetricsIntensity" : 0.03289512312252661,
      "Density" : 0.9923871669385536
    },
    "euclideanDistance" : 15.073669391288394,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4761186525892402,
      "LackOfCohesion" : 0.48756443966424257,
      "MetricsIntensity" : 0.03289512312252661,
      "Density" : 2.9674796747967473
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.ErrorObject'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.model.MyView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.model.MyView'"
      } ]
    } ]
  }, {
    "solutionId" : "790bf932-f5f8-43a3-b010-3ff02adf4772",
    "objectives" : {
      "NumberOfConcerns" : 0.9972862957937585,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4867068123595369,
      "MetricsIntensity" : 0.03288727900110673,
      "Density" : 0.9931121986586913
    },
    "euclideanDistance" : 15.073779117700377,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4781297134238303,
      "LackOfCohesion" : 0.4867068123595369,
      "MetricsIntensity" : 0.032887279001106724,
      "Density" : 2.9696476964769647
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.ErrorObject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.util.ErrorObject'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      } ]
    } ]
  }, {
    "solutionId" : "db7fa8fa-eb90-4180-a592-c6aafd6f6dfe",
    "objectives" : {
      "NumberOfConcerns" : 0.9972862957937585,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48670681235953694,
      "MetricsIntensity" : 0.032887279001106724,
      "Density" : 0.9931121986586913
    },
    "euclideanDistance" : 15.073779117700377,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4781297134238305,
      "LackOfCohesion" : 0.48670681235953694,
      "MetricsIntensity" : 0.032887279001106724,
      "Density" : 2.9696476964769642
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.ErrorObject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.util.ErrorObject'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      } ]
    } ]
  }, {
    "solutionId" : "f0f018c6-8266-4d02-8f7d-1d837386f99b",
    "objectives" : {
      "NumberOfConcerns" : 0.9979647218453188,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4866739987930961,
      "MetricsIntensity" : 0.03288756497647583,
      "Density" : 0.9940184883088635
    },
    "euclideanDistance" : 15.073882695383396,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4791352438411263,
      "LackOfCohesion" : 0.4866739987930961,
      "MetricsIntensity" : 0.03288756497647583,
      "Density" : 2.9707475622968587
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.ErrorObject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.util.ErrorObject'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.util.SystemProperties.AgentCopier.CopySystemProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      } ]
    } ]
  }, {
    "solutionId" : "f8c27776-728a-40f0-bd86-dc828f6da9f9",
    "objectives" : {
      "NumberOfConcerns" : 0.9972862957937585,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4866248172757275,
      "MetricsIntensity" : 0.03291263239552673,
      "Density" : 0.9960123255392423
    },
    "euclideanDistance" : 15.073967873873286,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4773869346733666,
      "LackOfCohesion" : 0.4866248172757275,
      "MetricsIntensity" : 0.03291263239552673,
      "Density" : 2.976706392199351
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.ErrorObject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.util.ErrorObject'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.Item'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.IOUtils.mode(File)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext), jenkins.util.xstream.XStreamDOM.ConverterImpl.escape(String), jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String), jenkins.util.xstream.XStreamDOM.ConverterImpl.unmarshalElement(HierarchicalStreamReader, UnmarshallingContext), jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)]"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.model.MyView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.model.MyView'"
      } ]
    } ]
  }, {
    "solutionId" : "1ca9c331-1d04-4388-9452-526f25429a23",
    "objectives" : {
      "NumberOfConcerns" : 0.9972862957937585,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4866615296378486,
      "MetricsIntensity" : 0.032884157969780635,
      "Density" : 0.9931121986586913
    },
    "euclideanDistance" : 16.069187054956373,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.478129713423831,
      "LackOfCohesion" : 0.4866615296378486,
      "MetricsIntensity" : 0.032884157969780635,
      "Density" : 2.9680390032502704
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.ErrorObject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.util.ErrorObject'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.util.SystemProperties.AgentCopier.CopySystemProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      } ]
    } ]
  }, {
    "solutionId" : "b1dea078-1582-43b0-907d-eced799d87e1",
    "objectives" : {
      "NumberOfConcerns" : 0.9972862957937585,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48666152963784814,
      "MetricsIntensity" : 0.03288850138270899,
      "Density" : 0.9932934565887258
    },
    "euclideanDistance" : 16.069198267014837,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.478129713423831,
      "LackOfCohesion" : 0.48666152963784814,
      "MetricsIntensity" : 0.03288850138270898,
      "Density" : 2.9685807150595886
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.ErrorObject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.util.ErrorObject'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.util.SystemProperties.AgentCopier.CopySystemProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      } ]
    } ]
  }, {
    "solutionId" : "2f7d39d6-6d70-4893-aa7d-7e0038e93e3e",
    "objectives" : {
      "NumberOfConcerns" : 0.9972862957937585,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4866615296378483,
      "MetricsIntensity" : 0.03288756497647582,
      "Density" : 0.9934747145187602
    },
    "euclideanDistance" : 16.069209470304557,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.478129713423831,
      "LackOfCohesion" : 0.4866615296378483,
      "MetricsIntensity" : 0.03288756497647582,
      "Density" : 2.969122426868906
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.ErrorObject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.util.ErrorObject'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.util.SystemProperties.AgentCopier.CopySystemProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      } ]
    } ]
  }, {
    "solutionId" : "b9000cf5-ddbb-4393-8de6-c9f82e9be214",
    "objectives" : {
      "NumberOfConcerns" : 0.9976255088195387,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48664774793994325,
      "MetricsIntensity" : 0.032887564976475825,
      "Density" : 0.9938372303788291
    },
    "euclideanDistance" : 16.069252525206007,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.478632478632479,
      "LackOfCohesion" : 0.48664774793994325,
      "MetricsIntensity" : 0.032887564976475825,
      "Density" : 2.97020585048754
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.ErrorObject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.util.ErrorObject'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.util.SystemProperties.AgentCopier.CopySystemProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      } ]
    } ]
  }, {
    "solutionId" : "5b60318d-8fe4-42ea-874a-7b6e1b1cd50f",
    "objectives" : {
      "NumberOfConcerns" : 0.9976255088195387,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4866477479399431,
      "MetricsIntensity" : 0.03288756497647583,
      "Density" : 0.9938372303788291
    },
    "euclideanDistance" : 16.069252525206007,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4786324786324787,
      "LackOfCohesion" : 0.4866477479399431,
      "MetricsIntensity" : 0.03288756497647583,
      "Density" : 2.9702058504875404
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.ErrorObject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.util.ErrorObject'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.util.SystemProperties.AgentCopier.CopySystemProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      } ]
    } ]
  }, {
    "solutionId" : "24e08774-4bab-4866-89a6-883d7b7afb6f",
    "objectives" : {
      "NumberOfConcerns" : 0.9979647218453188,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48664774793994325,
      "MetricsIntensity" : 0.03288756497647582,
      "Density" : 0.9940184883088635
    },
    "euclideanDistance" : 16.069284799382103,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4791352438411252,
      "LackOfCohesion" : 0.48664774793994325,
      "MetricsIntensity" : 0.03288756497647582,
      "Density" : 2.9707475622968587
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.ErrorObject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.util.ErrorObject'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.util.SystemProperties.AgentCopier.CopySystemProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      } ]
    } ]
  }, {
    "solutionId" : "0e85f966-b635-4674-8ecf-e342693c80f5",
    "objectives" : {
      "NumberOfConcerns" : 0.9966078697421981,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.4865788394504177,
      "MetricsIntensity" : 0.03288863557687961,
      "Density" : 0.992568424868588
    },
    "euclideanDistance" : 17.065059623494705,
    "generation" : 1,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4771241830065356,
      "LackOfCohesion" : 0.4865788394504177,
      "MetricsIntensity" : 0.03288863557687961,
      "Density" : 2.968021680216803
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.ErrorObject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.util.ErrorObject'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.model.MyView'"
      } ]
    } ]
  }, {
    "solutionId" : "1d6162f8-d972-4b1a-b2f7-08f936c836a3",
    "objectives" : {
      "NumberOfConcerns" : 0.9969470827679783,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.4865788394504173,
      "MetricsIntensity" : 0.03288551454555351,
      "Density" : 0.9929309407286568
    },
    "euclideanDistance" : 17.0651005201541,
    "generation" : 1,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4776269482151836,
      "LackOfCohesion" : 0.4865788394504173,
      "MetricsIntensity" : 0.03288551454555352,
      "Density" : 2.967497291440954
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.ErrorObject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.util.ErrorObject'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.util.SystemProperties.AgentCopier.CopySystemProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.model.MyView'"
      } ]
    } ]
  }, {
    "solutionId" : "1c92b39e-668b-4f92-8b5c-959050766e4d",
    "objectives" : {
      "NumberOfConcerns" : 0.9959294436906377,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.4874516803177456,
      "MetricsIntensity" : 0.03289752048102363,
      "Density" : 0.9927496827986224
    },
    "euclideanDistance" : 18.06145394969644,
    "generation" : 1,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.47611865258924,
      "LackOfCohesion" : 0.4874516803177456,
      "MetricsIntensity" : 0.03289752048102363,
      "Density" : 2.9685636856368567
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.util.ErrorObject'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.model.MyView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.model.MyView'"
      } ]
    } ]
  }, {
    "solutionId" : "7b479add-844e-44b3-89b6-2c46d7e2c629",
    "objectives" : {
      "NumberOfConcerns" : 0.9966078697421981,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.486565714023841,
      "MetricsIntensity" : 0.032891739080285434,
      "Density" : 0.9934747145187602
    },
    "euclideanDistance" : 18.061507337843747,
    "generation" : 1,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.477124183006535,
      "LackOfCohesion" : 0.486565714023841,
      "MetricsIntensity" : 0.032891739080285434,
      "Density" : 2.9691224268689056
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.util.ErrorObject'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.util.SystemProperties.AgentCopier.CopySystemProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.model.MyView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.model.MyView'"
      } ]
    } ]
  }, {
    "solutionId" : "2851de8d-dd61-4b18-ae14-706f1b1de11c",
    "objectives" : {
      "NumberOfConcerns" : 0.9969470827679783,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.48651977503082366,
      "MetricsIntensity" : 0.032888921552248714,
      "Density" : 0.9932934565887258
    },
    "euclideanDistance" : 18.06151484647394,
    "generation" : 1,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4776269482151836,
      "LackOfCohesion" : 0.48651977503082366,
      "MetricsIntensity" : 0.03288892155224871,
      "Density" : 2.9685807150595886
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.ErrorObject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.util.ErrorObject'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.util.SystemProperties.AgentCopier.CopySystemProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.model.MyView'"
      } ]
    } ]
  }, {
    "solutionId" : "8637f5ad-c787-47c3-89ea-98802be4f0c5",
    "objectives" : {
      "NumberOfConcerns" : 0.9959294436906377,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.48720885992608287,
      "MetricsIntensity" : 0.03289599857655416,
      "Density" : 0.992568424868588
    },
    "euclideanDistance" : 20.05531156962586,
    "generation" : 1,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4761186525892405,
      "LackOfCohesion" : 0.48720885992608287,
      "MetricsIntensity" : 0.03289599857655417,
      "Density" : 2.9664138678223186
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.ProcessTree.Linux'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.ErrorObject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.util.ErrorObject'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='jenkins.util.SystemProperties.AgentCopier.CopySystemProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.diagnostics.ControllerExecutorsAgents'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.node_monitors.ResponseTimeMonitor.Step3'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.closeQuietly(OutputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.MissingDependencyException'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS, org.jenkins.ui.icon.Icon.iconDims, org.jenkins.ui.icon.Icon.ICON_SMALL_STYLE, org.jenkins.ui.icon.Icon.ICON_MEDIUM_STYLE, org.jenkins.ui.icon.Icon.ICON_LARGE_STYLE, org.jenkins.ui.icon.Icon.ICON_XLARGE_STYLE], extractedMethods=[org.jenkins.ui.icon.Icon.toNormalizedIconName(String), org.jenkins.ui.icon.Icon.toNormalizedIconNameClass(String), org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='hudson.util.ClockDifference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='hudson.model.MyView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='hudson.model.MyView'"
      } ]
    } ]
  } ]
}