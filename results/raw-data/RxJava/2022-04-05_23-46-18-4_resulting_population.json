{
  "executionId" : "0536b124-046b-4bf3-9aac-2834b68f590f",
  "computingTime" : 11622,
  "maxEvaluations" : 1000,
  "initialPopulationSize" : 50,
  "finalPopulationSize" : 34,
  "algorithm" : "Baseline",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.388727484020918,
    "meanNumConcerns" : 1.9047887323943664,
    "meanMetricsIntensity" : 0.0626901885889211,
    "meanLackOfCohesion" : 1.304513730459456
  },
  "population" : [ {
    "solutionId" : "94fb1b41-ad5b-4a99-8e68-d492d355559e",
    "objectives" : {
      "NumberOfConcerns" : 1.0035492457852706,
      "NumberOfRefactorings" : 5.0,
      "LackOfCohesion" : 1.3018803701124038,
      "MetricsIntensity" : 0.06254514319926464,
      "Density" : 1.0020576131687242
    },
    "euclideanDistance" : 5.358174590459647,
    "generation" : 0,
    "numberOfRefactorings" : 5,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.9061797752808995,
      "LackOfCohesion" : 1.3018803701124038,
      "MetricsIntensity" : 0.06254514319926463,
      "Density" : 3.3858632676709166,
      "baselineType" : "EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancelled, io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.once, io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.serialVersionUID], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.fastPath()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.upstream, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.boundary, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.other, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.buffer], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext, io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete, io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.composite, io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.serialVersionUID], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.predicate, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.retries, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.source, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.upstream, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.downstream], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposer, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.eager, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.downstream, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.upstream], extractedMethods=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()]"
      } ]
    } ]
  }, {
    "solutionId" : "8e0aad1d-47dd-4d3c-a4c7-4f7f3d420ec9",
    "objectives" : {
      "NumberOfConcerns" : 1.002957704821059,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 1.300139977357631,
      "MetricsIntensity" : 0.06243223201993626,
      "Density" : 1.0010288065843622
    },
    "euclideanDistance" : 9.203382235547437,
    "generation" : 0,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.9007847533632285,
      "LackOfCohesion" : 1.300139977357631,
      "MetricsIntensity" : 0.062432232019936265,
      "Density" : 3.37456647398844,
      "baselineType" : "CONCERN_EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete(), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.observers, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.downstream, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.TERMINATED], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed(), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next(), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf(), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete(), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.sd], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete(), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)]"
      } ]
    } ]
  }, {
    "solutionId" : "bf963f4b-f250-4495-894f-652258738dce",
    "objectives" : {
      "NumberOfConcerns" : 1.0005915409642119,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 1.302195933854679,
      "MetricsIntensity" : 0.06246221625252889,
      "Density" : 1.0037722908093278
    },
    "euclideanDistance" : 22.08412004183668,
    "generation" : 0,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.8994946659180236,
      "LackOfCohesion" : 1.302195933854679,
      "MetricsIntensity" : 0.06246221625252889,
      "Density" : 3.3916570104287365,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancelled, io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.once, io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.serialVersionUID], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.fastPath()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableSamplePublisher.SampleMainEmitLast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper.ReplaySupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.completable.CompletableOnErrorComplete.OnError'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.observers, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.downstream, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.TERMINATED], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed(), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next(), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)', targetType='io.reactivex.rxjava3.internal.functions.Functions.Array4Func'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.observers.BiConsumerSingleObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.ReplayBufferSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.GroupBySubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.GroupBySubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.jdk8.SingleFromCompletionStage.CompletionStageHandler'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay.ReplayBufferSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableDistinctUntilChanged'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.schedulers.ComputationScheduler.EventLoopWorker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.sd], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete(), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)]"
      } ]
    } ]
  }, {
    "solutionId" : "875a490b-22af-4bc8-b1bf-e8b1873507ea",
    "objectives" : {
      "NumberOfConcerns" : 1.0005915409642119,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 1.3008436586986754,
      "MetricsIntensity" : 0.06256591754458744,
      "Density" : 0.9994855967078189
    },
    "euclideanDistance" : 23.080213682032717,
    "generation" : 0,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.9005617977528089,
      "LackOfCohesion" : 1.3008436586986754,
      "MetricsIntensity" : 0.06256591754458744,
      "Density" : 3.379130434782608,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableSamplePublisher.SampleMainEmitLast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper.ReplaySupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.completable.CompletableOnErrorComplete.OnError'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)', targetType='io.reactivex.rxjava3.subjects.ReplaySubject.UnboundedReplayBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete()', targetType='io.reactivex.rxjava3.subjects.SerializedSubject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.DisposeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapIntoIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed(), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next(), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay.ReplayBufferSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableDistinctUntilChanged'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.schedulers.ComputationScheduler.EventLoopWorker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.sd], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.predicate, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.retries, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.source, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.upstream, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.downstream], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed()', targetType='io.reactivex.rxjava3.core.BinaryFlatMapPerf'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      } ]
    } ]
  }, {
    "solutionId" : "7daa444b-8397-4252-9578-8daece25e177",
    "objectives" : {
      "NumberOfConcerns" : 1.002661934338953,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 1.2999865538307296,
      "MetricsIntensity" : 0.0624366984929671,
      "Density" : 0.9993141289437586
    },
    "euclideanDistance" : 23.080247465405094,
    "generation" : 0,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.9034250421111736,
      "LackOfCohesion" : 1.2999865538307296,
      "MetricsIntensity" : 0.062436698492967097,
      "Density" : 3.376593279258401,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.BaseRangeSubscription(Iterator<? extends T>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.clear()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.request(long)', targetType='io.reactivex.rxjava3.internal.util.BackpressureHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int)', targetType='io.reactivex.rxjava3.internal.fuseable.QueueFuseable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.isEmpty()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete(), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.observers, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.downstream, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.TERMINATED], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.upstream, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.boundary, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.other, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.buffer], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay.ReplayBufferSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableDistinctUntilChanged'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.schedulers.ComputationScheduler.EventLoopWorker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe.FlatMapMaybeObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.predicate, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.retries, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.source, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.upstream, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.downstream], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposer, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.eager, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.downstream, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.upstream], extractedMethods=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()]"
      } ]
    } ]
  }, {
    "solutionId" : "d115e551-f7b1-4523-93a3-5803568fa2c4",
    "objectives" : {
      "NumberOfConcerns" : 1.0008873114463177,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 1.2996797762371834,
      "MetricsIntensity" : 0.06237058951088744,
      "Density" : 1.0053155006858712
    },
    "euclideanDistance" : 23.080413607154647,
    "generation" : 0,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.8989898989898988,
      "LackOfCohesion" : 1.2996797762371834,
      "MetricsIntensity" : 0.062370589510887454,
      "Density" : 3.3949044585987256,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete(), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.observers, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.downstream, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.TERMINATED], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed(), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next(), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)', targetType='io.reactivex.rxjava3.internal.functions.Functions.Array4Func'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.observers.BiConsumerSingleObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.ReplayBufferSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.GroupBySubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.GroupBySubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.jdk8.SingleFromCompletionStage.CompletionStageHandler'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf(), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete(), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.sd], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete(), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.UsingObserver(MaybeObserver<? super T>, D, Consumer<? super D>, boolean)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed()', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      } ]
    } ]
  }, {
    "solutionId" : "08940ee1-6306-4126-86e9-920656bdbafb",
    "objectives" : {
      "NumberOfConcerns" : 1.0005915409642119,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 1.2978901054132443,
      "MetricsIntensity" : 0.06245783745454662,
      "Density" : 0.9989711934156379
    },
    "euclideanDistance" : 25.073642467426076,
    "generation" : 0,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.900561797752809,
      "LackOfCohesion" : 1.2978901054132443,
      "MetricsIntensity" : 0.062457837454546625,
      "Density" : 3.377391304347827,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete(), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)', targetType='io.reactivex.rxjava3.subjects.ReplaySubject.UnboundedReplayBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete()', targetType='io.reactivex.rxjava3.subjects.SerializedSubject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.DisposeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapIntoIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.upstream, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.boundary, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.other, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.buffer], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf(), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete(), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe.FlatMapMaybeObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream.FlatMapStreamObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()', targetType='io.reactivex.rxjava3.internal.operators.single.SingleAmb'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.single.SingleTimeout.TimeoutMainObserver.TimeoutFallbackObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.UsingObserver(MaybeObserver<? super T>, D, Consumer<? super D>, boolean)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed()', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      } ]
    } ]
  }, {
    "solutionId" : "8ad892b5-673b-4fe1-b3a4-9e7f7f651870",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 1.299303097652601,
      "MetricsIntensity" : 0.062459034477628496,
      "Density" : 0.9979423868312757
    },
    "euclideanDistance" : 25.073651083916598,
    "generation" : 0,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.899438202247191,
      "LackOfCohesion" : 1.299303097652601,
      "MetricsIntensity" : 0.062459034477628496,
      "Density" : 3.373913043478261,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.PublisherBufferExactSubscriber(Subscriber<? super C>, int, Supplier<C>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.request(long)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.observers, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.downstream, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.TERMINATED], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed(), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next(), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay.ReplayBufferSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableDistinctUntilChanged'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.schedulers.ComputationScheduler.EventLoopWorker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe.FlatMapMaybeObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream.FlatMapStreamObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()', targetType='io.reactivex.rxjava3.internal.operators.single.SingleAmb'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.single.SingleTimeout.TimeoutMainObserver.TimeoutFallbackObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)]"
      } ]
    } ]
  }, {
    "solutionId" : "968f8f40-6800-40a7-bc5e-2e07730b9f4d",
    "objectives" : {
      "NumberOfConcerns" : 1.0014788524105294,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 1.3004386271347363,
      "MetricsIntensity" : 0.06243158676981091,
      "Density" : 0.9993141289437586
    },
    "euclideanDistance" : 26.070992059108583,
    "generation" : 0,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.9011791128579447,
      "LackOfCohesion" : 1.3004386271347363,
      "MetricsIntensity" : 0.0624315867698109,
      "Density" : 3.376593279258401,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancelled, io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.once, io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.serialVersionUID], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.fastPath()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.PublisherBufferExactSubscriber(Subscriber<? super C>, int, Supplier<C>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.request(long)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.observers, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.downstream, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.TERMINATED], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed(), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next(), io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.dispose()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.DisposableAutoReleaseSubscriber(DisposableContainer, Consumer<? super T>, Consumer<? super Throwable>, Action)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe.FlatMapMaybeObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete(), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposer, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.eager, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.downstream, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.upstream], extractedMethods=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()]"
      } ]
    } ]
  }, {
    "solutionId" : "f0d903dc-4f72-4603-83b3-cd08e5acd87f",
    "objectives" : {
      "NumberOfConcerns" : 1.0005915409642119,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 1.3024326939516033,
      "MetricsIntensity" : 0.06254090565813607,
      "Density" : 0.9998285322359396
    },
    "euclideanDistance" : 26.071077515378544,
    "generation" : 0,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.90056179775281,
      "LackOfCohesion" : 1.3024326939516033,
      "MetricsIntensity" : 0.06254090565813605,
      "Density" : 3.3802898550724656,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancelled, io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.once, io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.serialVersionUID], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.fastPath()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableSamplePublisher.SampleMainEmitLast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper.ReplaySupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.completable.CompletableOnErrorComplete.OnError'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)', targetType='io.reactivex.rxjava3.subjects.ReplaySubject.UnboundedReplayBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete()', targetType='io.reactivex.rxjava3.subjects.SerializedSubject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.DisposeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapIntoIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.upstream, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.boundary, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.other, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.buffer], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.dispose()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.DisposableAutoReleaseSubscriber(DisposableContainer, Consumer<? super T>, Consumer<? super Throwable>, Action)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.sd], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete(), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed()', targetType='io.reactivex.rxjava3.core.BinaryFlatMapPerf'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      } ]
    } ]
  }, {
    "solutionId" : "e4300798-36e5-4b76-a17c-27b8073221e7",
    "objectives" : {
      "NumberOfConcerns" : 1.0014788524105294,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 1.2978647636884006,
      "MetricsIntensity" : 0.0625312090915372,
      "Density" : 0.9987997256515775
    },
    "euclideanDistance" : 27.068227202399523,
    "generation" : 0,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.9022471910112364,
      "LackOfCohesion" : 1.2978647636884006,
      "MetricsIntensity" : 0.0625312090915372,
      "Density" : 3.376811594202898,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete(), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)', targetType='io.reactivex.rxjava3.subjects.ReplaySubject.UnboundedReplayBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete()', targetType='io.reactivex.rxjava3.subjects.SerializedSubject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.DisposeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapIntoIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.upstream, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.boundary, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.other, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.buffer], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.BoundedSubscriber(Consumer<? super T>, Consumer<? super Throwable>, Action, Consumer<? super Subscription>, int)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext, io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete, io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.composite, io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.serialVersionUID], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe.FlatMapMaybeObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.disposables.SequentialDisposable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.RetryBiObserver(Observer<? super T>, BiPredicate<? super Integer,? super Throwable>, SequentialDisposable, ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposer, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.eager, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.downstream, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.upstream], extractedMethods=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()]"
      } ]
    } ]
  }, {
    "solutionId" : "e18ef6ee-813f-4f27-9972-e0278f88f25b",
    "objectives" : {
      "NumberOfConcerns" : 1.0005915409642119,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 1.2997721536969584,
      "MetricsIntensity" : 0.06247305722943041,
      "Density" : 0.9982853223593965
    },
    "euclideanDistance" : 28.065834524401602,
    "generation" : 0,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.90056179775281,
      "LackOfCohesion" : 1.2997721536969584,
      "MetricsIntensity" : 0.06247305722943041,
      "Density" : 3.3750724637681166,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.BaseRangeSubscription(Iterator<? extends T>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.clear()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.request(long)', targetType='io.reactivex.rxjava3.internal.util.BackpressureHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int)', targetType='io.reactivex.rxjava3.internal.fuseable.QueueFuseable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.isEmpty()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.PublisherBufferExactSubscriber(Subscriber<? super C>, int, Supplier<C>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.request(long)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)', targetType='io.reactivex.rxjava3.subjects.ReplaySubject.UnboundedReplayBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete()', targetType='io.reactivex.rxjava3.subjects.SerializedSubject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.DisposeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapIntoIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.upstream, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.boundary, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.other, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.buffer], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext, io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete, io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.composite, io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.serialVersionUID], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.sd], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream.FlatMapStreamObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()', targetType='io.reactivex.rxjava3.internal.operators.single.SingleAmb'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.single.SingleTimeout.TimeoutMainObserver.TimeoutFallbackObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)]"
      } ]
    } ]
  }, {
    "solutionId" : "39986411-604c-4ec5-a1d2-04719fc7ad11",
    "objectives" : {
      "NumberOfConcerns" : 1.0008873114463177,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 1.3023371974216407,
      "MetricsIntensity" : 0.0624619706875532,
      "Density" : 1.0037722908093278
    },
    "euclideanDistance" : 29.06388339323534,
    "generation" : 0,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.9011235955056178,
      "LackOfCohesion" : 1.3023371974216407,
      "MetricsIntensity" : 0.0624619706875532,
      "Density" : 3.3936231884057966,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.BaseRangeSubscription(Iterator<? extends T>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.clear()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.request(long)', targetType='io.reactivex.rxjava3.internal.util.BackpressureHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int)', targetType='io.reactivex.rxjava3.internal.fuseable.QueueFuseable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.isEmpty()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableSamplePublisher.SampleMainEmitLast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper.ReplaySupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.completable.CompletableOnErrorComplete.OnError'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.observers, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.downstream, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.TERMINATED], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed.BufferExactBoundedObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastOne.TakeLastOneObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed()', targetType='io.reactivex.rxjava3.processors.UnicastProcessor.UnicastQueueSubscription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.completable.CompletableOnErrorComplete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.ConcatMapDelayErrorObserver.DelayErrorInnerObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.ConcatMapDelayErrorObserver.DelayErrorInnerObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)', targetType='io.reactivex.rxjava3.internal.functions.Functions.Array4Func'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.observers.BiConsumerSingleObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.ReplayBufferSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.GroupBySubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.GroupBySubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.jdk8.SingleFromCompletionStage.CompletionStageHandler'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf(), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete(), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.sd], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.predicate, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.retries, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.source, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.upstream, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.downstream], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)]"
      } ]
    } ]
  }, {
    "solutionId" : "65519752-627c-4dea-9fef-b1d11fcc42f6",
    "objectives" : {
      "NumberOfConcerns" : 0.9976338361431529,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 1.301054271498658,
      "MetricsIntensity" : 0.0625591159517501,
      "Density" : 0.9960562414266118
    },
    "euclideanDistance" : 30.061338246449974,
    "generation" : 0,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.896008993816751,
      "LackOfCohesion" : 1.301054271498658,
      "MetricsIntensity" : 0.0625591159517501,
      "Density" : 3.3714451538015084,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long)', targetType='io.reactivex.rxjava3.internal.operators.single.SingleDoOnTerminate.DoOnTerminate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.SerializedEmitter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll()', targetType='io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableNext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapWithCombinerInner'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete(), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)', targetType='io.reactivex.rxjava3.subjects.ReplaySubject.UnboundedReplayBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete()', targetType='io.reactivex.rxjava3.subjects.SerializedSubject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.DisposeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapIntoIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed.BufferExactBoundedObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastOne.TakeLastOneObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed()', targetType='io.reactivex.rxjava3.processors.UnicastProcessor.UnicastQueueSubscription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.completable.CompletableOnErrorComplete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.ConcatMapDelayErrorObserver.DelayErrorInnerObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.ConcatMapDelayErrorObserver.DelayErrorInnerObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.BoundedSubscriber(Consumer<? super T>, Consumer<? super Throwable>, Action, Consumer<? super Subscription>, int)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext, io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete, io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.composite, io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.serialVersionUID], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.sd], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream.FlatMapStreamObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()', targetType='io.reactivex.rxjava3.internal.operators.single.SingleAmb'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.single.SingleTimeout.TimeoutMainObserver.TimeoutFallbackObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)]"
      } ]
    } ]
  }, {
    "solutionId" : "f5cb7558-3ced-4a64-b16d-79903bf8360b",
    "objectives" : {
      "NumberOfConcerns" : 1.0020703933747412,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 1.299234563776838,
      "MetricsIntensity" : 0.06251427438238222,
      "Density" : 0.9993141289437586
    },
    "euclideanDistance" : 30.061515136263488,
    "generation" : 0,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.903370786516854,
      "LackOfCohesion" : 1.299234563776838,
      "MetricsIntensity" : 0.06251427438238222,
      "Density" : 3.3785507246376802,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancelled, io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.once, io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.serialVersionUID], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.fastPath()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.PublisherBufferExactSubscriber(Subscriber<? super C>, int, Supplier<C>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.request(long)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)', targetType='io.reactivex.rxjava3.subjects.ReplaySubject.UnboundedReplayBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete()', targetType='io.reactivex.rxjava3.subjects.SerializedSubject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.DisposeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapIntoIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.BufferExactBoundaryObserver(Observer<? super U>, Supplier<U>, ObservableSource<B>)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext, io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete, io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.composite, io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.serialVersionUID], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe.FlatMapMaybeObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete(), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposer, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.eager, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.downstream, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.upstream], extractedMethods=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()]"
      } ]
    } ]
  }, {
    "solutionId" : "304991e5-8392-4ec3-b105-c78079f4dc28",
    "objectives" : {
      "NumberOfConcerns" : 0.9991126885536823,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 1.3009991091350124,
      "MetricsIntensity" : 0.06255499537739416,
      "Density" : 0.997085048010974
    },
    "euclideanDistance" : 32.05758750384709,
    "generation" : 0,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.8998875140607425,
      "LackOfCohesion" : 1.3009991091350124,
      "MetricsIntensity" : 0.06255499537739417,
      "Density" : 3.374927452118398,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableSamplePublisher.SampleMainEmitLast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper.ReplaySupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.completable.CompletableOnErrorComplete.OnError'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.observers, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.downstream, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.TERMINATED], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed.BufferExactBoundedObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastOne.TakeLastOneObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed()', targetType='io.reactivex.rxjava3.processors.UnicastProcessor.UnicastQueueSubscription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.completable.CompletableOnErrorComplete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.ConcatMapDelayErrorObserver.DelayErrorInnerObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.ConcatMapDelayErrorObserver.DelayErrorInnerObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay.ReplayBufferSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableDistinctUntilChanged'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.schedulers.ComputationScheduler.EventLoopWorker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe.FlatMapMaybeObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.disposables.SequentialDisposable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.RetryBiObserver(Observer<? super T>, BiPredicate<? super Integer,? super Throwable>, SequentialDisposable, ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed()', targetType='io.reactivex.rxjava3.core.BinaryFlatMapPerf'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      } ]
    } ]
  }, {
    "solutionId" : "35f1f329-9d8f-4f59-a15d-3cc3bb401591",
    "objectives" : {
      "NumberOfConcerns" : 1.0002957704821058,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 1.299818247580869,
      "MetricsIntensity" : 0.06247907354374947,
      "Density" : 0.9979423868312757
    },
    "euclideanDistance" : 33.05586047506938,
    "generation" : 0,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.9010680157391802,
      "LackOfCohesion" : 1.299818247580869,
      "MetricsIntensity" : 0.06247907354374948,
      "Density" : 3.3758700696055683,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableSamplePublisher.SampleMainEmitLast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper.ReplaySupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.completable.CompletableOnErrorComplete.OnError'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)', targetType='io.reactivex.rxjava3.subjects.ReplaySubject.UnboundedReplayBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete()', targetType='io.reactivex.rxjava3.subjects.SerializedSubject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.DisposeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapIntoIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.upstream, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.boundary, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.other, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.buffer], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.BoundedSubscriber(Consumer<? super T>, Consumer<? super Throwable>, Action, Consumer<? super Subscription>, int)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay.ReplayBufferSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableDistinctUntilChanged'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.schedulers.ComputationScheduler.EventLoopWorker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.sd], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.predicate, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.retries, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.source, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.upstream, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.downstream], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.UsingObserver(MaybeObserver<? super T>, D, Consumer<? super D>, boolean)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed()', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      } ]
    } ]
  }, {
    "solutionId" : "90c62976-ba5f-40d5-a484-b45a0afd418d",
    "objectives" : {
      "NumberOfConcerns" : 0.9994084590357882,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 1.2988215738302156,
      "MetricsIntensity" : 0.06255971739098645,
      "Density" : 1.0041152263374487
    },
    "euclideanDistance" : 34.05433769514013,
    "generation" : 0,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.90044994375703,
      "LackOfCohesion" : 1.2988215738302156,
      "MetricsIntensity" : 0.06255971739098647,
      "Density" : 3.3987231572838086,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.PublisherBufferExactSubscriber(Subscriber<? super C>, int, Supplier<C>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.request(long)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)', targetType='io.reactivex.rxjava3.subjects.ReplaySubject.UnboundedReplayBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete()', targetType='io.reactivex.rxjava3.subjects.SerializedSubject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.DisposeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapIntoIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.upstream, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.boundary, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.other, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.buffer], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)', targetType='io.reactivex.rxjava3.internal.functions.Functions.Array4Func'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.observers.BiConsumerSingleObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.ReplayBufferSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.GroupBySubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.GroupBySubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.jdk8.SingleFromCompletionStage.CompletionStageHandler'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay.ReplayBufferSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableDistinctUntilChanged'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.schedulers.ComputationScheduler.EventLoopWorker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe.FlatMapMaybeObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete(), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed()', targetType='io.reactivex.rxjava3.core.BinaryFlatMapPerf'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      } ]
    } ]
  }, {
    "solutionId" : "521fe8d3-855a-4af1-a37f-ed8e1be55e96",
    "objectives" : {
      "NumberOfConcerns" : 1.0017746228926354,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 1.3014084840242897,
      "MetricsIntensity" : 0.06247855987990532,
      "Density" : 0.9993141289437586
    },
    "euclideanDistance" : 34.054364606260286,
    "generation" : 0,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.902808988764045,
      "LackOfCohesion" : 1.3014084840242897,
      "MetricsIntensity" : 0.062478559879905325,
      "Density" : 3.3785507246376816,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.BaseRangeSubscription(Iterator<? extends T>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.clear()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.request(long)', targetType='io.reactivex.rxjava3.internal.util.BackpressureHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int)', targetType='io.reactivex.rxjava3.internal.fuseable.QueueFuseable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.isEmpty()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete(), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.observers, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.downstream, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.TERMINATED], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.BufferExactBoundaryObserver(Observer<? super U>, Supplier<U>, ObservableSource<B>)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.dispose()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.DisposableAutoReleaseSubscriber(DisposableContainer, Consumer<? super T>, Consumer<? super Throwable>, Action)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe.FlatMapMaybeObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.predicate, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.retries, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.source, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.upstream, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.downstream], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)]"
      } ]
    } ]
  }, {
    "solutionId" : "804e05bc-f5a7-445c-bb7a-5d3d1aa9dfa6",
    "objectives" : {
      "NumberOfConcerns" : 1.0011830819284235,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 1.302296293395287,
      "MetricsIntensity" : 0.062460235324391426,
      "Density" : 0.9987997256515775
    },
    "euclideanDistance" : 34.054366025111804,
    "generation" : 0,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.901685393258427,
      "LackOfCohesion" : 1.302296293395287,
      "MetricsIntensity" : 0.062460235324391426,
      "Density" : 3.3768115942028984,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancelled, io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.once, io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.serialVersionUID], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.fastPath()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete(), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.observers, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.downstream, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.TERMINATED], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.BufferExactBoundaryObserver(Observer<? super U>, Supplier<U>, ObservableSource<B>)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.BoundedSubscriber(Consumer<? super T>, Consumer<? super Throwable>, Action, Consumer<? super Subscription>, int)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.dispose()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.DisposableAutoReleaseSubscriber(DisposableContainer, Consumer<? super T>, Consumer<? super Throwable>, Action)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe.FlatMapMaybeObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete(), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposer, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.eager, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.downstream, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.upstream], extractedMethods=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()]"
      } ]
    } ]
  }, {
    "solutionId" : "4067ae64-1f9c-4b15-8377-a4af214a45f6",
    "objectives" : {
      "NumberOfConcerns" : 0.9994084590357882,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 1.30124689981103,
      "MetricsIntensity" : 0.06254880974192,
      "Density" : 0.9972565157750343
    },
    "euclideanDistance" : 35.052681690194774,
    "generation" : 0,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.9004499437570301,
      "LackOfCohesion" : 1.30124689981103,
      "MetricsIntensity" : 0.06254880974192,
      "Density" : 3.375507835171213,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.BaseRangeSubscription(Iterator<? extends T>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.clear()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.request(long)', targetType='io.reactivex.rxjava3.internal.util.BackpressureHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int)', targetType='io.reactivex.rxjava3.internal.fuseable.QueueFuseable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.isEmpty()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete(), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)', targetType='io.reactivex.rxjava3.subjects.ReplaySubject.UnboundedReplayBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete()', targetType='io.reactivex.rxjava3.subjects.SerializedSubject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.DisposeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapIntoIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.BufferExactBoundaryObserver(Observer<? super U>, Supplier<U>, ObservableSource<B>)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf(), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete(), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe.FlatMapMaybeObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream.FlatMapStreamObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()', targetType='io.reactivex.rxjava3.internal.operators.single.SingleAmb'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.single.SingleTimeout.TimeoutMainObserver.TimeoutFallbackObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed()', targetType='io.reactivex.rxjava3.core.BinaryFlatMapPerf'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      } ]
    } ]
  }, {
    "solutionId" : "427f6844-f370-4f9c-bcb8-e81b13c279fd",
    "objectives" : {
      "NumberOfConcerns" : 1.0002957704821058,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 1.2995733034100578,
      "MetricsIntensity" : 0.062468459819196694,
      "Density" : 0.9989711934156379
    },
    "euclideanDistance" : 35.052693593404875,
    "generation" : 0,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.9010680157391795,
      "LackOfCohesion" : 1.2995733034100578,
      "MetricsIntensity" : 0.0624684598191967,
      "Density" : 3.3793503480278426,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.BaseRangeSubscription(Iterator<? extends T>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.clear()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.request(long)', targetType='io.reactivex.rxjava3.internal.util.BackpressureHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int)', targetType='io.reactivex.rxjava3.internal.fuseable.QueueFuseable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.isEmpty()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.PublisherBufferExactSubscriber(Subscriber<? super C>, int, Supplier<C>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.request(long)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.observers, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.downstream, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.TERMINATED], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed.BufferExactBoundedObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastOne.TakeLastOneObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed()', targetType='io.reactivex.rxjava3.processors.UnicastProcessor.UnicastQueueSubscription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.completable.CompletableOnErrorComplete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.ConcatMapDelayErrorObserver.DelayErrorInnerObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.ConcatMapDelayErrorObserver.DelayErrorInnerObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext, io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete, io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.composite, io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.serialVersionUID], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe.FlatMapMaybeObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.disposables.SequentialDisposable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.RetryBiObserver(Observer<? super T>, BiPredicate<? super Integer,? super Throwable>, SequentialDisposable, ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)]"
      } ]
    } ]
  }, {
    "solutionId" : "06ef9523-11fa-4cf8-919b-2f8620591c05",
    "objectives" : {
      "NumberOfConcerns" : 0.9994084590357882,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 1.3009020851868844,
      "MetricsIntensity" : 0.06251327277365651,
      "Density" : 0.9967421124828533
    },
    "euclideanDistance" : 36.05119368691286,
    "generation" : 0,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.8993816750983699,
      "LackOfCohesion" : 1.3009020851868844,
      "MetricsIntensity" : 0.06251327277365651,
      "Density" : 3.371809744779582,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.PublisherBufferExactSubscriber(Subscriber<? super C>, int, Supplier<C>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.request(long)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)', targetType='io.reactivex.rxjava3.subjects.ReplaySubject.UnboundedReplayBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete()', targetType='io.reactivex.rxjava3.subjects.SerializedSubject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.DisposeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapIntoIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.upstream, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.boundary, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.other, io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.buffer], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.BoundedSubscriber(Consumer<? super T>, Consumer<? super Throwable>, Action, Consumer<? super Subscription>, int)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.dispose()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.DisposableAutoReleaseSubscriber(DisposableContainer, Consumer<? super T>, Consumer<? super Throwable>, Action)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.sd], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete(), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed()', targetType='io.reactivex.rxjava3.core.BinaryFlatMapPerf'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      } ]
    } ]
  }, {
    "solutionId" : "41c62d06-1b4b-431a-ad99-c8945fee7315",
    "objectives" : {
      "NumberOfConcerns" : 0.9988169180715765,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 1.3036603377165943,
      "MetricsIntensity" : 0.06243584869948392,
      "Density" : 0.997085048010974
    },
    "euclideanDistance" : 37.049902055742756,
    "generation" : 0,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.8982574480044971,
      "LackOfCohesion" : 1.3036603377165943,
      "MetricsIntensity" : 0.062435848699483903,
      "Density" : 3.3729698375870067,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.BaseRangeSubscription(Iterator<? extends T>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.clear()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.request(long)', targetType='io.reactivex.rxjava3.internal.util.BackpressureHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int)', targetType='io.reactivex.rxjava3.internal.fuseable.QueueFuseable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.isEmpty()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete(), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.observers, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.downstream, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.TERMINATED], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed.BufferExactBoundedObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastOne.TakeLastOneObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed()', targetType='io.reactivex.rxjava3.processors.UnicastProcessor.UnicastQueueSubscription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.completable.CompletableOnErrorComplete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.ConcatMapDelayErrorObserver.DelayErrorInnerObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.ConcatMapDelayErrorObserver.DelayErrorInnerObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.BoundedSubscriber(Consumer<? super T>, Consumer<? super Throwable>, Action, Consumer<? super Subscription>, int)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.dispose()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.DisposableAutoReleaseSubscriber(DisposableContainer, Consumer<? super T>, Consumer<? super Throwable>, Action)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.sd], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream.FlatMapStreamObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()', targetType='io.reactivex.rxjava3.internal.operators.single.SingleAmb'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.single.SingleTimeout.TimeoutMainObserver.TimeoutFallbackObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposer, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.eager, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.downstream, io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.upstream], extractedMethods=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()]"
      } ]
    } ]
  }, {
    "solutionId" : "520aab13-b6c6-47bb-a640-370642a0c9da",
    "objectives" : {
      "NumberOfConcerns" : 0.9988169180715765,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 1.3047600917573683,
      "MetricsIntensity" : 0.062461218248460855,
      "Density" : 0.997085048010974
    },
    "euclideanDistance" : 37.04994081141859,
    "generation" : 0,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.8982574480044971,
      "LackOfCohesion" : 1.3047600917573683,
      "MetricsIntensity" : 0.06246121824846087,
      "Density" : 3.3729698375870067,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancelled, io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.once, io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.serialVersionUID], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.fastPath()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete(), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.observers, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.downstream, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.TERMINATED], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.BufferExactBoundaryObserver(Observer<? super U>, Supplier<U>, ObservableSource<B>)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.BoundedSubscriber(Consumer<? super T>, Consumer<? super Throwable>, Action, Consumer<? super Subscription>, int)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.dispose()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.DisposableAutoReleaseSubscriber(DisposableContainer, Consumer<? super T>, Consumer<? super Throwable>, Action)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.sd], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream.FlatMapStreamObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()', targetType='io.reactivex.rxjava3.internal.operators.single.SingleAmb'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.single.SingleTimeout.TimeoutMainObserver.TimeoutFallbackObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed()', targetType='io.reactivex.rxjava3.core.BinaryFlatMapPerf'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      } ]
    } ]
  }, {
    "solutionId" : "63002ea1-d83f-4c31-8317-7c5ce52c3664",
    "objectives" : {
      "NumberOfConcerns" : 0.9955634427684117,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 1.3017635942244254,
      "MetricsIntensity" : 0.06279176403638019,
      "Density" : 1.0
    },
    "euclideanDistance" : 38.04851741959804,
    "generation" : 0,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.896338028169014,
      "LackOfCohesion" : 1.3017635942244254,
      "MetricsIntensity" : 0.06279176403638019,
      "Density" : 3.3906976744186053,
      "baselineType" : "CONCERN_MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeTimer.TimerDisposable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.DropAsyncEmitter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed.BufferSkipBoundedSubscriber.RemoveFromBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapWithCombinerOuter'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.xmapz.ObservableSwitchMapMaybePerf'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap.SimpleScalarSubscription'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed.WindowSkipObserver.WindowBoundaryRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableOnErrorComplete.OnErrorCompleteSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache)', targetType='io.reactivex.rxjava3.internal.schedulers.SchedulerPoolFactory.SystemPropertyAccessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureDrop'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()', targetType='io.reactivex.rxjava3.internal.observers.BasicQueueDisposable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeTimeoutPublisher.TimeoutFallbackMaybeObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableSkip.SkipSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDelay.DelayObserver.OnError'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed.DebounceEmitter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDebounceTimed.DebounceEmitter'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureDrop.BackpressureDropSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableNext.NextSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper.BufferedReplaySupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.DropAsyncEmitter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.DropAsyncEmitter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundarySelector.WindowBoundaryMainSubscriber.WindowStartSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper.BufferedReplaySupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferExactBoundary.BufferExactBoundarySubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.schedulers.ComputationScheduler.EventLoopWorker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.subscribers.LambdaSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.subscribers.LambdaSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next()', targetType='io.reactivex.rxjava3.internal.jdk8.FlowableCollectWithCollector.CollectorSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableCountSingle'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableMaterialize.MaterializeObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.observers.ForEachWhileObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeConcatIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDelay.DelayObserver.OnNext'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed()', targetType='io.reactivex.rxjava3.core.FlowableFlatMapCompletableAsyncPerf'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableTimeInterval'"
      } ]
    } ]
  }, {
    "solutionId" : "43ad661c-2db8-4b5d-9c84-78047f963813",
    "objectives" : {
      "NumberOfConcerns" : 0.9979296066252588,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 1.30125236977765,
      "MetricsIntensity" : 0.06266192677125629,
      "Density" : 0.9979423868312757
    },
    "euclideanDistance" : 39.04726541966969,
    "generation" : 0,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.8987056837366354,
      "LackOfCohesion" : 1.30125236977765,
      "MetricsIntensity" : 0.06266192677125629,
      "Density" : 3.381754793724579,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long)', targetType='io.reactivex.rxjava3.internal.operators.single.SingleDoOnTerminate.DoOnTerminate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.SerializedEmitter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll()', targetType='io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableNext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapWithCombinerInner'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableSamplePublisher.SampleMainEmitLast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper.ReplaySupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.completable.CompletableOnErrorComplete.OnError'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)', targetType='io.reactivex.rxjava3.subjects.ReplaySubject.UnboundedReplayBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete()', targetType='io.reactivex.rxjava3.subjects.SerializedSubject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.DisposeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapIntoIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.BufferExactBoundaryObserver(Observer<? super U>, Supplier<U>, ObservableSource<B>)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.dispose()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.DisposableAutoReleaseSubscriber(DisposableContainer, Consumer<? super T>, Consumer<? super Throwable>, Action)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe.FlatMapMaybeObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete(), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed()', targetType='io.reactivex.rxjava3.core.BinaryFlatMapPerf'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      } ]
    } ]
  }, {
    "solutionId" : "955f8b69-10ee-445f-a9fb-dfc3b027e251",
    "objectives" : {
      "NumberOfConcerns" : 0.9961549837326235,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 1.2995729178932143,
      "MetricsIntensity" : 0.06257251428921506,
      "Density" : 1.0012002743484225
    },
    "euclideanDistance" : 40.046067620047744,
    "generation" : 0,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.8963963963963957,
      "LackOfCohesion" : 1.2995729178932143,
      "MetricsIntensity" : 0.06257251428921506,
      "Density" : 3.394767441860465,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long)', targetType='io.reactivex.rxjava3.internal.operators.single.SingleDoOnTerminate.DoOnTerminate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.SerializedEmitter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll()', targetType='io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableNext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapWithCombinerInner'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableSamplePublisher.SampleMainEmitLast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableInternalHelper.ReplaySupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.completable.CompletableOnErrorComplete.OnError'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)', targetType='io.reactivex.rxjava3.subjects.ReplaySubject.UnboundedReplayBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete()', targetType='io.reactivex.rxjava3.subjects.SerializedSubject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.DisposeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapIntoIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed.BufferExactBoundedObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastOne.TakeLastOneObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed()', targetType='io.reactivex.rxjava3.processors.UnicastProcessor.UnicastQueueSubscription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.completable.CompletableOnErrorComplete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.ConcatMapDelayErrorObserver.DelayErrorInnerObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.ConcatMapDelayErrorObserver.DelayErrorInnerObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)', targetType='io.reactivex.rxjava3.internal.functions.Functions.Array4Func'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.observers.BiConsumerSingleObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.ReplayBufferSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.GroupBySubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.GroupBySubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.jdk8.SingleFromCompletionStage.CompletionStageHandler'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf(), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete(), io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe.FlatMapMaybeObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFlatMapStream.FlatMapStreamObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()', targetType='io.reactivex.rxjava3.internal.operators.single.SingleAmb'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.single.SingleTimeout.TimeoutMainObserver.TimeoutFallbackObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.UsingObserver(MaybeObserver<? super T>, D, Consumer<? super D>, boolean)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed()', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      } ]
    } ]
  }, {
    "solutionId" : "626cbd55-3f62-4bae-a235-364a2285d875",
    "objectives" : {
      "NumberOfConcerns" : 0.9976338361431529,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 1.2997832346054152,
      "MetricsIntensity" : 0.06256001213165499,
      "Density" : 1.0027434842249656
    },
    "euclideanDistance" : 40.04614985211752,
    "generation" : 0,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.8970753655793025,
      "LackOfCohesion" : 1.2997832346054152,
      "MetricsIntensity" : 0.06256001213165498,
      "Density" : 3.3960511033681757,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long)', targetType='io.reactivex.rxjava3.internal.operators.single.SingleDoOnTerminate.DoOnTerminate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate.SerializedEmitter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll()', targetType='io.reactivex.rxjava3.internal.operators.flowable.BlockingFlowableNext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapWithCombinerInner'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.PublisherBufferExactSubscriber(Subscriber<? super C>, int, Supplier<C>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.request(long)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)', targetType='io.reactivex.rxjava3.subjects.ReplaySubject.UnboundedReplayBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete()', targetType='io.reactivex.rxjava3.subjects.SerializedSubject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.DisposeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapIntoIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.BufferExactBoundaryObserver(Observer<? super U>, Supplier<U>, ObservableSource<B>)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)', targetType='io.reactivex.rxjava3.internal.functions.Functions.Array4Func'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.observers.BiConsumerSingleObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.ReplayBufferSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.GroupBySubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy.GroupBySubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.jdk8.SingleFromCompletionStage.CompletionStageHandler'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay.ReplayBufferSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableDistinctUntilChanged'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.schedulers.ComputationScheduler.EventLoopWorker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.sd], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete(), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete(), io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)]"
      } ]
    } ]
  }, {
    "solutionId" : "8bc8f0ee-12e9-4d22-87ae-fb7a10a46f4d",
    "objectives" : {
      "NumberOfConcerns" : 0.9994084590357882,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 1.3026396233168274,
      "MetricsIntensity" : 0.06246652214951128,
      "Density" : 0.9972565157750343
    },
    "euclideanDistance" : 41.04502539749333,
    "generation" : 0,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.89938167509837,
      "LackOfCohesion" : 1.3026396233168274,
      "MetricsIntensity" : 0.06246652214951128,
      "Density" : 3.3735498839907194,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll(), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.PublisherBufferExactSubscriber(Subscriber<? super C>, int, Supplier<C>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.request(long)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.observers, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.downstream, io.reactivex.rxjava3.internal.operators.completable.CompletableCache.TERMINATED], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.BufferExactBoundaryObserver(Observer<? super U>, Supplier<U>, ObservableSource<B>)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.BoundedSubscriber(Consumer<? super T>, Consumer<? super Throwable>, Action, Consumer<? super Subscription>, int)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.dispose()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.DisposableAutoReleaseSubscriber(DisposableContainer, Consumer<? super T>, Consumer<? super Throwable>, Action)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.sd], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete(), io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed()', targetType='io.reactivex.rxjava3.core.BinaryFlatMapPerf'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      } ]
    } ]
  }, {
    "solutionId" : "6230463d-03ed-487a-9428-4440045663f8",
    "objectives" : {
      "NumberOfConcerns" : 0.9991126885536823,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 1.299980693682992,
      "MetricsIntensity" : 0.06244358953747976,
      "Density" : 0.9955418381344308
    },
    "euclideanDistance" : 42.04382450160461,
    "generation" : 0,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.8998875140607425,
      "LackOfCohesion" : 1.299980693682992,
      "MetricsIntensity" : 0.06244358953747977,
      "Density" : 3.3697040046430655,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.BaseRangeSubscription(Iterator<? extends T>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.clear()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.request(long)', targetType='io.reactivex.rxjava3.internal.util.BackpressureHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int)', targetType='io.reactivex.rxjava3.internal.fuseable.QueueFuseable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.isEmpty()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.PublisherBufferExactSubscriber(Subscriber<? super C>, int, Supplier<C>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.request(long)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)', targetType='io.reactivex.rxjava3.subjects.ReplaySubject.UnboundedReplayBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete()', targetType='io.reactivex.rxjava3.subjects.SerializedSubject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.DisposeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapIntoIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed.BufferExactBoundedObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastOne.TakeLastOneObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed()', targetType='io.reactivex.rxjava3.processors.UnicastProcessor.UnicastQueueSubscription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.completable.CompletableOnErrorComplete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.ConcatMapDelayErrorObserver.DelayErrorInnerObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.ConcatMapDelayErrorObserver.DelayErrorInnerObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay.ReplayBufferSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableDistinctUntilChanged'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.schedulers.ComputationScheduler.EventLoopWorker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.sd], extractedMethods=[io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete(), io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.predicate, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.retries, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.source, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.upstream, io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.downstream], extractedMethods=[io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.UsingObserver(MaybeObserver<? super T>, D, Consumer<? super D>, boolean)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed()', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      } ]
    } ]
  }, {
    "solutionId" : "bb410583-dee7-4b21-ac54-e82639d58c3a",
    "objectives" : {
      "NumberOfConcerns" : 0.9988169180715765,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 1.3004704301411167,
      "MetricsIntensity" : 0.06258005825288412,
      "Density" : 0.9967421124828533
    },
    "euclideanDistance" : 42.043861260331276,
    "generation" : 0,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.9003939223410242,
      "LackOfCohesion" : 1.3004704301411167,
      "MetricsIntensity" : 0.06258005825288412,
      "Density" : 3.3757259001161435,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.BaseRangeSubscription(Iterator<? extends T>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.clear()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.request(long)', targetType='io.reactivex.rxjava3.internal.util.BackpressureHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int)', targetType='io.reactivex.rxjava3.internal.fuseable.QueueFuseable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.isEmpty()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete(), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)', targetType='io.reactivex.rxjava3.subjects.ReplaySubject.UnboundedReplayBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete()', targetType='io.reactivex.rxjava3.subjects.SerializedSubject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.DisposeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapIntoIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.BufferExactBoundaryObserver(Observer<? super U>, Supplier<U>, ObservableSource<B>)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.dispose(), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T), io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.request(long)]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay.ReplayBufferSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableDistinctUntilChanged'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.schedulers.ComputationScheduler.EventLoopWorker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.disposables.ListCompositeDisposable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe.FlatMapMaybeObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.disposables.SequentialDisposable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.RetryBiObserver(Observer<? super T>, BiPredicate<? super Integer,? super Throwable>, SequentialDisposable, ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed()', targetType='io.reactivex.rxjava3.core.BinaryFlatMapPerf'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      } ]
    } ]
  }, {
    "solutionId" : "c92ef2e3-f6ad-402c-8036-5c0e08e9e792",
    "objectives" : {
      "NumberOfConcerns" : 0.9979296066252588,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 1.301911679010944,
      "MetricsIntensity" : 0.06257662355845241,
      "Density" : 0.9963991769547325
    },
    "euclideanDistance" : 42.043876660857244,
    "generation" : 0,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.8987056837366347,
      "LackOfCohesion" : 1.301911679010944,
      "MetricsIntensity" : 0.06257662355845241,
      "Density" : 3.3745644599303137,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancelled, io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.once, io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.serialVersionUID], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.slowPath(long), io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.fastPath()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete(), io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()]"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.add(InnerCompletableCache)', targetType='io.reactivex.rxjava3.subjects.ReplaySubject.UnboundedReplayBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onComplete()', targetType='io.reactivex.rxjava3.subjects.SerializedSubject'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.remove(InnerCompletableCache)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableReplay.DisposeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableCache.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableInternalHelper.FlatMapIntoIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed.BufferExactBoundedObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableTakeLastOne.TakeLastOneObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed()', targetType='io.reactivex.rxjava3.processors.UnicastProcessor.UnicastQueueSubscription'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.completable.CompletableOnErrorComplete'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.ConcatMapDelayErrorObserver.DelayErrorInnerObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler.ConcatMapDelayErrorObserver.DelayErrorInnerObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.BoundedSubscriber(Consumer<? super T>, Consumer<? super Throwable>, Action, Consumer<? super Subscription>, int)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.dispose()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.DisposableAutoReleaseSubscriber(DisposableContainer, Consumer<? super T>, Consumer<? super Throwable>, Action)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableDelaySubscriptionOther'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.jdk8.ObservableFirstStageObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.completable.CompletableConcatIterable.ConcatInnerObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe.FlatMapMaybeObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.disposables.SequentialDisposable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.RetryBiObserver(Observer<? super T>, BiPredicate<? super Integer,? super Throwable>, SequentialDisposable, ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed()', targetType='io.reactivex.rxjava3.core.BinaryFlatMapPerf'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange'"
      } ]
    } ]
  }, {
    "solutionId" : "3c173f20-34e0-4f48-baf3-d6531143bd8d",
    "objectives" : {
      "NumberOfConcerns" : 0.997338065661047,
      "NumberOfRefactorings" : 54.0,
      "LackOfCohesion" : 1.3013406925849669,
      "MetricsIntensity" : 0.06246503718255596,
      "Density" : 0.9960562414266118
    },
    "euclideanDistance" : 54.0341022015944,
    "generation" : 0,
    "numberOfRefactorings" : 54,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.8997183098591552,
      "LackOfCohesion" : 1.3013406925849669,
      "MetricsIntensity" : 0.06246503718255596,
      "Density" : 3.3773255813953496,
      "baselineType" : "MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.poll()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.BaseRangeSubscription(Iterator<? extends T>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.clear()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.request(long)', targetType='io.reactivex.rxjava3.internal.util.BackpressureHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.requestFusion(int)', targetType='io.reactivex.rxjava3.internal.fuseable.QueueFuseable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable.BaseRangeSubscription.isEmpty()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.PublisherBufferExactSubscriber(Subscriber<? super C>, int, Supplier<C>)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.request(long)', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer.PublisherBufferExactSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>, Observer<? super T>)', targetType='io.reactivex.rxjava3.internal.observers.BlockingObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBlockingSubscribe.<T>subscribe(ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.util.ExceptionHelper'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.BufferExactBoundaryObserver(Observer<? super U>, Supplier<U>, ObservableSource<B>)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.accept(Observer<? super U>, U)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.isDisposed()', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.observers.QueueDrainObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver.next()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableBufferExactBoundary.BufferExactBoundaryObserver'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.BoundedSubscriber(Consumer<? super T>, Consumer<? super Throwable>, Action, Consumer<? super Subscription>, int)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.cancel()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.BoundedSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onError(Throwable)', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.dispose()', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onNext(T)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onSubscribe(Subscription)', targetType='io.reactivex.rxjava3.internal.subscriptions.SubscriptionHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.hasCustomOnError()', targetType='io.reactivex.rxjava3.internal.functions.Functions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.removeSelf()', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.onComplete()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber.DisposableAutoReleaseSubscriber(DisposableContainer, Consumer<? super T>, Consumer<? super Throwable>, Action)', targetType='io.reactivex.rxjava3.internal.subscribers.DisposableAutoReleaseSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onNext(T)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.disposables.SequentialDisposable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.subscribeNext()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate.RetryBiObserver.RetryBiObserver(Observer<? super T>, BiPredicate<? super Integer,? super Throwable>, SequentialDisposable, ObservableSource<? extends T>)', targetType='io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate'"
      } ]
    }, {
      "refactoredTypeName" : "io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSubscribe(Disposable)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.UsingObserver(MaybeObserver<? super T>, D, Consumer<? super D>, boolean)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onSuccess(T)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onError(Throwable)', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.onComplete()', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.isDisposed()', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.dispose()', targetType='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing.UsingObserver.disposeResource()', targetType='io.reactivex.rxjava3.plugins.RxJavaPlugins'"
      } ]
    } ]
  } ]
}