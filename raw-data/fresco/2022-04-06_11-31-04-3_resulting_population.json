{
  "executionId" : "e0ac20f8-dd83-4b09-bdc2-577dd6eeadd9",
  "computingTime" : 1324427,
  "maxEvaluations" : 100,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 27,
  "algorithm" : "MOSA",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.4455852156057496,
    "meanNumConcerns" : 1.8045186640471513,
    "meanMetricsIntensity" : 0.0572971415616704,
    "meanLackOfCohesion" : 0.5657915280402931
  },
  "population" : [ {
    "solutionId" : "9e664327-59b2-4997-9ed3-1ff55c61bd1d",
    "objectives" : {
      "NumberOfConcerns" : 0.9961894393032118,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.5704972153210346,
      "MetricsIntensity" : 0.06094576812553581,
      "Density" : 0.9943384982121574
    },
    "euclideanDistance" : 39.02960778572272,
    "generation" : 1,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7923604309500487,
      "LackOfCohesion" : 0.5704972153210346,
      "MetricsIntensity" : 0.06094576812553581,
      "Density" : 3.4155578300921183
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu)', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.maybeStartAnimation(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "9ae6841c-ecb0-475c-a76b-20ac482452df",
    "objectives" : {
      "NumberOfConcerns" : 0.9961894393032118,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.5707179463823098,
      "MetricsIntensity" : 0.06048212789615943,
      "Density" : 0.9943384982121574
    },
    "euclideanDistance" : 39.02961029154818,
    "generation" : 1,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7923604309500487,
      "LackOfCohesion" : 0.5707179463823098,
      "MetricsIntensity" : 0.060482127896159435,
      "Density" : 3.4155578300921183
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu)', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.maybeStartAnimation(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "beb48b5a-7ec6-4828-9cc3-1357d5fc8b7a",
    "objectives" : {
      "NumberOfConcerns" : 0.9967338051170387,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.5707326617863948,
      "MetricsIntensity" : 0.0604706552687641,
      "Density" : 0.9949344457687723
    },
    "euclideanDistance" : 39.029639574316064,
    "generation" : 1,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7933398628795298,
      "LackOfCohesion" : 0.5707326617863948,
      "MetricsIntensity" : 0.0604706552687641,
      "Density" : 3.417604912998977
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu)', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.maybeStartAnimation(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "aee538a2-73fc-4b3f-a422-bb438172ce17",
    "objectives" : {
      "NumberOfConcerns" : 0.9967338051170387,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.5708062388068198,
      "MetricsIntensity" : 0.06046297766663281,
      "Density" : 0.9949344457687723
    },
    "euclideanDistance" : 39.02964063841185,
    "generation" : 1,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7933398628795298,
      "LackOfCohesion" : 0.5708062388068198,
      "MetricsIntensity" : 0.060462977666632806,
      "Density" : 3.4176049129989767
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu)', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.maybeStartAnimation(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "0e76ac6a-36d3-4bbb-baa6-12893a52e084",
    "objectives" : {
      "NumberOfConcerns" : 0.9972781709308656,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.5706824427375936,
      "MetricsIntensity" : 0.0604706552687641,
      "Density" : 0.9955303933253874
    },
    "euclideanDistance" : 39.02966794202646,
    "generation" : 1,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7943192948090108,
      "LackOfCohesion" : 0.5706824427375936,
      "MetricsIntensity" : 0.06047065526876409,
      "Density" : 3.419651995905834
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu)', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.maybeStartAnimation(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "924a4214-cd67-4d6e-bdf5-6e4261e4274f",
    "objectives" : {
      "NumberOfConcerns" : 0.9961894393032118,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.5704384768277633,
      "MetricsIntensity" : 0.060953794709582176,
      "Density" : 0.9943384982121574
    },
    "euclideanDistance" : 40.028867306844205,
    "generation" : 1,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7923604309500487,
      "LackOfCohesion" : 0.5704384768277633,
      "MetricsIntensity" : 0.060953794709582176,
      "Density" : 3.4155578300921183
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu)', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.maybeStartAnimation(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "7259630a-a6b2-4168-876c-45d8d42a59a9",
    "objectives" : {
      "NumberOfConcerns" : 0.9967338051170387,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.5705848231251408,
      "MetricsIntensity" : 0.06046513699223223,
      "Density" : 0.9943384982121574
    },
    "euclideanDistance" : 40.02888220273534,
    "generation" : 1,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7933398628795298,
      "LackOfCohesion" : 0.5705848231251408,
      "MetricsIntensity" : 0.06046513699223223,
      "Density" : 3.419057377049181
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu)', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.maybeStartAnimation(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle(), com.facebook.imagepipeline.common.RotationOptions.equals(Object)]"
      } ]
    } ]
  }, {
    "solutionId" : "6a5060a5-95f9-4db3-b1a9-3fcea9e0d01c",
    "objectives" : {
      "NumberOfConcerns" : 0.9983669025585193,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.568305957876378,
      "MetricsIntensity" : 0.06093436368736994,
      "Density" : 0.9952324195470799
    },
    "euclideanDistance" : 40.02891340892827,
    "generation" : 1,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7962781586679728,
      "LackOfCohesion" : 0.568305957876378,
      "MetricsIntensity" : 0.06093436368736994,
      "Density" : 3.418628454452405
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu)', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.maybeStartAnimation(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "e7e73d23-c56a-47ee-b0c7-2551629b085e",
    "objectives" : {
      "NumberOfConcerns" : 0.9961894393032118,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.5710464037319624,
      "MetricsIntensity" : 0.060948760492395185,
      "Density" : 0.9940405244338498
    },
    "euclideanDistance" : 41.02816494446,
    "generation" : 1,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7923604309500487,
      "LackOfCohesion" : 0.5710464037319624,
      "MetricsIntensity" : 0.06094876049239519,
      "Density" : 3.41453428863869
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu)', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.maybeStartAnimation(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "51dbd177-9108-4255-8c6e-0681cdc07b30",
    "objectives" : {
      "NumberOfConcerns" : 0.9961894393032118,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.5707689895112268,
      "MetricsIntensity" : 0.0604706552687641,
      "Density" : 0.9943384982121574
    },
    "euclideanDistance" : 41.028167597244,
    "generation" : 1,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7923604309500494,
      "LackOfCohesion" : 0.5707689895112268,
      "MetricsIntensity" : 0.0604706552687641,
      "Density" : 3.4155578300921183
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu)', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.maybeStartAnimation(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "198dbba3-5717-49da-8547-5180303ddcf7",
    "objectives" : {
      "NumberOfConcerns" : 0.9972781709308656,
      "NumberOfRefactorings" : 43.0,
      "LackOfCohesion" : 0.5719635369634998,
      "MetricsIntensity" : 0.06047842042249864,
      "Density" : 0.9934445768772348
    },
    "euclideanDistance" : 43.02687875972988,
    "generation" : 1,
    "numberOfRefactorings" : 43,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7943192948090108,
      "LackOfCohesion" : 0.5719635369634998,
      "MetricsIntensity" : 0.06047842042249865,
      "Density" : 3.4124872057318316
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_APP1', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.NativeMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "1b2dd065-50f4-4f86-9c32-25c9cb381008",
    "objectives" : {
      "NumberOfConcerns" : 0.9967338051170387,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.5722213306454556,
      "MetricsIntensity" : 0.06047609693764312,
      "Density" : 0.9928486293206198
    },
    "euclideanDistance" : 44.02624582324223,
    "generation" : 1,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7933398628795296,
      "LackOfCohesion" : 0.5722213306454556,
      "MetricsIntensity" : 0.060476096937643116,
      "Density" : 3.4104401228249754
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOFn', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_APP1', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.NativeMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "ab238933-7c76-4390-9aa8-900c873a5424",
    "objectives" : {
      "NumberOfConcerns" : 0.9972781709308656,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.5715885682698006,
      "MetricsIntensity" : 0.060478420422498645,
      "Density" : 0.9934445768772348
    },
    "euclideanDistance" : 44.02626337776414,
    "generation" : 1,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7943192948090108,
      "LackOfCohesion" : 0.5715885682698006,
      "MetricsIntensity" : 0.060478420422498645,
      "Density" : 3.412487205731832
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOFn', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_APP1', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOS', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.NativeMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "132fb0ca-829b-4742-9bcb-097f74c62889",
    "objectives" : {
      "NumberOfConcerns" : 0.9972781709308656,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.5718092993310756,
      "MetricsIntensity" : 0.06047609693764312,
      "Density" : 0.9934445768772348
    },
    "euclideanDistance" : 44.02626624085495,
    "generation" : 1,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7943192948090108,
      "LackOfCohesion" : 0.5718092993310756,
      "MetricsIntensity" : 0.060476096937643116,
      "Density" : 3.412487205731832
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOFn', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_APP1', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.NativeMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "7e54ec7d-c308-4f53-9059-3b89e69ceafc",
    "objectives" : {
      "NumberOfConcerns" : 0.9961894393032118,
      "NumberOfRefactorings" : 45.0,
      "LackOfCohesion" : 0.5718267555775365,
      "MetricsIntensity" : 0.060497105955054184,
      "Density" : 0.9925506555423123
    },
    "euclideanDistance" : 45.0256393174047,
    "generation" : 1,
    "numberOfRefactorings" : 45,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7923604309500487,
      "LackOfCohesion" : 0.5718267555775365,
      "MetricsIntensity" : 0.06049710595505418,
      "Density" : 3.412909836065574
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameCount()', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOFn', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.NativeMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "cc856dd3-e2b1-44cd-a5ee-f9aff42400be",
    "objectives" : {
      "NumberOfConcerns" : 0.9967338051170387,
      "NumberOfRefactorings" : 45.0,
      "LackOfCohesion" : 0.5712466224117855,
      "MetricsIntensity" : 0.06049207173786719,
      "Density" : 0.9925506555423123
    },
    "euclideanDistance" : 45.025643994022346,
    "generation" : 1,
    "numberOfRefactorings" : 45,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7933398628795298,
      "LackOfCohesion" : 0.5712466224117855,
      "MetricsIntensity" : 0.06049207173786719,
      "Density" : 3.409416581371546
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameCount()', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOFn', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.NativeMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "9c85e96b-6d1d-49e0-b848-5a4a181eda09",
    "objectives" : {
      "NumberOfConcerns" : 0.9961894393032118,
      "NumberOfRefactorings" : 45.0,
      "LackOfCohesion" : 0.5708239270198108,
      "MetricsIntensity" : 0.060486717620591414,
      "Density" : 0.9937425506555423
    },
    "euclideanDistance" : 45.02565286872173,
    "generation" : 1,
    "numberOfRefactorings" : 45,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7923604309500498,
      "LackOfCohesion" : 0.5708239270198108,
      "MetricsIntensity" : 0.060486717620591414,
      "Density" : 3.4135107471852604
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_APP1', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu)', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.maybeStartAnimation(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.NativeMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "65470f51-b023-4f5b-8f98-2f83cd6c7a3e",
    "objectives" : {
      "NumberOfConcerns" : 0.9972781709308656,
      "NumberOfRefactorings" : 45.0,
      "LackOfCohesion" : 0.5722100199819234,
      "MetricsIntensity" : 0.060476096937643116,
      "Density" : 0.9934445768772348
    },
    "euclideanDistance" : 45.02568797411996,
    "generation" : 1,
    "numberOfRefactorings" : 45,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7943192948090108,
      "LackOfCohesion" : 0.5722100199819234,
      "MetricsIntensity" : 0.060476096937643116,
      "Density" : 3.412487205731832
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOFn', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_APP1', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOS', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.NativeMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "e77c8ae7-4940-4576-9527-3664924c02f3",
    "objectives" : {
      "NumberOfConcerns" : 0.9972781709308656,
      "NumberOfRefactorings" : 45.0,
      "LackOfCohesion" : 0.5722100199819234,
      "MetricsIntensity" : 0.060476096937643116,
      "Density" : 0.9934445768772348
    },
    "euclideanDistance" : 45.02568797411996,
    "generation" : 1,
    "numberOfRefactorings" : 45,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7943192948090108,
      "LackOfCohesion" : 0.5722100199819234,
      "MetricsIntensity" : 0.06047609693764312,
      "Density" : 3.412487205731832
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOFn', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_APP1', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.NativeMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "accb7b6d-4354-4cbe-b63a-aebcd0482f36",
    "objectives" : {
      "NumberOfConcerns" : 0.9967338051170387,
      "NumberOfRefactorings" : 46.0,
      "LackOfCohesion" : 0.5715588342351222,
      "MetricsIntensity" : 0.060479127570063365,
      "Density" : 0.9925506555423123
    },
    "euclideanDistance" : 46.02509068223488,
    "generation" : 1,
    "numberOfRefactorings" : 46,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7933398628795298,
      "LackOfCohesion" : 0.5715588342351222,
      "MetricsIntensity" : 0.06047912757006337,
      "Density" : 3.409416581371546
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameCount()', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOFn', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.NativeMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "ab130aa6-8a6d-4f79-bcd2-0a10e6058015",
    "objectives" : {
      "NumberOfConcerns" : 0.9967338051170387,
      "NumberOfRefactorings" : 46.0,
      "LackOfCohesion" : 0.571558834235122,
      "MetricsIntensity" : 0.060479127570063386,
      "Density" : 0.9925506555423123
    },
    "euclideanDistance" : 46.02509068223488,
    "generation" : 1,
    "numberOfRefactorings" : 46,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7933398628795298,
      "LackOfCohesion" : 0.571558834235122,
      "MetricsIntensity" : 0.060479127570063386,
      "Density" : 3.409416581371546
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameCount()', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.NativeMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "79629104-1316-4f57-982a-1515b282f8f9",
    "objectives" : {
      "NumberOfConcerns" : 0.9967338051170387,
      "NumberOfRefactorings" : 46.0,
      "LackOfCohesion" : 0.5715486895247304,
      "MetricsIntensity" : 0.06048377453977442,
      "Density" : 0.9931466030989273
    },
    "euclideanDistance" : 46.02510341808033,
    "generation" : 1,
    "numberOfRefactorings" : 46,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.79333986287953,
      "LackOfCohesion" : 0.5715486895247304,
      "MetricsIntensity" : 0.060483774539774424,
      "Density" : 3.4114636642784033
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameCount()', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOFn', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.NativeMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "ee660705-0c8e-4183-8d06-de5b478146e8",
    "objectives" : {
      "NumberOfConcerns" : 0.9956450734893849,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.5703434428457689,
      "MetricsIntensity" : 0.060485013731697394,
      "Density" : 0.9919547079856973
    },
    "euclideanDistance" : 47.02450673143464,
    "generation" : 1,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7913809990205682,
      "LackOfCohesion" : 0.5703434428457689,
      "MetricsIntensity" : 0.06048501373169738,
      "Density" : 3.4073694984646874
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameCount()', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOFn', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu)', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.NativeMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "e965507c-85eb-4801-abf0-d1769dfc1f96",
    "objectives" : {
      "NumberOfConcerns" : 0.9956450734893849,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.5705167383691697,
      "MetricsIntensity" : 0.06048416178725034,
      "Density" : 0.9925506555423123
    },
    "euclideanDistance" : 47.024521407439835,
    "generation" : 1,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7913809990205682,
      "LackOfCohesion" : 0.5705167383691697,
      "MetricsIntensity" : 0.06048416178725034,
      "Density" : 3.412909836065574
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameCount()', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOFn', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu)', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.NativeMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "38d6b881-a3ac-4591-a796-d9caf8f5cc61",
    "objectives" : {
      "NumberOfConcerns" : 0.9961894393032118,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.569937687218425,
      "MetricsIntensity" : 0.060479127570063365,
      "Density" : 0.9925506555423123
    },
    "euclideanDistance" : 47.02452590824261,
    "generation" : 1,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7923604309500496,
      "LackOfCohesion" : 0.569937687218425,
      "MetricsIntensity" : 0.060479127570063365,
      "Density" : 3.409416581371546
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameCount()', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOFn', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu)', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.NativeMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "058c6b7f-1db1-4c15-9981-c1249b957859",
    "objectives" : {
      "NumberOfConcerns" : 0.9961894393032118,
      "NumberOfRefactorings" : 48.0,
      "LackOfCohesion" : 0.5704574872274275,
      "MetricsIntensity" : 0.06047144996793207,
      "Density" : 0.9925506555423123
    },
    "euclideanDistance" : 48.02402137205704,
    "generation" : 1,
    "numberOfRefactorings" : 48,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7923604309500487,
      "LackOfCohesion" : 0.5704574872274275,
      "MetricsIntensity" : 0.06047144996793207,
      "Density" : 3.409416581371546
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameCount()', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOFn', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_FIRST_BYTE', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu)', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.NativeMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  }, {
    "solutionId" : "5b9e9289-9217-4fa6-8dd8-a90a00d232ae",
    "objectives" : {
      "NumberOfConcerns" : 0.9961894393032118,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.5716567926603547,
      "MetricsIntensity" : 0.06048501373169737,
      "Density" : 0.9919547079856973
    },
    "euclideanDistance" : 50.023062855718415,
    "generation" : 1,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.792360430950049,
      "LackOfCohesion" : 0.5716567926603547,
      "MetricsIntensity" : 0.06048501373169737,
      "Density" : 3.4073694984646874
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.common.streams.TailAppendingInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameCount()', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_TEM', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOFn', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_EOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.APP1_EXIF_MAGIC', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOS', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_FIRST_BYTE', targetTypeName='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)', targetType='com.facebook.datasource.BaseDataSubscriber'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.imagepipeline.decoder.DecodeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.cache.common.NoOpCacheErrorLogger'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.NativeMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.mDeferUntilRendered], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.hashCode(), com.facebook.imagepipeline.common.RotationOptions.toString(), com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered(), com.facebook.imagepipeline.common.RotationOptions.getForcedAngle()]"
      } ]
    } ]
  } ]
}