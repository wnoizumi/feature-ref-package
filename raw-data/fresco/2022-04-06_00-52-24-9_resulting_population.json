{
  "executionId" : "a8db1f7a-a505-4da3-a6b7-732e568807bc",
  "computingTime" : 4971,
  "maxEvaluations" : 1000,
  "initialPopulationSize" : 50,
  "finalPopulationSize" : 34,
  "algorithm" : "Baseline",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.384851586489252,
    "meanNumConcerns" : 1.773084479371316,
    "meanMetricsIntensity" : 0.0572971415616704,
    "meanLackOfCohesion" : 0.5657915280402931
  },
  "population" : [ {
    "solutionId" : "3d6a2faf-2ffa-4515-80d0-06687bb006b3",
    "objectives" : {
      "NumberOfConcerns" : 1.0049861495844876,
      "NumberOfRefactorings" : 5.0,
      "LackOfCohesion" : 0.5694413132585019,
      "MetricsIntensity" : 0.056890994839598266,
      "Density" : 1.001814333232537
    },
    "euclideanDistance" : 5.228874555166361,
    "generation" : 0,
    "numberOfRefactorings" : 5,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7732160312805472,
      "LackOfCohesion" : 0.5694413132585019,
      "MetricsIntensity" : 0.056890994839598266,
      "Density" : 3.373727087576375,
      "baselineType" : "EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "83995b1b-117d-4209-b784-46ba35d54ded",
    "objectives" : {
      "NumberOfConcerns" : 1.0077562326869807,
      "NumberOfRefactorings" : 8.0,
      "LackOfCohesion" : 0.5662823487378725,
      "MetricsIntensity" : 0.05659017093761245,
      "Density" : 1.001814333232537
    },
    "euclideanDistance" : 8.145126317542806,
    "generation" : 0,
    "numberOfRefactorings" : 8,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.772904483430799,
      "LackOfCohesion" : 0.5662823487378725,
      "MetricsIntensity" : 0.05659017093761245,
      "Density" : 3.366869918699187,
      "baselineType" : "CONCERN_EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "b5537a57-0f10-4231-b56f-a15e864d9cd0",
    "objectives" : {
      "NumberOfConcerns" : 1.007202216066482,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.5720130299363047,
      "MetricsIntensity" : 0.05665693233483986,
      "Density" : 1.0
    },
    "euclideanDistance" : 12.097308180684154,
    "generation" : 0,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.773658536585366,
      "LackOfCohesion" : 0.5720130299363047,
      "MetricsIntensity" : 0.05665693233483986,
      "Density" : 3.364191251271618,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.nativecode.NativeImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.samples.scrollperf.util.TimeWaster'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "d1aa0c92-f1fe-4a1c-8f77-8381df974215",
    "objectives" : {
      "NumberOfConcerns" : 1.005540166204986,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.5646897565437748,
      "MetricsIntensity" : 0.05673737678738061,
      "Density" : 1.0009071666162686
    },
    "euclideanDistance" : 14.083146659504242,
    "generation" : 0,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7724609375,
      "LackOfCohesion" : 0.5646897565437748,
      "MetricsIntensity" : 0.056737376787380604,
      "Density" : 3.370672097759675,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "92ff520e-675f-4b61-9608-92a1d2bda2fc",
    "objectives" : {
      "NumberOfConcerns" : 1.0005540166204987,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.5658309284853026,
      "MetricsIntensity" : 0.057242971461417345,
      "Density" : 0.9996976111279104
    },
    "euclideanDistance" : 17.068214465821622,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.774066797642436,
      "LackOfCohesion" : 0.5658309284853026,
      "MetricsIntensity" : 0.05724297146141735,
      "Density" : 3.3803680981595097,
      "baselineType" : "MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    } ]
  }, {
    "solutionId" : "00ebaaae-d439-4bd4-acb2-3837bd19917d",
    "objectives" : {
      "NumberOfConcerns" : 1.0049861495844876,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.5652336987006553,
      "MetricsIntensity" : 0.05677845815499259,
      "Density" : 1.000604777744179
    },
    "euclideanDistance" : 19.061319996515415,
    "generation" : 0,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.771484375,
      "LackOfCohesion" : 0.5652336987006553,
      "MetricsIntensity" : 0.056778458154992585,
      "Density" : 3.366225839267548,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "fe1c4808-d8f0-4ab6-8e0e-0a29f0b247d0",
    "objectives" : {
      "NumberOfConcerns" : 1.002770083102493,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.5653271903198236,
      "MetricsIntensity" : 0.0569875059576068,
      "Density" : 1.005442999697611
    },
    "euclideanDistance" : 21.055624091276812,
    "generation" : 0,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7710371819960862,
      "LackOfCohesion" : 0.5653271903198236,
      "MetricsIntensity" : 0.05698750595760679,
      "Density" : 3.389398572884811,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.SampleData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.datasource.SimpleDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "e556b100-162a-434a-b887-74f552471763",
    "objectives" : {
      "NumberOfConcerns" : 1.004432132963989,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.5670321808749715,
      "MetricsIntensity" : 0.05692707740908299,
      "Density" : 1.0015119443604474
    },
    "euclideanDistance" : 22.05304233593899,
    "generation" : 0,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7739726027397262,
      "LackOfCohesion" : 0.5670321808749715,
      "MetricsIntensity" : 0.056927077409082996,
      "Density" : 3.379591836734694,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.imagepipeline.producers.FetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.nativecode.NativeImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.samples.scrollperf.util.TimeWaster'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "a155708f-4b98-4009-9d99-e79aaa5f8d8b",
    "objectives" : {
      "NumberOfConcerns" : 1.0077562326869807,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.5672766242403136,
      "MetricsIntensity" : 0.05686783145469312,
      "Density" : 1.003023888720895
    },
    "euclideanDistance" : 25.046889353061953,
    "generation" : 0,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7763671875,
      "LackOfCohesion" : 0.5672766242403136,
      "MetricsIntensity" : 0.056867831454693124,
      "Density" : 3.36751269035533,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.BitmapCounterConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.fresco.vito.drawable.ArrayVitoDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.FadeDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.samples.showcase.imageformat.datauri.ImageFormatDataUriFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineResizingFragment.SizeEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "e805f1e7-5f41-435c-868d-0c4abe9fcaac",
    "objectives" : {
      "NumberOfConcerns" : 1.0011080332409972,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.567109457516034,
      "MetricsIntensity" : 0.05693510839925685,
      "Density" : 1.0027214998488057
    },
    "euclideanDistance" : 26.044817573633555,
    "generation" : 0,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7681017612524466,
      "LackOfCohesion" : 0.567109457516034,
      "MetricsIntensity" : 0.05693510839925685,
      "Density" : 3.3836734693877553,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.SampleData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.datasource.SimpleDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "de0a3bde-082c-420d-9a86-58f7dcf68531",
    "objectives" : {
      "NumberOfConcerns" : 1.0038781163434902,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.5675332334935247,
      "MetricsIntensity" : 0.05681685006006332,
      "Density" : 1.0003023888720894
    },
    "euclideanDistance" : 27.043182103207215,
    "generation" : 0,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7712609970674487,
      "LackOfCohesion" : 0.5675332334935247,
      "MetricsIntensity" : 0.05681685006006332,
      "Density" : 3.3720693170234455,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.imagepipeline.producers.FetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.nativecode.NativeImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.samples.scrollperf.util.TimeWaster'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "68c233e4-594d-46d9-95a6-108aeb3bf88e",
    "objectives" : {
      "NumberOfConcerns" : 1.0066481994459833,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.5666540032810264,
      "MetricsIntensity" : 0.0569494043708808,
      "Density" : 1.003023888720895
    },
    "euclideanDistance" : 27.043367717665735,
    "generation" : 0,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7761485826001957,
      "LackOfCohesion" : 0.5666540032810264,
      "MetricsIntensity" : 0.05694940437088079,
      "Density" : 3.374364191251272,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.BitmapCounterConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.fresco.vito.drawable.ArrayVitoDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.FadeDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.samples.showcase.imageformat.datauri.ImageFormatDataUriFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineResizingFragment.SizeEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.nativecode.NativeImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.samples.scrollperf.util.TimeWaster'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "89ff8761-3399-4aac-aa53-ba3f7059ad1e",
    "objectives" : {
      "NumberOfConcerns" : 1.0016620498614959,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.5724539169379491,
      "MetricsIntensity" : 0.056793680880894405,
      "Density" : 0.9975808890232839
    },
    "euclideanDistance" : 31.037548606510192,
    "generation" : 0,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.765625,
      "LackOfCohesion" : 0.5724539169379491,
      "MetricsIntensity" : 0.056793680880894405,
      "Density" : 3.359470468431771,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.zoomable.AnimatedZoomableController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "78708a20-cb1e-4310-99de-d6ef8e164398",
    "objectives" : {
      "NumberOfConcerns" : 1.005540166204986,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.568647916341524,
      "MetricsIntensity" : 0.05694953400461973,
      "Density" : 1.0021167221046265
    },
    "euclideanDistance" : 32.036572111459684,
    "generation" : 0,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.774193548387097,
      "LackOfCohesion" : 0.568647916341524,
      "MetricsIntensity" : 0.05694953400461973,
      "Density" : 3.3713123092573754,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.BitmapCounterConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.fresco.vito.drawable.ArrayVitoDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.FadeDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.samples.showcase.imageformat.datauri.ImageFormatDataUriFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineResizingFragment.SizeEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.nativecode.NativeImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.samples.scrollperf.util.TimeWaster'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "55501008-8918-4aeb-85c7-c2f52f9486f9",
    "objectives" : {
      "NumberOfConcerns" : 1.005540166204986,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.5686890178622802,
      "MetricsIntensity" : 0.05692598546402875,
      "Density" : 1.0027214998488057
    },
    "euclideanDistance" : 32.03659172257512,
    "generation" : 0,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7741935483870974,
      "LackOfCohesion" : 0.5686890178622802,
      "MetricsIntensity" : 0.056925985464028744,
      "Density" : 3.373346897253306,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.BitmapCounterConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.fresco.vito.drawable.ArrayVitoDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.FadeDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.samples.showcase.imageformat.datauri.ImageFormatDataUriFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineResizingFragment.SizeEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.nativecode.NativeImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.samples.scrollperf.util.TimeWaster'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "edcd327e-4d74-4f8c-a251-22fe028caebf",
    "objectives" : {
      "NumberOfConcerns" : 1.0005540166204987,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.5684191949503083,
      "MetricsIntensity" : 0.056950235100891484,
      "Density" : 0.9984880556395525
    },
    "euclideanDistance" : 33.03519986995533,
    "generation" : 0,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7671232876712333,
      "LackOfCohesion" : 0.5684191949503083,
      "MetricsIntensity" : 0.05695023510089149,
      "Density" : 3.365953109072375,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.zoomable.AnimatedZoomableController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "bbabe91f-62e6-4095-bba0-0cb2c5775912",
    "objectives" : {
      "NumberOfConcerns" : 1.0016620498614959,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.5736234673328658,
      "MetricsIntensity" : 0.0568131068858516,
      "Density" : 0.9969761112791049
    },
    "euclideanDistance" : 33.035277505115396,
    "generation" : 0,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7673509286412512,
      "LackOfCohesion" : 0.5736234673328658,
      "MetricsIntensity" : 0.056813106885851596,
      "Density" : 3.357433808553972,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.zoomable.AnimatedZoomableController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "ebf7bcef-fad9-4754-bee9-494e28c51e0a",
    "objectives" : {
      "NumberOfConcerns" : 1.0033240997229917,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.5662303980171994,
      "MetricsIntensity" : 0.057007093366083075,
      "Density" : 1.000604777744179
    },
    "euclideanDistance" : 34.03427295892572,
    "generation" : 0,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7720156555772997,
      "LackOfCohesion" : 0.5662303980171994,
      "MetricsIntensity" : 0.05700709336608309,
      "Density" : 3.3696537678207736,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.BitmapCounterConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.fresco.vito.drawable.ArrayVitoDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.FadeDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.samples.showcase.imageformat.datauri.ImageFormatDataUriFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineResizingFragment.SizeEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.samples.scrollperf.data.impl.ContentProviderSimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "3ceee8e5-bad9-4386-9e36-0ea1aa254afd",
    "objectives" : {
      "NumberOfConcerns" : 0.9994459833795014,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.5701431757483634,
      "MetricsIntensity" : 0.05695149200095791,
      "Density" : 1.0021167221046265
    },
    "euclideanDistance" : 36.032366518336104,
    "generation" : 0,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7651663405088065,
      "LackOfCohesion" : 0.5701431757483634,
      "MetricsIntensity" : 0.056951492000957914,
      "Density" : 3.378185524974516,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.zoomable.AnimatedZoomableController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.SampleData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.datasource.SimpleDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "24f973d8-af9f-4cc0-86b8-0d48c4f7576f",
    "objectives" : {
      "NumberOfConcerns" : 1.0005540166204987,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.5694475651398366,
      "MetricsIntensity" : 0.05693342871503748,
      "Density" : 0.9990928333837314
    },
    "euclideanDistance" : 39.02981945608567,
    "generation" : 0,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7671232876712333,
      "LackOfCohesion" : 0.5694475651398366,
      "MetricsIntensity" : 0.05693342871503749,
      "Density" : 3.3645621181262735,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.zoomable.AnimatedZoomableController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "9b7b4c1c-c655-4a12-8716-bde7e329fe72",
    "objectives" : {
      "NumberOfConcerns" : 0.9994459833795014,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.5714282781468858,
      "MetricsIntensity" : 0.05694579539010258,
      "Density" : 1.0009071666162686
    },
    "euclideanDistance" : 40.0291204066559,
    "generation" : 0,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7651663405088065,
      "LackOfCohesion" : 0.5714282781468858,
      "MetricsIntensity" : 0.056945795390102576,
      "Density" : 3.3741080530071357,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.zoomable.AnimatedZoomableController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.SampleData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.datasource.SimpleDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "091e6095-207d-487e-9318-49292362783f",
    "objectives" : {
      "NumberOfConcerns" : 1.0005540166204987,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.572420685378752,
      "MetricsIntensity" : 0.05690791946532188,
      "Density" : 0.998185666767463
    },
    "euclideanDistance" : 41.02838513660832,
    "generation" : 0,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7671232876712333,
      "LackOfCohesion" : 0.572420685378752,
      "MetricsIntensity" : 0.05690791946532188,
      "Density" : 3.3649337410805296,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.zoomable.AnimatedZoomableController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.nativecode.NativeImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.samples.scrollperf.util.TimeWaster'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "340b3ad0-2d5d-4b0a-a3e8-59dbca9c6d70",
    "objectives" : {
      "NumberOfConcerns" : 0.997229916897507,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.5696636550384373,
      "MetricsIntensity" : 0.05696813679781572,
      "Density" : 0.9954641669186574
    },
    "euclideanDistance" : 42.02752881699394,
    "generation" : 0,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7629774730656222,
      "LackOfCohesion" : 0.5696636550384373,
      "MetricsIntensity" : 0.05696813679781572,
      "Density" : 3.362614913176711,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.zoomable.AnimatedZoomableController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.samples.scrollperf.data.impl.ContentProviderSimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "2f51aff5-6285-4a26-a670-3b3edb04883c",
    "objectives" : {
      "NumberOfConcerns" : 0.9961218836565097,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.5730169685917814,
      "MetricsIntensity" : 0.05708121700041287,
      "Density" : 0.9996976111279104
    },
    "euclideanDistance" : 44.02639277561157,
    "generation" : 0,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7627450980392163,
      "LackOfCohesion" : 0.5730169685917814,
      "MetricsIntensity" : 0.05708121700041287,
      "Density" : 3.380368098159509,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.zoomable.AnimatedZoomableController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.samples.scrollperf.data.impl.ContentProviderSimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.SampleData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.datasource.SimpleDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "1294196e-4c5a-452d-b8d3-48f6859447a4",
    "objectives" : {
      "NumberOfConcerns" : 0.9977839335180055,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.5687660440838387,
      "MetricsIntensity" : 0.05714600472918574,
      "Density" : 1.002419110976716
    },
    "euclideanDistance" : 44.026437254572365,
    "generation" : 0,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7656862745098039,
      "LackOfCohesion" : 0.5687660440838387,
      "MetricsIntensity" : 0.05714600472918574,
      "Density" : 3.386108273748722,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.zoomable.AnimatedZoomableController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.nativecode.NativeImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.samples.scrollperf.util.TimeWaster'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.SampleData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.datasource.SimpleDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "a26accb8-5dd4-44cc-b40e-98fc1b418034",
    "objectives" : {
      "NumberOfConcerns" : 1.0038781163434902,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.5704027174647618,
      "MetricsIntensity" : 0.05693770873869899,
      "Density" : 1.0090716661626853
    },
    "euclideanDistance" : 44.02674866558616,
    "generation" : 0,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7712609970674484,
      "LackOfCohesion" : 0.5704027174647618,
      "MetricsIntensity" : 0.056937708738698994,
      "Density" : 3.3947100712105795,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.common.util.ByteConstants'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.samples.comparison.adapters.UilAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCache.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.options.ImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.options.ImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.common.internal.ImmutableMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.common.internal.ImmutableMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.common.internal.ImmutableMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.samples.scrollperf.data.impl.ContentProviderSimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "bb28693b-ab00-4a79-bd39-1c8c3558c939",
    "objectives" : {
      "NumberOfConcerns" : 0.9994459833795014,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.571992994194744,
      "MetricsIntensity" : 0.05710905685838968,
      "Density" : 1.0027214998488057
    },
    "euclideanDistance" : 47.02483152664915,
    "generation" : 0,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7668952007835454,
      "LackOfCohesion" : 0.571992994194744,
      "MetricsIntensity" : 0.05710905685838967,
      "Density" : 3.380224260958206,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.BitmapCounterConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.fresco.vito.drawable.ArrayVitoDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.FadeDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.samples.showcase.imageformat.datauri.ImageFormatDataUriFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineResizingFragment.SizeEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.zoomable.AnimatedZoomableController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.SampleData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.datasource.SimpleDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "6cda399b-a7b4-4173-bd51-b50f1835a87b",
    "objectives" : {
      "NumberOfConcerns" : 0.9966759002770084,
      "NumberOfRefactorings" : 49.0,
      "LackOfCohesion" : 0.5692655772389963,
      "MetricsIntensity" : 0.05703237526992105,
      "Density" : 1.0009071666162686
    },
    "euclideanDistance" : 49.0236931900855,
    "generation" : 0,
    "numberOfRefactorings" : 49,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.761998041136141,
      "LackOfCohesion" : 0.5692655772389963,
      "MetricsIntensity" : 0.05703237526992105,
      "Density" : 3.3810010214504604,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.imagepipeline.producers.FetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.zoomable.AnimatedZoomableController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.SampleData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.datasource.SimpleDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "41981fb1-84fa-4ac8-99a1-01dede653ac6",
    "objectives" : {
      "NumberOfConcerns" : 1.0011080332409972,
      "NumberOfRefactorings" : 51.0,
      "LackOfCohesion" : 0.571103724025054,
      "MetricsIntensity" : 0.05712184683784927,
      "Density" : 1.0033262775929845
    },
    "euclideanDistance" : 51.0229193919998,
    "generation" : 0,
    "numberOfRefactorings" : 51,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7698334965719889,
      "LackOfCohesion" : 0.571103724025054,
      "MetricsIntensity" : 0.05712184683784927,
      "Density" : 3.3822629969418956,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.common.util.ByteConstants'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.samples.comparison.adapters.UilAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCache.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.options.ImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.options.ImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.common.internal.ImmutableMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.common.internal.ImmutableMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.common.internal.ImmutableMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.samples.scrollperf.data.impl.ContentProviderSimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.nativecode.NativeImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.samples.scrollperf.util.TimeWaster'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.SampleData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.datasource.SimpleDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "5f311d7e-80a6-40c0-8b2e-f4f330902c60",
    "objectives" : {
      "NumberOfConcerns" : 0.9988919667590028,
      "NumberOfRefactorings" : 54.0,
      "LackOfCohesion" : 0.5691856736102755,
      "MetricsIntensity" : 0.05707535057918157,
      "Density" : 1.0048382219534322
    },
    "euclideanDistance" : 54.02161340556427,
    "generation" : 0,
    "numberOfRefactorings" : 54,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.764187866927593,
      "LackOfCohesion" : 0.5691856736102755,
      "MetricsIntensity" : 0.057075350579181575,
      "Density" : 3.383910386965377,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.BitmapCounterConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.fresco.vito.drawable.ArrayVitoDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.FadeDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.samples.showcase.imageformat.datauri.ImageFormatDataUriFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineResizingFragment.SizeEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.zoomable.AnimatedZoomableController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.SampleData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.datasource.SimpleDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "f5115a43-dc66-4a60-9828-f02035cff5bb",
    "objectives" : {
      "NumberOfConcerns" : 0.9994459833795014,
      "NumberOfRefactorings" : 67.0,
      "LackOfCohesion" : 0.5709888477708516,
      "MetricsIntensity" : 0.0571297224456719,
      "Density" : 1.0057453885697005
    },
    "euclideanDistance" : 67.01745823387954,
    "generation" : 0,
    "numberOfRefactorings" : 67,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7668952007835457,
      "LackOfCohesion" : 0.5709888477708516,
      "MetricsIntensity" : 0.0571297224456719,
      "Density" : 3.3869653767820767,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.imagepipeline.producers.FetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.common.util.ByteConstants'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.samples.comparison.adapters.UilAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCache.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.options.ImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.options.ImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.common.internal.ImmutableMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.common.internal.ImmutableMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.common.internal.ImmutableMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.zoomable.AnimatedZoomableController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "70c47bb9-f90b-4e46-baa1-f51c5d3df528",
    "objectives" : {
      "NumberOfConcerns" : 0.9994459833795014,
      "NumberOfRefactorings" : 67.0,
      "LackOfCohesion" : 0.573799273330303,
      "MetricsIntensity" : 0.057061427681986,
      "Density" : 1.0057453885697005
    },
    "euclideanDistance" : 67.01748217945021,
    "generation" : 0,
    "numberOfRefactorings" : 67,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7668952007835454,
      "LackOfCohesion" : 0.573799273330303,
      "MetricsIntensity" : 0.057061427681986,
      "Density" : 3.386965376782077,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.common.util.ByteConstants'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.samples.comparison.adapters.UilAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCache.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.options.ImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.options.ImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.common.internal.ImmutableMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.common.internal.ImmutableMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.common.internal.ImmutableMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.zoomable.AnimatedZoomableController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.memory.BasePool.Counter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.nativecode.NativeImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.samples.scrollperf.util.TimeWaster'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "989bada9-c43e-4e2d-9fb7-54b77e0f9c7b",
    "objectives" : {
      "NumberOfConcerns" : 0.9950138504155125,
      "NumberOfRefactorings" : 79.0,
      "LackOfCohesion" : 0.5710292789909458,
      "MetricsIntensity" : 0.05724997744168777,
      "Density" : 0.999395222255821
    },
    "euclideanDistance" : 79.01467076037315,
    "generation" : 0,
    "numberOfRefactorings" : 79,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.762512266928361,
      "LackOfCohesion" : 0.5710292789909458,
      "MetricsIntensity" : 0.05724997744168778,
      "Density" : 3.3724489795918364,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.common.util.ByteConstants'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.samples.comparison.adapters.UilAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCache.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.options.ImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.options.ImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.common.internal.ImmutableMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.common.internal.ImmutableMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.common.internal.ImmutableMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.fresco.vito.litho.slideshow.FrescoVitoSlideshowComponentSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.zoomable.AnimatedZoomableController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.ComparisonApp'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.SampleData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.datasource.SimpleDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      } ]
    } ]
  }, {
    "solutionId" : "dee91aea-3b61-4a4b-b457-976207e5f729",
    "objectives" : {
      "NumberOfConcerns" : 0.9883656509695291,
      "NumberOfRefactorings" : 96.0,
      "LackOfCohesion" : 0.5724016187149479,
      "MetricsIntensity" : 0.05745004453427384,
      "Density" : 0.9915331115814938
    },
    "euclideanDistance" : 96.01193128300307,
    "generation" : 0,
    "numberOfRefactorings" : 96,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7524557956777993,
      "LackOfCohesion" : 0.5724016187149479,
      "MetricsIntensity" : 0.05745004453427383,
      "Density" : 3.3493360572012256,
      "baselineType" : "CONCERN_MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.PostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.drawee.drawable.DrawableUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.drawee.drawable.DrawableUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.drawee.drawable.DrawableUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.drawee.drawable.DrawableUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.DrawableUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.drawable.DrawableUtils'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imageutils.HeifExifUtil.HeifExifUtilAndroidN'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.listener.ForwardingImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.postprocessors.RoundAsCirclePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.samples.scrollperf.util.TimeWaster'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.fresco.vito.core.impl.FrescoDrawable2Impl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.FrescoDrawable2Impl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeScaleTypeFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.misc.LogcatImagePerfDataListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.fresco.samples.showcase.misc.LogcatImagePerfDataListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.image.CloseableBitmap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.image.CloseableBitmap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.image.CloseableBitmap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.holders.VolleyHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.samples.comparison.holders.VolleyHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.samples.comparison.holders.VolleyHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.samples.comparison.holders.VolleyHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.producers.JobScheduler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.common.util.ByteConstants'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.webpsupport.WebpBitmapFactoryImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.animation2.AnimationApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.samples.animation2.AnimationApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.fresco.vito.core.impl.FrescoController2Impl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.fresco.vito.core.impl.FrescoController2Impl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.fresco.vito.core.impl.FrescoController2Impl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.fresco.vito.core.impl.source.ImageSourceProviderImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.fresco.vito.core.impl.source.ImageSourceProviderImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.core.VitoImageRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.fresco.vito.core.VitoImageRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.fresco.vito.core.VitoImageRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.core.VitoImageRequest'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.producers.DecodeProducer.ProgressiveDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.imagepipeline.memory.BitmapCounterConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.bitmap.ExampleBitmapAnimationFactory.ColorListAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewAdapter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.common.references.DefaultCloseableReference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.common.references.DefaultCloseableReference'"
      } ]
    } ]
  } ]
}