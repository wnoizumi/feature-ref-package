{
  "executionId" : "db4b1b82-0dcc-49ba-87a2-e70e2b857cf3",
  "computingTime" : 4811,
  "maxEvaluations" : 1000,
  "initialPopulationSize" : 50,
  "finalPopulationSize" : 34,
  "algorithm" : "Baseline",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.3401430030643513,
    "meanNumConcerns" : 1.7603143418467586,
    "meanMetricsIntensity" : 0.057297141561670394,
    "meanLackOfCohesion" : 0.5657915280402931
  },
  "population" : [ {
    "solutionId" : "70190cc8-4d9b-49c8-bbeb-46d042ae23c8",
    "objectives" : {
      "NumberOfConcerns" : 1.0050223214285714,
      "NumberOfRefactorings" : 4.0,
      "LackOfCohesion" : 0.5697184524596463,
      "MetricsIntensity" : 0.05696058233742919,
      "Density" : 1.003058103975535
    },
    "euclideanDistance" : 4.282991833932666,
    "generation" : 0,
    "numberOfRefactorings" : 4,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7622309197651667,
      "LackOfCohesion" : 0.5697184524596463,
      "MetricsIntensity" : 0.0569605823374292,
      "Density" : 3.3367243133265516,
      "baselineType" : "EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING, com.facebook.animated.gif.GifImage.mNativeContext], extractedMethods=[com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.nativeGetDuration(), com.facebook.animated.gif.GifImage.nativeDispose(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.nativeGetWidth(), com.facebook.animated.gif.GifImage.nativeGetHeight()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.extend()]"
      } ]
    } ]
  }, {
    "solutionId" : "acdc7677-fb2c-48fe-a999-f9b79deb8b1a",
    "objectives" : {
      "NumberOfConcerns" : 1.0005580357142858,
      "NumberOfRefactorings" : 7.0,
      "LackOfCohesion" : 0.5658315470150359,
      "MetricsIntensity" : 0.05721740562939991,
      "Density" : 1.000611620795107
    },
    "euclideanDistance" : 7.164201223416818,
    "generation" : 0,
    "numberOfRefactorings" : 7,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.761296660117878,
      "LackOfCohesion" : 0.5658315470150359,
      "MetricsIntensity" : 0.057217405629399906,
      "Density" : 3.3387755102040826,
      "baselineType" : "MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameInfo(int)', targetType='com.facebook.animated.gif.GifFrame'"
      } ]
    } ]
  }, {
    "solutionId" : "5b2f60a0-30cc-44da-8b00-23feb4c503ca",
    "objectives" : {
      "NumberOfConcerns" : 1.0061383928571428,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.5701212945279369,
      "MetricsIntensity" : 0.056548430026382976,
      "Density" : 1.000611620795107
    },
    "euclideanDistance" : 9.129171599694248,
    "generation" : 0,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.755598831548199,
      "LackOfCohesion" : 0.5701212945279369,
      "MetricsIntensity" : 0.05654843002638297,
      "Density" : 3.311740890688259,
      "baselineType" : "CONCERN_EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.Fresco.sIsInitialized, com.facebook.drawee.backends.pipeline.Fresco.TAG], extractedMethods=[com.facebook.drawee.backends.pipeline.Fresco.initialize(Context), com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized(), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean), com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline(), com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory(), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mBitmapConfig, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageScaleType, com.facebook.fresco.vito.options.DecodedImageOptions.mImageDecodeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mResizeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mLocalThumbnailPreviewsEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mImageDecodeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageScaleType, com.facebook.fresco.vito.options.DecodedImageOptions.mBorderOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRoundingOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mResizeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mBitmapConfig, com.facebook.fresco.vito.options.DecodedImageOptions.mPostprocessor, com.facebook.fresco.vito.options.DecodedImageOptions.mProgressiveDecodingEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageFocusPoint, com.facebook.fresco.vito.options.DecodedImageOptions.mRotationOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRotationOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRoundingOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mPostprocessor, com.facebook.fresco.vito.options.DecodedImageOptions.mBorderOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mLocalThumbnailPreviewsEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mProgressiveDecodingEnabled], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.areLocalThumbnailPreviewsEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getBorderOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadii, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadius], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners(), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.mDecodeBitmapConfig, com.facebook.animated.gif.GifImage.sInitialized, com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING], extractedMethods=[com.facebook.animated.gif.GifImage.decodeFromNativeMemory(long, int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.nativeCreateFromDirectByteBuffer(ByteBuffer, int, boolean), com.facebook.animated.gif.GifImage.nativeCreateFromNativeMemory(long, int, int, boolean), com.facebook.animated.gif.GifImage.ensure(), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.getWidth(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.getSizeInBytes(), com.facebook.animated.gif.GifImage.createFromByteArray(byte[]), com.facebook.animated.gif.GifImage.getLoopCount(), com.facebook.animated.gif.GifImage.getFrame(int), com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer, ImageDecodeOptions), com.facebook.animated.gif.GifImage.finalize(), com.facebook.animated.gif.GifImage.getFrameCount(), com.facebook.animated.gif.GifImage.getFrameDurations(), com.facebook.animated.gif.GifImage.createFromNativeMemory(long, int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.createFromFileDescriptor(int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.getFrameInfo(int), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.decodeFromByteBuffer(ByteBuffer, ImageDecodeOptions), com.facebook.animated.gif.GifImage.doesRenderSupportScaling(), com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable), com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo), com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object), com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.hashCode(), com.facebook.fresco.vito.options.ImageOptions.extend(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType(), com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable(), com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions(), com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs(), com.facebook.fresco.vito.options.ImageOptions.toString(), com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes(), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport(), com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType(), com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory(), com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable(), com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType(), com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable(), com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "d972d070-66ec-4fa4-bd65-1d97eab1c698",
    "objectives" : {
      "NumberOfConcerns" : 1.0027901785714286,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.5706433438110757,
      "MetricsIntensity" : 0.05681238512703533,
      "Density" : 0.9963302752293578
    },
    "euclideanDistance" : 16.072558092367178,
    "generation" : 0,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7548828125,
      "LackOfCohesion" : 0.5706433438110757,
      "MetricsIntensity" : 0.05681238512703532,
      "Density" : 3.304259634888438,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.transcoder.DownsampleUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.Fresco.TAG', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadii, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadius], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners(), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameInfo(int)', targetType='com.facebook.animated.gif.GifFrame'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable), com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo), com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object), com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.hashCode(), com.facebook.fresco.vito.options.ImageOptions.extend(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType(), com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable(), com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions(), com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs(), com.facebook.fresco.vito.options.ImageOptions.toString(), com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes(), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport(), com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType(), com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory(), com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable(), com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType(), com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable(), com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "4f68dd90-238e-4aa0-b33b-b9259d427a47",
    "objectives" : {
      "NumberOfConcerns" : 1.0022321428571428,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.572487101519131,
      "MetricsIntensity" : 0.056812521627647876,
      "Density" : 0.999388379204893
    },
    "euclideanDistance" : 17.068515329245404,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7556207233626593,
      "LackOfCohesion" : 0.572487101519131,
      "MetricsIntensity" : 0.056812521627647876,
      "Density" : 3.321138211382115,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadii, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadius], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners(), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.mDecodeBitmapConfig, com.facebook.animated.gif.GifImage.sInitialized, com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING], extractedMethods=[com.facebook.animated.gif.GifImage.decodeFromNativeMemory(long, int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.nativeCreateFromDirectByteBuffer(ByteBuffer, int, boolean), com.facebook.animated.gif.GifImage.nativeCreateFromNativeMemory(long, int, int, boolean), com.facebook.animated.gif.GifImage.ensure(), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.getWidth(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.getSizeInBytes(), com.facebook.animated.gif.GifImage.createFromByteArray(byte[]), com.facebook.animated.gif.GifImage.getLoopCount(), com.facebook.animated.gif.GifImage.getFrame(int), com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer, ImageDecodeOptions), com.facebook.animated.gif.GifImage.finalize(), com.facebook.animated.gif.GifImage.getFrameCount(), com.facebook.animated.gif.GifImage.getFrameDurations(), com.facebook.animated.gif.GifImage.createFromNativeMemory(long, int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.createFromFileDescriptor(int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.getFrameInfo(int), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.decodeFromByteBuffer(ByteBuffer, ImageDecodeOptions), com.facebook.animated.gif.GifImage.doesRenderSupportScaling(), com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object)', targetType='com.facebook.imagepipeline.debug.FlipperCacheKeyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.extend()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "5b1a1b2e-88fb-412d-b4dc-95736f5ebdf8",
    "objectives" : {
      "NumberOfConcerns" : 1.0050223214285714,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.5696865663078211,
      "MetricsIntensity" : 0.05673690975799071,
      "Density" : 1.002446483180428
    },
    "euclideanDistance" : 19.061551108946276,
    "generation" : 0,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.757073170731707,
      "LackOfCohesion" : 0.5696865663078211,
      "MetricsIntensity" : 0.0567369097579907,
      "Density" : 3.324543610547668,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.Fresco.sIsInitialized, com.facebook.drawee.backends.pipeline.Fresco.TAG], extractedMethods=[com.facebook.drawee.backends.pipeline.Fresco.initialize(Context), com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized(), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean), com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline(), com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory(), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.datasource.BaseBitmapReferenceDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING, com.facebook.animated.gif.GifImage.mNativeContext], extractedMethods=[com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.nativeGetDuration(), com.facebook.animated.gif.GifImage.nativeDispose(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.nativeGetWidth(), com.facebook.animated.gif.GifImage.nativeGetHeight()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable), com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo), com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object), com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.hashCode(), com.facebook.fresco.vito.options.ImageOptions.extend(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType(), com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable(), com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions(), com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs(), com.facebook.fresco.vito.options.ImageOptions.toString(), com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes(), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport(), com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType(), com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory(), com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable(), com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType(), com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable(), com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "91135315-60e0-4643-92e0-28dfe267a477",
    "objectives" : {
      "NumberOfConcerns" : 0.9972098214285714,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.5706081679574541,
      "MetricsIntensity" : 0.05692777218755558,
      "Density" : 0.9966360856269113
    },
    "euclideanDistance" : 23.050304669737304,
    "generation" : 0,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.74853228962818,
      "LackOfCohesion" : 0.5706081679574541,
      "MetricsIntensity" : 0.05692777218755557,
      "Density" : 3.315361139369278,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions)', targetType='com.facebook.samples.animation2.bitmap.ExampleBitmapAnimationFactory.ColorListAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.configs.uil.SampleUilFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.imagepipeline.postprocessors.RoundAsCirclePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadii, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadius], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners(), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameInfo(int)', targetType='com.facebook.animated.gif.GifFrame'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable), com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo), com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object), com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.hashCode(), com.facebook.fresco.vito.options.ImageOptions.extend(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType(), com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable(), com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions(), com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs(), com.facebook.fresco.vito.options.ImageOptions.toString(), com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes(), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport(), com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType(), com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory(), com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable(), com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType(), com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable(), com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage)', targetType='com.facebook.imagepipeline.decoder.ImageDecoderConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "eb96b8ce-e328-4257-8433-c014ab809bb8",
    "objectives" : {
      "NumberOfConcerns" : 1.0016741071428572,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.5697124698059666,
      "MetricsIntensity" : 0.05682962898158566,
      "Density" : 1.0009174311926605
    },
    "euclideanDistance" : 23.050661348993184,
    "generation" : 0,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7529296875,
      "LackOfCohesion" : 0.5697124698059666,
      "MetricsIntensity" : 0.05682962898158565,
      "Density" : 3.31947261663286,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.transcoder.DownsampleUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.Fresco.TAG', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadii, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadius], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners(), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING, com.facebook.animated.gif.GifImage.mNativeContext], extractedMethods=[com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.nativeGetDuration(), com.facebook.animated.gif.GifImage.nativeDispose(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.nativeGetWidth(), com.facebook.animated.gif.GifImage.nativeGetHeight()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable), com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo), com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object), com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.extend()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)', targetType='com.facebook.drawee.view.DraweeHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      } ]
    } ]
  }, {
    "solutionId" : "09e2c5d8-ef69-40d6-bf33-b485d97c8e95",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.5747533743676756,
      "MetricsIntensity" : 0.05690093565035816,
      "Density" : 0.9990825688073395
    },
    "euclideanDistance" : 26.044802651145574,
    "generation" : 0,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.751710654936462,
      "LackOfCohesion" : 0.5747533743676756,
      "MetricsIntensity" : 0.05690093565035816,
      "Density" : 3.3201219512195124,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.transcoder.DownsampleUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.Fresco.TAG', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadii, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadius], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners(), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.mDecodeBitmapConfig, com.facebook.animated.gif.GifImage.sInitialized, com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING], extractedMethods=[com.facebook.animated.gif.GifImage.decodeFromNativeMemory(long, int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.nativeCreateFromDirectByteBuffer(ByteBuffer, int, boolean), com.facebook.animated.gif.GifImage.nativeCreateFromNativeMemory(long, int, int, boolean), com.facebook.animated.gif.GifImage.ensure(), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.getWidth(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.getSizeInBytes(), com.facebook.animated.gif.GifImage.createFromByteArray(byte[]), com.facebook.animated.gif.GifImage.getLoopCount(), com.facebook.animated.gif.GifImage.getFrame(int), com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer, ImageDecodeOptions), com.facebook.animated.gif.GifImage.finalize(), com.facebook.animated.gif.GifImage.getFrameCount(), com.facebook.animated.gif.GifImage.getFrameDurations(), com.facebook.animated.gif.GifImage.createFromNativeMemory(long, int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.createFromFileDescriptor(int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.getFrameInfo(int), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.decodeFromByteBuffer(ByteBuffer, ImageDecodeOptions), com.facebook.animated.gif.GifImage.doesRenderSupportScaling(), com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object)', targetType='com.facebook.imagepipeline.debug.FlipperCacheKeyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.hashCode(), com.facebook.fresco.vito.options.ImageOptions.extend(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType(), com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable(), com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions(), com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs(), com.facebook.fresco.vito.options.ImageOptions.toString(), com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes(), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport(), com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType(), com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory(), com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable(), com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType(), com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable(), com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage)', targetType='com.facebook.imagepipeline.decoder.ImageDecoderConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "30e5e42f-de8b-4836-add0-d46c36dbe5ae",
    "objectives" : {
      "NumberOfConcerns" : 0.9972098214285714,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.5735187980559582,
      "MetricsIntensity" : 0.05688582757487492,
      "Density" : 0.9975535168195718
    },
    "euclideanDistance" : 28.041428284878343,
    "generation" : 0,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7468230694037146,
      "LackOfCohesion" : 0.5735187980559582,
      "MetricsIntensity" : 0.05688582757487492,
      "Density" : 3.318413021363174,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions)', targetType='com.facebook.samples.animation2.bitmap.ExampleBitmapAnimationFactory.ColorListAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.configs.uil.SampleUilFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.imagepipeline.postprocessors.RoundAsCirclePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mBitmapConfig, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageScaleType, com.facebook.fresco.vito.options.DecodedImageOptions.mImageDecodeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mResizeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mLocalThumbnailPreviewsEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mImageDecodeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageScaleType, com.facebook.fresco.vito.options.DecodedImageOptions.mBorderOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRoundingOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mResizeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mBitmapConfig, com.facebook.fresco.vito.options.DecodedImageOptions.mPostprocessor, com.facebook.fresco.vito.options.DecodedImageOptions.mProgressiveDecodingEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageFocusPoint, com.facebook.fresco.vito.options.DecodedImageOptions.mRotationOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRotationOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRoundingOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mPostprocessor, com.facebook.fresco.vito.options.DecodedImageOptions.mBorderOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mLocalThumbnailPreviewsEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mProgressiveDecodingEnabled], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.areLocalThumbnailPreviewsEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getBorderOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadii, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadius], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners(), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING, com.facebook.animated.gif.GifImage.mNativeContext], extractedMethods=[com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.nativeGetDuration(), com.facebook.animated.gif.GifImage.nativeDispose(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.nativeGetWidth(), com.facebook.animated.gif.GifImage.nativeGetHeight()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object)', targetType='com.facebook.imagepipeline.debug.FlipperCacheKeyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.hashCode(), com.facebook.fresco.vito.options.ImageOptions.extend(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType(), com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable(), com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions(), com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs(), com.facebook.fresco.vito.options.ImageOptions.toString(), com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes(), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport(), com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType(), com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory(), com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable(), com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType(), com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable(), com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage)', targetType='com.facebook.imagepipeline.decoder.ImageDecoderConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "8c99f4dc-2f5e-4f38-b387-e6b3a49f586a",
    "objectives" : {
      "NumberOfConcerns" : 0.9977678571428571,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.5667736931469364,
      "MetricsIntensity" : 0.05684731968208658,
      "Density" : 0.9926605504587156
    },
    "euclideanDistance" : 32.03600130637691,
    "generation" : 0,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.747800586510264,
      "LackOfCohesion" : 0.5667736931469364,
      "MetricsIntensity" : 0.05684731968208658,
      "Density" : 3.295431472081218,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.Fresco.sIsInitialized, com.facebook.drawee.backends.pipeline.Fresco.TAG], extractedMethods=[com.facebook.drawee.backends.pipeline.Fresco.initialize(Context), com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized(), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean), com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline(), com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory(), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions)', targetType='com.facebook.samples.animation2.bitmap.ExampleBitmapAnimationFactory.ColorListAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.configs.uil.SampleUilFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.imagepipeline.postprocessors.RoundAsCirclePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mBitmapConfig, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageScaleType, com.facebook.fresco.vito.options.DecodedImageOptions.mImageDecodeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mResizeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mLocalThumbnailPreviewsEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mImageDecodeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageScaleType, com.facebook.fresco.vito.options.DecodedImageOptions.mBorderOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRoundingOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mResizeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mBitmapConfig, com.facebook.fresco.vito.options.DecodedImageOptions.mPostprocessor, com.facebook.fresco.vito.options.DecodedImageOptions.mProgressiveDecodingEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageFocusPoint, com.facebook.fresco.vito.options.DecodedImageOptions.mRotationOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRotationOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRoundingOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mPostprocessor, com.facebook.fresco.vito.options.DecodedImageOptions.mBorderOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mLocalThumbnailPreviewsEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mProgressiveDecodingEnabled], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.areLocalThumbnailPreviewsEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getBorderOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.datasource.BaseBitmapReferenceDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameInfo(int)', targetType='com.facebook.animated.gif.GifFrame'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable), com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo), com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object), com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.extend()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)', targetType='com.facebook.drawee.view.DraweeHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      } ]
    } ]
  }, {
    "solutionId" : "0095e5df-e5f0-4026-87b3-87bd41013c64",
    "objectives" : {
      "NumberOfConcerns" : 0.99609375,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.569654799497468,
      "MetricsIntensity" : 0.056825970360756026,
      "Density" : 0.9975535168195718
    },
    "euclideanDistance" : 32.036152258959035,
    "generation" : 0,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7431640625,
      "LackOfCohesion" : 0.569654799497468,
      "MetricsIntensity" : 0.056825970360756026,
      "Density" : 3.3150406504065044,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.transcoder.DownsampleUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.Fresco.TAG', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions)', targetType='com.facebook.samples.animation2.bitmap.ExampleBitmapAnimationFactory.ColorListAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.configs.uil.SampleUilFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.imagepipeline.postprocessors.RoundAsCirclePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mBitmapConfig, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageScaleType, com.facebook.fresco.vito.options.DecodedImageOptions.mImageDecodeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mResizeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mLocalThumbnailPreviewsEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mImageDecodeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageScaleType, com.facebook.fresco.vito.options.DecodedImageOptions.mBorderOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRoundingOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mResizeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mBitmapConfig, com.facebook.fresco.vito.options.DecodedImageOptions.mPostprocessor, com.facebook.fresco.vito.options.DecodedImageOptions.mProgressiveDecodingEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageFocusPoint, com.facebook.fresco.vito.options.DecodedImageOptions.mRotationOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRotationOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRoundingOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mPostprocessor, com.facebook.fresco.vito.options.DecodedImageOptions.mBorderOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mLocalThumbnailPreviewsEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mProgressiveDecodingEnabled], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.areLocalThumbnailPreviewsEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getBorderOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.datasource.BaseBitmapReferenceDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING, com.facebook.animated.gif.GifImage.mNativeContext], extractedMethods=[com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.nativeGetDuration(), com.facebook.animated.gif.GifImage.nativeDispose(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.nativeGetWidth(), com.facebook.animated.gif.GifImage.nativeGetHeight()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable), com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo), com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object), com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.hashCode(), com.facebook.fresco.vito.options.ImageOptions.extend(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType(), com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable(), com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions(), com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs(), com.facebook.fresco.vito.options.ImageOptions.toString(), com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes(), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport(), com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType(), com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory(), com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable(), com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType(), com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable(), com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "f6fd7fec-f883-489e-a662-dc6462fcc37b",
    "objectives" : {
      "NumberOfConcerns" : 0.9966517857142857,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.5755507905050037,
      "MetricsIntensity" : 0.05687965853400443,
      "Density" : 0.9972477064220183
    },
    "euclideanDistance" : 34.03413450901811,
    "generation" : 0,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7458455522971652,
      "LackOfCohesion" : 0.5755507905050037,
      "MetricsIntensity" : 0.05687965853400443,
      "Density" : 3.317395727365208,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.transcoder.DownsampleUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.Fresco.TAG', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions)', targetType='com.facebook.samples.animation2.bitmap.ExampleBitmapAnimationFactory.ColorListAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.configs.uil.SampleUilFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.imagepipeline.postprocessors.RoundAsCirclePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mBitmapConfig, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageScaleType, com.facebook.fresco.vito.options.DecodedImageOptions.mImageDecodeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mResizeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mLocalThumbnailPreviewsEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mImageDecodeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageScaleType, com.facebook.fresco.vito.options.DecodedImageOptions.mBorderOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRoundingOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mResizeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mBitmapConfig, com.facebook.fresco.vito.options.DecodedImageOptions.mPostprocessor, com.facebook.fresco.vito.options.DecodedImageOptions.mProgressiveDecodingEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageFocusPoint, com.facebook.fresco.vito.options.DecodedImageOptions.mRotationOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRotationOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRoundingOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mPostprocessor, com.facebook.fresco.vito.options.DecodedImageOptions.mBorderOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mLocalThumbnailPreviewsEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mProgressiveDecodingEnabled], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.areLocalThumbnailPreviewsEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getBorderOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadii, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadius], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners(), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.mDecodeBitmapConfig, com.facebook.animated.gif.GifImage.sInitialized, com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING], extractedMethods=[com.facebook.animated.gif.GifImage.decodeFromNativeMemory(long, int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.nativeCreateFromDirectByteBuffer(ByteBuffer, int, boolean), com.facebook.animated.gif.GifImage.nativeCreateFromNativeMemory(long, int, int, boolean), com.facebook.animated.gif.GifImage.ensure(), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.getWidth(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.getSizeInBytes(), com.facebook.animated.gif.GifImage.createFromByteArray(byte[]), com.facebook.animated.gif.GifImage.getLoopCount(), com.facebook.animated.gif.GifImage.getFrame(int), com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer, ImageDecodeOptions), com.facebook.animated.gif.GifImage.finalize(), com.facebook.animated.gif.GifImage.getFrameCount(), com.facebook.animated.gif.GifImage.getFrameDurations(), com.facebook.animated.gif.GifImage.createFromNativeMemory(long, int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.createFromFileDescriptor(int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.getFrameInfo(int), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.decodeFromByteBuffer(ByteBuffer, ImageDecodeOptions), com.facebook.animated.gif.GifImage.doesRenderSupportScaling(), com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object)', targetType='com.facebook.imagepipeline.debug.FlipperCacheKeyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.extend()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage)', targetType='com.facebook.imagepipeline.decoder.ImageDecoderConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "0034594b-8971-40ed-b721-0f7b32382383",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.5709933647585811,
      "MetricsIntensity" : 0.056957755261960244,
      "Density" : 0.9923547400611621
    },
    "euclideanDistance" : 35.03304219645512,
    "generation" : 0,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7517106549364614,
      "LackOfCohesion" : 0.5709933647585811,
      "MetricsIntensity" : 0.056957755261960244,
      "Density" : 3.297764227642277,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBorderOptions()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.memory.BasePool.InvalidSizeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.areLocalThumbnailPreviewsEnabled()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.SingleUsePostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.cache.disk.DynamicDefaultDiskStorage.State'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.fresco.samples.showcase.postprocessor.BenchmarkPostprocessorForManualBitmapHandling'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toStringHelper()', targetType='com.facebook.samples.animation2.color.SimpleColorFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.listener.BaseRequestListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.animated.gif.GifImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.animated.gif.GifImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions)', targetType='com.facebook.animated.gif.GifImage'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadii, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadius], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners(), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.mDecodeBitmapConfig, com.facebook.animated.gif.GifImage.sInitialized, com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING], extractedMethods=[com.facebook.animated.gif.GifImage.decodeFromNativeMemory(long, int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.nativeCreateFromDirectByteBuffer(ByteBuffer, int, boolean), com.facebook.animated.gif.GifImage.nativeCreateFromNativeMemory(long, int, int, boolean), com.facebook.animated.gif.GifImage.ensure(), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.getWidth(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.getSizeInBytes(), com.facebook.animated.gif.GifImage.createFromByteArray(byte[]), com.facebook.animated.gif.GifImage.getLoopCount(), com.facebook.animated.gif.GifImage.getFrame(int), com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer, ImageDecodeOptions), com.facebook.animated.gif.GifImage.finalize(), com.facebook.animated.gif.GifImage.getFrameCount(), com.facebook.animated.gif.GifImage.getFrameDurations(), com.facebook.animated.gif.GifImage.createFromNativeMemory(long, int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.createFromFileDescriptor(int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.getFrameInfo(int), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.decodeFromByteBuffer(ByteBuffer, ImageDecodeOptions), com.facebook.animated.gif.GifImage.doesRenderSupportScaling(), com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable), com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo), com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object), com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.extend()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage)', targetType='com.facebook.imagepipeline.decoder.ImageDecoderConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)', targetType='com.facebook.drawee.view.DraweeHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      } ]
    } ]
  }, {
    "solutionId" : "1f9e7d71-71ad-49f8-a013-38da18caba4b",
    "objectives" : {
      "NumberOfConcerns" : 1.0016741071428572,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.5719910716076976,
      "MetricsIntensity" : 0.056933763279729446,
      "Density" : 0.9902140672782874
    },
    "euclideanDistance" : 35.03304568768403,
    "generation" : 0,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7529296875,
      "LackOfCohesion" : 0.5719910716076976,
      "MetricsIntensity" : 0.056933763279729446,
      "Density" : 3.2906504065040654,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.Fresco.sIsInitialized, com.facebook.drawee.backends.pipeline.Fresco.TAG], extractedMethods=[com.facebook.drawee.backends.pipeline.Fresco.initialize(Context), com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized(), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean), com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline(), com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory(), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBorderOptions()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.memory.BasePool.InvalidSizeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.areLocalThumbnailPreviewsEnabled()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.SingleUsePostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.cache.disk.DynamicDefaultDiskStorage.State'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.fresco.samples.showcase.postprocessor.BenchmarkPostprocessorForManualBitmapHandling'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toStringHelper()', targetType='com.facebook.samples.animation2.color.SimpleColorFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.listener.BaseRequestListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.animated.gif.GifImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.animated.gif.GifImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions)', targetType='com.facebook.animated.gif.GifImage'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.datasource.BaseBitmapReferenceDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING, com.facebook.animated.gif.GifImage.mNativeContext], extractedMethods=[com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.nativeGetDuration(), com.facebook.animated.gif.GifImage.nativeDispose(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.nativeGetWidth(), com.facebook.animated.gif.GifImage.nativeGetHeight()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable), com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo), com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object), com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.extend()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage)', targetType='com.facebook.imagepipeline.decoder.ImageDecoderConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "61afd59b-5fbc-4d6c-947b-4b20e3dd7773",
    "objectives" : {
      "NumberOfConcerns" : 0.9994419642857143,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.5762667629236188,
      "MetricsIntensity" : 0.05690365674540052,
      "Density" : 0.9978593272171253
    },
    "euclideanDistance" : 35.03326888666102,
    "generation" : 0,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7490234375,
      "LackOfCohesion" : 0.5762667629236188,
      "MetricsIntensity" : 0.05690365674540052,
      "Density" : 3.3194303153611395,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.Fresco.sIsInitialized, com.facebook.drawee.backends.pipeline.Fresco.TAG], extractedMethods=[com.facebook.drawee.backends.pipeline.Fresco.initialize(Context), com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized(), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean), com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline(), com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory(), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions)', targetType='com.facebook.samples.animation2.bitmap.ExampleBitmapAnimationFactory.ColorListAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.configs.uil.SampleUilFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.imagepipeline.postprocessors.RoundAsCirclePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBorderOptions()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.memory.BasePool.InvalidSizeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.areLocalThumbnailPreviewsEnabled()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.SingleUsePostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.cache.disk.DynamicDefaultDiskStorage.State'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.fresco.samples.showcase.postprocessor.BenchmarkPostprocessorForManualBitmapHandling'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toStringHelper()', targetType='com.facebook.samples.animation2.color.SimpleColorFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.listener.BaseRequestListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.animated.gif.GifImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.animated.gif.GifImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions)', targetType='com.facebook.animated.gif.GifImage'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadii, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadius], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners(), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING, com.facebook.animated.gif.GifImage.mNativeContext], extractedMethods=[com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.nativeGetDuration(), com.facebook.animated.gif.GifImage.nativeDispose(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.nativeGetWidth(), com.facebook.animated.gif.GifImage.nativeGetHeight()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object)', targetType='com.facebook.imagepipeline.debug.FlipperCacheKeyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.extend()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "b199c8f6-544a-453f-923d-b43b48eaf0b1",
    "objectives" : {
      "NumberOfConcerns" : 0.9972098214285714,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.5694295018590838,
      "MetricsIntensity" : 0.0570517929144932,
      "Density" : 0.9990825688073395
    },
    "euclideanDistance" : 36.03220917834362,
    "generation" : 0,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7502448579823704,
      "LackOfCohesion" : 0.5694295018590838,
      "MetricsIntensity" : 0.05705179291449319,
      "Density" : 3.3201219512195124,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.transcoder.DownsampleUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.Fresco.TAG', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.datasource.BaseBitmapReferenceDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameInfo(int)', targetType='com.facebook.animated.gif.GifFrame'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object)', targetType='com.facebook.imagepipeline.debug.FlipperCacheKeyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.hashCode(), com.facebook.fresco.vito.options.ImageOptions.extend(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType(), com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable(), com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions(), com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs(), com.facebook.fresco.vito.options.ImageOptions.toString(), com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes(), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport(), com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType(), com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory(), com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable(), com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType(), com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable(), com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)', targetType='com.facebook.drawee.view.DraweeHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      } ]
    } ]
  }, {
    "solutionId" : "809977be-b3e0-4f13-8b62-ec9f9d308a46",
    "objectives" : {
      "NumberOfConcerns" : 0.9983258928571429,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.5704710059538456,
      "MetricsIntensity" : 0.05706891242591803,
      "Density" : 0.9948012232415903
    },
    "euclideanDistance" : 38.03044803958417,
    "generation" : 0,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7504892367906066,
      "LackOfCohesion" : 0.5704710059538456,
      "MetricsIntensity" : 0.05706891242591802,
      "Density" : 3.3025380710659906,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadii, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadius], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners(), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameInfo(int)', targetType='com.facebook.animated.gif.GifFrame'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable), com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo), com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object), com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType()', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.hashCode()', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory()', targetType='com.facebook.imagepipeline.animated.base.AnimatedImageResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable()', targetType='com.facebook.imagepipeline.listener.BaseRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport()', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec.Data'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately()', targetType='com.facebook.imagepipeline.producers.FetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.toString()', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions)', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.defaults()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.create()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)', targetType='com.facebook.drawee.view.DraweeHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      } ]
    } ]
  }, {
    "solutionId" : "e2de584d-bded-4b47-92ae-f40a50a39194",
    "objectives" : {
      "NumberOfConcerns" : 0.9983258928571429,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.570446092920702,
      "MetricsIntensity" : 0.057094873090767564,
      "Density" : 0.9948012232415903
    },
    "euclideanDistance" : 40.028926448651774,
    "generation" : 0,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7504892367906066,
      "LackOfCohesion" : 0.570446092920702,
      "MetricsIntensity" : 0.05709487309076757,
      "Density" : 3.30589430894309,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadii, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadius], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners(), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING, com.facebook.animated.gif.GifImage.mNativeContext], extractedMethods=[com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.nativeGetDuration(), com.facebook.animated.gif.GifImage.nativeDispose(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.nativeGetWidth(), com.facebook.animated.gif.GifImage.nativeGetHeight()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable), com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo), com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object), com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType()', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.hashCode()', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory()', targetType='com.facebook.imagepipeline.animated.base.AnimatedImageResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable()', targetType='com.facebook.imagepipeline.listener.BaseRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport()', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec.Data'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately()', targetType='com.facebook.imagepipeline.producers.FetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.toString()', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions)', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.defaults()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.create()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)', targetType='com.facebook.drawee.view.DraweeHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      } ]
    } ]
  }, {
    "solutionId" : "fd96c07f-418e-403e-853a-3e17c2292c86",
    "objectives" : {
      "NumberOfConcerns" : 0.9972098214285714,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.5697571433384127,
      "MetricsIntensity" : 0.0570788052106208,
      "Density" : 0.998776758409786
    },
    "euclideanDistance" : 41.02828126589612,
    "generation" : 0,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7502448579823704,
      "LackOfCohesion" : 0.5697571433384127,
      "MetricsIntensity" : 0.05707880521062081,
      "Density" : 3.31910569105691,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.transcoder.DownsampleUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.Fresco.TAG', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mBitmapConfig, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageScaleType, com.facebook.fresco.vito.options.DecodedImageOptions.mImageDecodeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mResizeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mLocalThumbnailPreviewsEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mImageDecodeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageScaleType, com.facebook.fresco.vito.options.DecodedImageOptions.mBorderOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRoundingOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mResizeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mBitmapConfig, com.facebook.fresco.vito.options.DecodedImageOptions.mPostprocessor, com.facebook.fresco.vito.options.DecodedImageOptions.mProgressiveDecodingEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageFocusPoint, com.facebook.fresco.vito.options.DecodedImageOptions.mRotationOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRotationOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRoundingOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mPostprocessor, com.facebook.fresco.vito.options.DecodedImageOptions.mBorderOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mLocalThumbnailPreviewsEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mProgressiveDecodingEnabled], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.areLocalThumbnailPreviewsEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getBorderOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.datasource.BaseBitmapReferenceDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameInfo(int)', targetType='com.facebook.animated.gif.GifFrame'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object)', targetType='com.facebook.imagepipeline.debug.FlipperCacheKeyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.hashCode(), com.facebook.fresco.vito.options.ImageOptions.extend(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType(), com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable(), com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions(), com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs(), com.facebook.fresco.vito.options.ImageOptions.toString(), com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes(), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport(), com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType(), com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory(), com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable(), com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType(), com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable(), com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage)', targetType='com.facebook.imagepipeline.decoder.ImageDecoderConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)', targetType='com.facebook.drawee.view.DraweeHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      } ]
    } ]
  }, {
    "solutionId" : "62a93026-5144-4439-acc0-5dc996a7c25c",
    "objectives" : {
      "NumberOfConcerns" : 0.99609375,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.5743137716525782,
      "MetricsIntensity" : 0.05710433562999201,
      "Density" : 0.9932721712538226
    },
    "euclideanDistance" : 44.026263634090434,
    "generation" : 0,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7465753424657535,
      "LackOfCohesion" : 0.5743137716525782,
      "MetricsIntensity" : 0.05710433562999201,
      "Density" : 3.3041709053916586,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.datasource.BaseBitmapReferenceDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING, com.facebook.animated.gif.GifImage.mNativeContext], extractedMethods=[com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.nativeGetDuration(), com.facebook.animated.gif.GifImage.nativeDispose(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.nativeGetWidth(), com.facebook.animated.gif.GifImage.nativeGetHeight()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object)', targetType='com.facebook.imagepipeline.debug.FlipperCacheKeyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType()', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.hashCode()', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory()', targetType='com.facebook.imagepipeline.animated.base.AnimatedImageResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable()', targetType='com.facebook.imagepipeline.listener.BaseRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport()', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec.Data'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately()', targetType='com.facebook.imagepipeline.producers.FetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.toString()', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions)', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.defaults()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.create()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "5db67da3-3b0b-4f45-9d32-5aab3498b9e2",
    "objectives" : {
      "NumberOfConcerns" : 0.9955357142857143,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.5763780679793368,
      "MetricsIntensity" : 0.056964671603208096,
      "Density" : 0.9960244648318043
    },
    "euclideanDistance" : 44.02633998805738,
    "generation" : 0,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7438905180840665,
      "LackOfCohesion" : 0.5763780679793368,
      "MetricsIntensity" : 0.056964671603208096,
      "Density" : 3.3133265513733465,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions)', targetType='com.facebook.samples.animation2.bitmap.ExampleBitmapAnimationFactory.ColorListAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.configs.uil.SampleUilFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.imagepipeline.postprocessors.RoundAsCirclePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadii, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadius], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners(), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.mDecodeBitmapConfig, com.facebook.animated.gif.GifImage.sInitialized, com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING], extractedMethods=[com.facebook.animated.gif.GifImage.decodeFromNativeMemory(long, int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.nativeCreateFromDirectByteBuffer(ByteBuffer, int, boolean), com.facebook.animated.gif.GifImage.nativeCreateFromNativeMemory(long, int, int, boolean), com.facebook.animated.gif.GifImage.ensure(), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.getWidth(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.getSizeInBytes(), com.facebook.animated.gif.GifImage.createFromByteArray(byte[]), com.facebook.animated.gif.GifImage.getLoopCount(), com.facebook.animated.gif.GifImage.getFrame(int), com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer, ImageDecodeOptions), com.facebook.animated.gif.GifImage.finalize(), com.facebook.animated.gif.GifImage.getFrameCount(), com.facebook.animated.gif.GifImage.getFrameDurations(), com.facebook.animated.gif.GifImage.createFromNativeMemory(long, int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.createFromFileDescriptor(int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.getFrameInfo(int), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.decodeFromByteBuffer(ByteBuffer, ImageDecodeOptions), com.facebook.animated.gif.GifImage.doesRenderSupportScaling(), com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable), com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo), com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object), com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType()', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.hashCode()', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory()', targetType='com.facebook.imagepipeline.animated.base.AnimatedImageResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable()', targetType='com.facebook.imagepipeline.listener.BaseRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport()', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec.Data'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately()', targetType='com.facebook.imagepipeline.producers.FetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.toString()', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions)', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.defaults()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.create()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage)', targetType='com.facebook.imagepipeline.decoder.ImageDecoderConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "0e900373-2589-4fb8-86f5-b0fe96c08c94",
    "objectives" : {
      "NumberOfConcerns" : 0.9977678571428571,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.5753520039028684,
      "MetricsIntensity" : 0.05710680934675145,
      "Density" : 0.999388379204893
    },
    "euclideanDistance" : 47.02476591058488,
    "generation" : 0,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7495107632093934,
      "LackOfCohesion" : 0.5753520039028684,
      "MetricsIntensity" : 0.05710680934675145,
      "Density" : 3.327902240325866,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.transcoder.DownsampleUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.Fresco.TAG', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBorderOptions()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.memory.BasePool.InvalidSizeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.areLocalThumbnailPreviewsEnabled()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.SingleUsePostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.cache.disk.DynamicDefaultDiskStorage.State'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.fresco.samples.showcase.postprocessor.BenchmarkPostprocessorForManualBitmapHandling'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toStringHelper()', targetType='com.facebook.samples.animation2.color.SimpleColorFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.listener.BaseRequestListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.animated.gif.GifImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.animated.gif.GifImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions)', targetType='com.facebook.animated.gif.GifImage'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.datasource.BaseBitmapReferenceDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING, com.facebook.animated.gif.GifImage.mNativeContext], extractedMethods=[com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.nativeGetDuration(), com.facebook.animated.gif.GifImage.nativeDispose(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.nativeGetWidth(), com.facebook.animated.gif.GifImage.nativeGetHeight()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object)', targetType='com.facebook.imagepipeline.debug.FlipperCacheKeyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.extend()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage)', targetType='com.facebook.imagepipeline.decoder.ImageDecoderConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "dd83913c-a02d-4baa-b58f-baae64857329",
    "objectives" : {
      "NumberOfConcerns" : 0.9944196428571429,
      "NumberOfRefactorings" : 49.0,
      "LackOfCohesion" : 0.5750938636160309,
      "MetricsIntensity" : 0.05716306525801877,
      "Density" : 0.9917431192660551
    },
    "euclideanDistance" : 49.023529303883365,
    "generation" : 0,
    "numberOfRefactorings" : 49,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7453476983349654,
      "LackOfCohesion" : 0.5750938636160309,
      "MetricsIntensity" : 0.05716306525801877,
      "Density" : 3.302443991853361,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.datasource.BaseBitmapReferenceDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.mDecodeBitmapConfig, com.facebook.animated.gif.GifImage.sInitialized, com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING], extractedMethods=[com.facebook.animated.gif.GifImage.decodeFromNativeMemory(long, int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.nativeCreateFromDirectByteBuffer(ByteBuffer, int, boolean), com.facebook.animated.gif.GifImage.nativeCreateFromNativeMemory(long, int, int, boolean), com.facebook.animated.gif.GifImage.ensure(), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.getWidth(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.getSizeInBytes(), com.facebook.animated.gif.GifImage.createFromByteArray(byte[]), com.facebook.animated.gif.GifImage.getLoopCount(), com.facebook.animated.gif.GifImage.getFrame(int), com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer, ImageDecodeOptions), com.facebook.animated.gif.GifImage.finalize(), com.facebook.animated.gif.GifImage.getFrameCount(), com.facebook.animated.gif.GifImage.getFrameDurations(), com.facebook.animated.gif.GifImage.createFromNativeMemory(long, int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.createFromFileDescriptor(int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.getFrameInfo(int), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.decodeFromByteBuffer(ByteBuffer, ImageDecodeOptions), com.facebook.animated.gif.GifImage.doesRenderSupportScaling(), com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object)', targetType='com.facebook.imagepipeline.debug.FlipperCacheKeyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType()', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.hashCode()', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory()', targetType='com.facebook.imagepipeline.animated.base.AnimatedImageResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable()', targetType='com.facebook.imagepipeline.listener.BaseRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport()', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec.Data'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately()', targetType='com.facebook.imagepipeline.producers.FetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.toString()', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions)', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.defaults()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.create()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage)', targetType='com.facebook.imagepipeline.decoder.ImageDecoderConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "5f5c3315-efb0-43a1-ba91-4938087985aa",
    "objectives" : {
      "NumberOfConcerns" : 0.99609375,
      "NumberOfRefactorings" : 51.0,
      "LackOfCohesion" : 0.5757227082694478,
      "MetricsIntensity" : 0.057097812125418555,
      "Density" : 0.9908256880733946
    },
    "euclideanDistance" : 51.022628853283344,
    "generation" : 0,
    "numberOfRefactorings" : 51,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7448680351906156,
      "LackOfCohesion" : 0.5757227082694478,
      "MetricsIntensity" : 0.057097812125418555,
      "Density" : 3.2960325534079358,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.Fresco.sIsInitialized, com.facebook.drawee.backends.pipeline.Fresco.TAG], extractedMethods=[com.facebook.drawee.backends.pipeline.Fresco.initialize(Context), com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized(), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean), com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline(), com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory(), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions)', targetType='com.facebook.samples.animation2.bitmap.ExampleBitmapAnimationFactory.ColorListAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.configs.uil.SampleUilFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.imagepipeline.postprocessors.RoundAsCirclePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBorderOptions()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.memory.BasePool.InvalidSizeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.areLocalThumbnailPreviewsEnabled()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.SingleUsePostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.cache.disk.DynamicDefaultDiskStorage.State'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.fresco.samples.showcase.postprocessor.BenchmarkPostprocessorForManualBitmapHandling'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toStringHelper()', targetType='com.facebook.samples.animation2.color.SimpleColorFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.listener.BaseRequestListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.animated.gif.GifImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.animated.gif.GifImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions)', targetType='com.facebook.animated.gif.GifImage'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadii, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadius], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners(), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameInfo(int)', targetType='com.facebook.animated.gif.GifFrame'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable), com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo), com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object), com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType()', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.hashCode()', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory()', targetType='com.facebook.imagepipeline.animated.base.AnimatedImageResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable()', targetType='com.facebook.imagepipeline.listener.BaseRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport()', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec.Data'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately()', targetType='com.facebook.imagepipeline.producers.FetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.toString()', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions)', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.defaults()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.create()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "d6797bd4-3ad3-4340-b63e-bcb3789641fd",
    "objectives" : {
      "NumberOfConcerns" : 0.9916294642857143,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.5753756713920457,
      "MetricsIntensity" : 0.05715550402473795,
      "Density" : 0.9941896024464831
    },
    "euclideanDistance" : 55.02096024130188,
    "generation" : 0,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7404505386875613,
      "LackOfCohesion" : 0.5753756713920457,
      "MetricsIntensity" : 0.05715550402473796,
      "Density" : 3.31734693877551,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.transcoder.DownsampleUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.Fresco.TAG', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions)', targetType='com.facebook.samples.animation2.bitmap.ExampleBitmapAnimationFactory.ColorListAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.configs.uil.SampleUilFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.imagepipeline.postprocessors.RoundAsCirclePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBorderOptions()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.memory.BasePool.InvalidSizeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.areLocalThumbnailPreviewsEnabled()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.SingleUsePostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.cache.disk.DynamicDefaultDiskStorage.State'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.fresco.samples.showcase.postprocessor.BenchmarkPostprocessorForManualBitmapHandling'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toStringHelper()', targetType='com.facebook.samples.animation2.color.SimpleColorFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.listener.BaseRequestListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.animated.gif.GifImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.animated.gif.GifImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions)', targetType='com.facebook.animated.gif.GifImage'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.datasource.BaseBitmapReferenceDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.mDecodeBitmapConfig, com.facebook.animated.gif.GifImage.sInitialized, com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING], extractedMethods=[com.facebook.animated.gif.GifImage.decodeFromNativeMemory(long, int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.nativeCreateFromDirectByteBuffer(ByteBuffer, int, boolean), com.facebook.animated.gif.GifImage.nativeCreateFromNativeMemory(long, int, int, boolean), com.facebook.animated.gif.GifImage.ensure(), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.getWidth(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.getSizeInBytes(), com.facebook.animated.gif.GifImage.createFromByteArray(byte[]), com.facebook.animated.gif.GifImage.getLoopCount(), com.facebook.animated.gif.GifImage.getFrame(int), com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer, ImageDecodeOptions), com.facebook.animated.gif.GifImage.finalize(), com.facebook.animated.gif.GifImage.getFrameCount(), com.facebook.animated.gif.GifImage.getFrameDurations(), com.facebook.animated.gif.GifImage.createFromNativeMemory(long, int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.createFromFileDescriptor(int, ImageDecodeOptions), com.facebook.animated.gif.GifImage.getFrameInfo(int), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.decodeFromByteBuffer(ByteBuffer, ImageDecodeOptions), com.facebook.animated.gif.GifImage.doesRenderSupportScaling(), com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object)', targetType='com.facebook.imagepipeline.debug.FlipperCacheKeyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.hashCode(), com.facebook.fresco.vito.options.ImageOptions.extend(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType(), com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable(), com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions(), com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs(), com.facebook.fresco.vito.options.ImageOptions.toString(), com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes(), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport(), com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType(), com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory(), com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable(), com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType(), com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable(), com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage)', targetType='com.facebook.imagepipeline.decoder.ImageDecoderConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "5979d8b1-5f8d-43a2-a10c-8ce34023a9b2",
    "objectives" : {
      "NumberOfConcerns" : 0.9955357142857143,
      "NumberOfRefactorings" : 56.0,
      "LackOfCohesion" : 0.5718817121794599,
      "MetricsIntensity" : 0.05729430048988425,
      "Density" : 0.9923547400611621
    },
    "euclideanDistance" : 56.02058720343919,
    "generation" : 0,
    "numberOfRefactorings" : 56,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7490196078431366,
      "LackOfCohesion" : 0.5718817121794599,
      "MetricsIntensity" : 0.057294300489884244,
      "Density" : 3.307849133537207,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.transcoder.DownsampleUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.Fresco.TAG', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBorderOptions()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.memory.BasePool.InvalidSizeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.areLocalThumbnailPreviewsEnabled()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.SingleUsePostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.cache.disk.DynamicDefaultDiskStorage.State'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.fresco.samples.showcase.postprocessor.BenchmarkPostprocessorForManualBitmapHandling'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toStringHelper()', targetType='com.facebook.samples.animation2.color.SimpleColorFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.listener.BaseRequestListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.animated.gif.GifImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.animated.gif.GifImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions)', targetType='com.facebook.animated.gif.GifImage'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.datasource.BaseBitmapReferenceDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING, com.facebook.animated.gif.GifImage.mNativeContext], extractedMethods=[com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.nativeGetDuration(), com.facebook.animated.gif.GifImage.nativeDispose(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.nativeGetWidth(), com.facebook.animated.gif.GifImage.nativeGetHeight()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object)', targetType='com.facebook.imagepipeline.debug.FlipperCacheKeyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.hashCode(), com.facebook.fresco.vito.options.ImageOptions.extend(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType(), com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable(), com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions(), com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs(), com.facebook.fresco.vito.options.ImageOptions.toString(), com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes(), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport(), com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType(), com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory(), com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable(), com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType(), com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable(), com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage)', targetType='com.facebook.imagepipeline.decoder.ImageDecoderConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)', targetType='com.facebook.drawee.view.DraweeHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      } ]
    } ]
  }, {
    "solutionId" : "f1bcb502-fa67-4ca7-b7b0-ecd989ef2f08",
    "objectives" : {
      "NumberOfConcerns" : 0.9988839285714286,
      "NumberOfRefactorings" : 61.0,
      "LackOfCohesion" : 0.5740934845166731,
      "MetricsIntensity" : 0.05693860142188286,
      "Density" : 1.0
    },
    "euclideanDistance" : 61.0191002427605,
    "generation" : 0,
    "numberOfRefactorings" : 61,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.748046875,
      "LackOfCohesion" : 0.5740934845166731,
      "MetricsIntensity" : 0.05693860142188286,
      "Density" : 3.3197969543147203,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadii, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadius], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners(), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetLoopCount()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.ensure()', targetType='com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.animated.gif.GifImage.sInitialized', targetTypeName='com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.producers.ThrottlingProducer.ThrottlerConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameCount()', targetType='com.facebook.imagepipeline.multiuri.MultiUri'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetFrameCount()', targetType='com.facebook.imagepipeline.multiuri.MultiUri'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeIsAnimated()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.isAnimated()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeFinalize()', targetType='com.facebook.imagepipeline.memory.GenericByteArrayPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.finalize()', targetType='com.facebook.imagepipeline.memory.GenericByteArrayPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameInfo(int)', targetType='com.facebook.animated.giflite.draw.MovieFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int)', targetType='com.facebook.animated.giflite.draw.MovieFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getSizeInBytes()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetSizeInBytes()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.decodeFromNativeMemory(long, int, ImageDecodeOptions)', targetType='com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeCreateFromNativeMemory(long, int, int, boolean)', targetType='com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeCreateFromDirectByteBuffer(ByteBuffer, int, boolean)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getWidth()', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameDurations()', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromNativeMemory(long, int, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetFrameDurations()', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrame(int)', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.decodeFromByteBuffer(ByteBuffer, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromFileDescriptor(int, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromByteArray(byte[])', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getLoopCount()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER', targetTypeName='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING', targetTypeName='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable), com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo), com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object), com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType()', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.hashCode()', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory()', targetType='com.facebook.imagepipeline.animated.base.AnimatedImageResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable()', targetType='com.facebook.imagepipeline.listener.BaseRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport()', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec.Data'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately()', targetType='com.facebook.imagepipeline.producers.FetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.toString()', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions)', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.defaults()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.create()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "15ae7493-7b7b-423b-a2c7-2f139dda1daa",
    "objectives" : {
      "NumberOfConcerns" : 0.9905133928571429,
      "NumberOfRefactorings" : 62.0,
      "LackOfCohesion" : 0.5766060681349996,
      "MetricsIntensity" : 0.05731810197717584,
      "Density" : 0.9856269113149847
    },
    "euclideanDistance" : 62.01845158589791,
    "generation" : 0,
    "numberOfRefactorings" : 62,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7401960784313717,
      "LackOfCohesion" : 0.5766060681349996,
      "MetricsIntensity" : 0.05731810197717584,
      "Density" : 3.285423037716616,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.transcoder.DownsampleUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.Fresco.TAG', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions)', targetType='com.facebook.samples.animation2.bitmap.ExampleBitmapAnimationFactory.ColorListAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.configs.uil.SampleUilFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.imagepipeline.postprocessors.RoundAsCirclePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadii, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadius], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners(), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER, com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING, com.facebook.animated.gif.GifImage.mNativeContext], extractedMethods=[com.facebook.animated.gif.GifImage.nativeGetLoopCount(), com.facebook.animated.gif.GifImage.nativeGetFrame(int), com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int), com.facebook.animated.gif.GifImage.nativeIsAnimated(), com.facebook.animated.gif.GifImage.isAnimated(), com.facebook.animated.gif.GifImage.nativeGetFrameCount(), com.facebook.animated.gif.GifImage.nativeGetFrameDurations(), com.facebook.animated.gif.GifImage.nativeGetDuration(), com.facebook.animated.gif.GifImage.nativeDispose(), com.facebook.animated.gif.GifImage.nativeGetSizeInBytes(), com.facebook.animated.gif.GifImage.nativeFinalize(), com.facebook.animated.gif.GifImage.nativeGetWidth(), com.facebook.animated.gif.GifImage.nativeGetHeight()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object)', targetType='com.facebook.imagepipeline.debug.FlipperCacheKeyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType()', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.hashCode()', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory()', targetType='com.facebook.imagepipeline.animated.base.AnimatedImageResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable()', targetType='com.facebook.imagepipeline.listener.BaseRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport()', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec.Data'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately()', targetType='com.facebook.imagepipeline.producers.FetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.toString()', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions)', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.defaults()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.create()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage)', targetType='com.facebook.imagepipeline.decoder.ImageDecoderConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)', targetType='com.facebook.drawee.view.DraweeHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      } ]
    } ]
  }, {
    "solutionId" : "c1e4aeba-02f8-4916-9e6f-0489f41c3693",
    "objectives" : {
      "NumberOfConcerns" : 0.9994419642857143,
      "NumberOfRefactorings" : 62.0,
      "LackOfCohesion" : 0.5755062677274927,
      "MetricsIntensity" : 0.057062046558122234,
      "Density" : 0.9951070336391438
    },
    "euclideanDistance" : 62.01873576420052,
    "generation" : 0,
    "numberOfRefactorings" : 62,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7507331378299122,
      "LackOfCohesion" : 0.5755062677274927,
      "MetricsIntensity" : 0.05706204655812225,
      "Density" : 3.3102746693794507,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.Fresco.sIsInitialized, com.facebook.drawee.backends.pipeline.Fresco.TAG], extractedMethods=[com.facebook.drawee.backends.pipeline.Fresco.initialize(Context), com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized(), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean), com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline(), com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory(), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBorderOptions()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.memory.BasePool.InvalidSizeException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.areLocalThumbnailPreviewsEnabled()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.SingleUsePostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.cache.disk.DynamicDefaultDiskStorage.State'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.fresco.samples.showcase.postprocessor.BenchmarkPostprocessorForManualBitmapHandling'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toStringHelper()', targetType='com.facebook.samples.animation2.color.SimpleColorFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.listener.BaseRequestListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.animated.gif.GifImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.animated.gif.GifImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions)', targetType='com.facebook.animated.gif.GifImage'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadii, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadius], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners(), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetLoopCount()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.ensure()', targetType='com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.animated.gif.GifImage.sInitialized', targetTypeName='com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.producers.ThrottlingProducer.ThrottlerConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameCount()', targetType='com.facebook.imagepipeline.multiuri.MultiUri'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetFrameCount()', targetType='com.facebook.imagepipeline.multiuri.MultiUri'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeIsAnimated()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.isAnimated()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeFinalize()', targetType='com.facebook.imagepipeline.memory.GenericByteArrayPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.finalize()', targetType='com.facebook.imagepipeline.memory.GenericByteArrayPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameInfo(int)', targetType='com.facebook.animated.giflite.draw.MovieFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int)', targetType='com.facebook.animated.giflite.draw.MovieFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getSizeInBytes()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetSizeInBytes()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.decodeFromNativeMemory(long, int, ImageDecodeOptions)', targetType='com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeCreateFromNativeMemory(long, int, int, boolean)', targetType='com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeCreateFromDirectByteBuffer(ByteBuffer, int, boolean)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getWidth()', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameDurations()', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromNativeMemory(long, int, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetFrameDurations()', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrame(int)', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.decodeFromByteBuffer(ByteBuffer, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromFileDescriptor(int, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromByteArray(byte[])', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getLoopCount()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER', targetTypeName='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING', targetTypeName='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object)', targetType='com.facebook.imagepipeline.debug.FlipperCacheKeyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.hashCode(), com.facebook.fresco.vito.options.ImageOptions.extend(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType(), com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable(), com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions(), com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs(), com.facebook.fresco.vito.options.ImageOptions.toString(), com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately(), com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes(), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport(), com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType(), com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory(), com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable(), com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType(), com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable(), com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage)', targetType='com.facebook.imagepipeline.decoder.ImageDecoderConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "84d1ec8d-2c98-45f8-8853-f76dd24e1f34",
    "objectives" : {
      "NumberOfConcerns" : 0.9910714285714286,
      "NumberOfRefactorings" : 63.0,
      "LackOfCohesion" : 0.5663159281329565,
      "MetricsIntensity" : 0.05702657797403899,
      "Density" : 0.9938837920489296
    },
    "euclideanDistance" : 63.01820366631915,
    "generation" : 0,
    "numberOfRefactorings" : 63,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7394711067580804,
      "LackOfCohesion" : 0.5663159281329565,
      "MetricsIntensity" : 0.05702657797403899,
      "Density" : 3.309572301425662,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.imagepipeline.core.ImagePipelineFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions)', targetType='com.facebook.samples.animation2.bitmap.ExampleBitmapAnimationFactory.ColorListAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.configs.uil.SampleUilFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.imagepipeline.postprocessors.RoundAsCirclePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.PoolConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.datasource.BaseBitmapReferenceDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.debug.LruMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.imagepipeline.memory.BitmapCounterProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetLoopCount()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.ensure()', targetType='com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.animated.gif.GifImage.sInitialized', targetTypeName='com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.producers.ThrottlingProducer.ThrottlerConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameCount()', targetType='com.facebook.imagepipeline.multiuri.MultiUri'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetFrameCount()', targetType='com.facebook.imagepipeline.multiuri.MultiUri'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeIsAnimated()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.isAnimated()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeFinalize()', targetType='com.facebook.imagepipeline.memory.GenericByteArrayPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.finalize()', targetType='com.facebook.imagepipeline.memory.GenericByteArrayPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameInfo(int)', targetType='com.facebook.animated.giflite.draw.MovieFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int)', targetType='com.facebook.animated.giflite.draw.MovieFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getSizeInBytes()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetSizeInBytes()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.decodeFromNativeMemory(long, int, ImageDecodeOptions)', targetType='com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeCreateFromNativeMemory(long, int, int, boolean)', targetType='com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeCreateFromDirectByteBuffer(ByteBuffer, int, boolean)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getWidth()', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameDurations()', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromNativeMemory(long, int, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetFrameDurations()', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrame(int)', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.decodeFromByteBuffer(ByteBuffer, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromFileDescriptor(int, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromByteArray(byte[])', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getLoopCount()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER', targetTypeName='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING', targetTypeName='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable), com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo), com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object), com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.ImageOptions.sDefaultImageOptions], extractedMethods=[com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.defaults(), com.facebook.fresco.vito.options.ImageOptions.create(), com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions), com.facebook.fresco.vito.options.ImageOptions.extend()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)', targetType='com.facebook.drawee.view.DraweeHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      } ]
    } ]
  }, {
    "solutionId" : "ccfde38b-11d7-4b1c-97fb-8c4066002cdb",
    "objectives" : {
      "NumberOfConcerns" : 0.99609375,
      "NumberOfRefactorings" : 74.0,
      "LackOfCohesion" : 0.5754085561878637,
      "MetricsIntensity" : 0.05715658141834891,
      "Density" : 0.9892966360856269
    },
    "euclideanDistance" : 74.01557452640824,
    "generation" : 0,
    "numberOfRefactorings" : 74,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7465753424657535,
      "LackOfCohesion" : 0.5754085561878637,
      "MetricsIntensity" : 0.057156581418348916,
      "Density" : 3.290946083418109,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.transcoder.DownsampleUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.Fresco.TAG', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mBitmapConfig, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageScaleType, com.facebook.fresco.vito.options.DecodedImageOptions.mImageDecodeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mResizeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mLocalThumbnailPreviewsEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mImageDecodeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageScaleType, com.facebook.fresco.vito.options.DecodedImageOptions.mBorderOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRoundingOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mResizeOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mBitmapConfig, com.facebook.fresco.vito.options.DecodedImageOptions.mPostprocessor, com.facebook.fresco.vito.options.DecodedImageOptions.mProgressiveDecodingEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mActualImageFocusPoint, com.facebook.fresco.vito.options.DecodedImageOptions.mRotationOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRotationOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mRoundingOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mPostprocessor, com.facebook.fresco.vito.options.DecodedImageOptions.mBorderOptions, com.facebook.fresco.vito.options.DecodedImageOptions.mLocalThumbnailPreviewsEnabled, com.facebook.fresco.vito.options.DecodedImageOptions.mProgressiveDecodingEnabled], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.areLocalThumbnailPreviewsEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getBorderOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadii, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadius], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners(), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetLoopCount()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.ensure()', targetType='com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.animated.gif.GifImage.sInitialized', targetTypeName='com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.producers.ThrottlingProducer.ThrottlerConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameCount()', targetType='com.facebook.imagepipeline.multiuri.MultiUri'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetFrameCount()', targetType='com.facebook.imagepipeline.multiuri.MultiUri'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeIsAnimated()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.isAnimated()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeFinalize()', targetType='com.facebook.imagepipeline.memory.GenericByteArrayPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.finalize()', targetType='com.facebook.imagepipeline.memory.GenericByteArrayPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameInfo(int)', targetType='com.facebook.animated.giflite.draw.MovieFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int)', targetType='com.facebook.animated.giflite.draw.MovieFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getSizeInBytes()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetSizeInBytes()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.decodeFromNativeMemory(long, int, ImageDecodeOptions)', targetType='com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeCreateFromNativeMemory(long, int, int, boolean)', targetType='com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeCreateFromDirectByteBuffer(ByteBuffer, int, boolean)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getWidth()', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameDurations()', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromNativeMemory(long, int, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetFrameDurations()', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrame(int)', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.decodeFromByteBuffer(ByteBuffer, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromFileDescriptor(int, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromByteArray(byte[])', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getLoopCount()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER', targetTypeName='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING', targetTypeName='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object)', targetType='com.facebook.imagepipeline.debug.FlipperCacheKeyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener)', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)', targetType='com.facebook.fresco.samples.showcase.postprocessor.WatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType()', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.hashCode()', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory()', targetType='com.facebook.imagepipeline.animated.base.AnimatedImageResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable()', targetType='com.facebook.imagepipeline.listener.BaseRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport()', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec.Data'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately()', targetType='com.facebook.imagepipeline.producers.FetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.toString()', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions)', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.defaults()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.create()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE, com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage), com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastBitmapReference, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "f7c145ae-1bda-47f1-8582-8671c74fe334",
    "objectives" : {
      "NumberOfConcerns" : 0.9933035714285714,
      "NumberOfRefactorings" : 80.0,
      "LackOfCohesion" : 0.5739708251565112,
      "MetricsIntensity" : 0.05713699976186249,
      "Density" : 0.9972477064220183
    },
    "euclideanDistance" : 80.01446033135417,
    "generation" : 0,
    "numberOfRefactorings" : 80,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7416829745596867,
      "LackOfCohesion" : 0.5739708251565112,
      "MetricsIntensity" : 0.0571369997618625,
      "Density" : 3.317395727365208,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.Fresco.sIsInitialized, com.facebook.drawee.backends.pipeline.Fresco.TAG], extractedMethods=[com.facebook.drawee.backends.pipeline.Fresco.initialize(Context), com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized(), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean), com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline(), com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory(), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig), com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions)', targetType='com.facebook.samples.animation2.bitmap.ExampleBitmapAnimationFactory.ColorListAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.configs.uil.SampleUilFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.imagepipeline.postprocessors.RoundAsCirclePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.utils.AnimationBackendUtils'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadii, com.facebook.fresco.vito.options.RoundingOptions.mCornerRadius], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners(), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetLoopCount()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.ensure()', targetType='com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.animated.gif.GifImage.sInitialized', targetTypeName='com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.producers.ThrottlingProducer.ThrottlerConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameCount()', targetType='com.facebook.imagepipeline.multiuri.MultiUri'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetFrameCount()', targetType='com.facebook.imagepipeline.multiuri.MultiUri'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeIsAnimated()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.isAnimated()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeFinalize()', targetType='com.facebook.imagepipeline.memory.GenericByteArrayPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.finalize()', targetType='com.facebook.imagepipeline.memory.GenericByteArrayPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameInfo(int)', targetType='com.facebook.animated.giflite.draw.MovieFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int)', targetType='com.facebook.animated.giflite.draw.MovieFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getSizeInBytes()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetSizeInBytes()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.decodeFromNativeMemory(long, int, ImageDecodeOptions)', targetType='com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeCreateFromNativeMemory(long, int, int, boolean)', targetType='com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeCreateFromDirectByteBuffer(ByteBuffer, int, boolean)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetFrame(int)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer)', targetType='com.facebook.common.util.SecureHashUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getWidth()', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameDurations()', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromNativeMemory(long, int, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetFrameDurations()', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrame(int)', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.decodeFromByteBuffer(ByteBuffer, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromFileDescriptor(int, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromByteArray(byte[])', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getLoopCount()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer, ImageDecodeOptions)', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER', targetTypeName='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING', targetTypeName='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable), com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener), com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo), com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object), com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType()', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.hashCode()', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory()', targetType='com.facebook.imagepipeline.animated.base.AnimatedImageResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable()', targetType='com.facebook.imagepipeline.listener.BaseRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport()', targetType='com.facebook.fresco.samples.showcase.vito.SimpleListSectionSpec.Data'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately()', targetType='com.facebook.imagepipeline.producers.FetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.toString()', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter()', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions)', targetType='com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions()', targetType='com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.defaults()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.create()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs()', targetType='com.facebook.samples.animation2.bitmap.NaiveCacheAllFramesCachingBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage)', targetType='com.facebook.imagepipeline.decoder.ImageDecoderConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE', targetTypeName='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)', targetType='com.facebook.drawee.view.DraweeHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer'"
      } ]
    } ]
  }, {
    "solutionId" : "09fa0a54-6e2b-4af2-a466-6d65df0a9fe6",
    "objectives" : {
      "NumberOfConcerns" : 0.9849330357142857,
      "NumberOfRefactorings" : 113.0,
      "LackOfCohesion" : 0.5760387292120007,
      "MetricsIntensity" : 0.05755435746404759,
      "Density" : 0.9853211009174312
    },
    "euclideanDistance" : 113.01007071884509,
    "generation" : 0,
    "numberOfRefactorings" : 113,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7337917485265226,
      "LackOfCohesion" : 0.5760387292120007,
      "MetricsIntensity" : 0.05755435746404759,
      "Density" : 3.2978505629477994,
      "baselineType" : "CONCERN_MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.Fresco",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipeline()', targetType='com.facebook.imagepipeline.producers.ThreadHandoffProducerQueueImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized()', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.getImagePipelineFactory()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context)', targetType='com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.Fresco.initialize(Context, ImagePipelineConfig, DraweeConfig, boolean)', targetType='com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.Fresco.TAG', targetTypeName='com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions)', targetType='com.facebook.fresco.vito.core.impl.FrescoVitoPrefetcherImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.cache.common.CacheKeyUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.common.activitylistener.ActivityListenerManager.Listener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.common.activitylistener.ActivityListenerManager.Listener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithBorder(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBorderOptions()', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.areLocalThumbnailPreviewsEnabled()', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.samples.scrollperf.util.TimeWaster'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.cache.disk.DynamicDefaultDiskStorage.State'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.fresco.samples.showcase.postprocessor.BenchmarkPostprocessorForDuplicatedBitmap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toStringHelper()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.fresco.samples.showcase.common.CustomScaleTypes.ScaleTypeFitY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.memory.BitmapCounter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.imagepipeline.producers.ResizeAndRotateProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.ResizeAndRotateProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions)', targetType='com.facebook.imagepipeline.producers.ResizeAndRotateProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.samples.comparison.configs.uil.SampleUilFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.animated.giflite.draw.MovieFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.listener.ForwardingRequestListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.decoder.ImageDecoderConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.imagepipeline.decoder.ImageDecoderConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.imagepipeline.decoder.ImageDecoderConfig'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.animated.gif.GifImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetLoopCount()', targetType='com.facebook.common.webp.WebpSupportStatus'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.ensure()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.animated.gif.GifImage.sInitialized', targetTypeName='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameCount()', targetType='com.facebook.drawee.backends.pipeline.info.ImageOriginRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetFrameCount()', targetType='com.facebook.drawee.backends.pipeline.info.ImageOriginRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeIsAnimated()', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.isAnimated()', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeFinalize()', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.finalize()', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameInfo(int)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.fromGifDisposalMethod(int)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getSizeInBytes()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetSizeInBytes()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.decodeFromNativeMemory(long, int, ImageDecodeOptions)', targetType='com.facebook.imagepipeline.memory.BitmapCounterConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeCreateFromNativeMemory(long, int, int, boolean)', targetType='com.facebook.imagepipeline.memory.BitmapCounterConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeCreateFromDirectByteBuffer(ByteBuffer, int, boolean)', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetFrame(int)', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer)', targetType='com.facebook.imagepipeline.producers.DiskCacheReadProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getWidth()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRecyclerViewFragment.SimpleViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrameDurations()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRecyclerViewFragment.SimpleViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromNativeMemory(long, int, ImageDecodeOptions)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRecyclerViewFragment.SimpleViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.nativeGetFrameDurations()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRecyclerViewFragment.SimpleViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getFrame(int)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRecyclerViewFragment.SimpleViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.decodeFromByteBuffer(ByteBuffer, ImageDecodeOptions)', targetType='com.facebook.animated.webp.WebPImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromFileDescriptor(int, ImageDecodeOptions)', targetType='com.facebook.animated.webp.WebPImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromByteArray(byte[])', targetType='com.facebook.animated.webp.WebPImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.getLoopCount()', targetType='com.facebook.animated.webp.WebPImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.gif.GifImage.createFromByteBuffer(ByteBuffer, ImageDecodeOptions)', targetType='com.facebook.animated.webp.WebPImage'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.animated.gif.GifImage.LOOP_COUNT_FOREVER', targetTypeName='com.facebook.animated.webp.WebPImage'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.animated.gif.GifImage.LOOP_COUNT_MISSING', targetTypeName='com.facebook.animated.webp.WebPImage'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.listener.ForwardingImageListener",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onSubmit(long, Object)', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2.DebugOverlayDrawableWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener, ImageListener)', targetType='com.facebook.fresco.vito.core.impl.DefaultImageDecodeOptionsProviderImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.create(ImageListener, ImageListener)', targetType='com.facebook.fresco.vito.core.impl.DefaultImageDecodeOptionsProviderImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onFinalImageSet(long, int, ImageInfo, Drawable)', targetType='com.facebook.imagepipeline.memory.BitmapCounter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onImageDrawn(String, ImageInfo, DimensionsInfo)', targetType='com.facebook.imagepipeline.memory.BitmapCounter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.listener.ForwardingImageListener.onIntermediateImageSet(long, ImageInfo)', targetType='com.facebook.imagepipeline.memory.BitmapCounter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.ImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressScaleType()', targetType='com.facebook.imagepipeline.producers.JobScheduler.JobStartExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.hashCode()', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getCustomDrawableFactory()', targetType='com.facebook.drawee.drawable.DrawableUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getOverlayDrawable()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorDrawable()', targetType='com.facebook.fresco.animation.frame.DropFramesFrameScheduler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldResizeToViewport()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgPictureDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAlwaysShowProgressImmediately()', targetType='com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.setDefaults(ImageOptions)', targetType='com.facebook.fresco.vito.drawable.RoundingUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.toString()', targetType='com.facebook.fresco.vito.drawable.RoundingUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getActualImageColorFilter()', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.extend(ImageOptions)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsRequestBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderScaleType()', targetType='com.facebook.samples.scrollperf.data.impl.InfiniteSimpleAdapterTest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.shouldAutoPlay()', targetType='com.facebook.samples.scrollperf.data.impl.InfiniteSimpleAdapterTest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getErrorScaleType()', targetType='com.facebook.samples.scrollperf.data.impl.InfiniteSimpleAdapterTest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderRes()', targetType='com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderDrawable()', targetType='com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getPlaceholderApplyRoundingOptions()', targetType='com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.defaults()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.create()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getProgressDrawable()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.ImageOptions.getFadeDurationMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.PartialDiskCacheProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.startInputProducer(Consumer<EncodedImage>, ProducerContext, CacheKey, EncodedImage)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.subscribeTaskForRequestCancellation(AtomicBoolean, ProducerContext)', targetType='com.facebook.common.internal.ImmutableMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.getExtraMap(ProducerListener2, ProducerContext, boolean, int)', targetType='com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.onFinishDiskReads(Consumer<EncodedImage>, ProducerContext, CacheKey)', targetType='com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.EXTRA_CACHED_VALUE_FOUND', targetTypeName='com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.PartialDiskCacheProducer.ENCODED_IMAGE_SIZE', targetTypeName='com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.common.time.AwakeTimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.samples.animation2.bitmap.ExampleBitmapAnimationFactory.ColorListAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFramePrepared(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.contains(int)', targetType='com.facebook.common.media.MediaUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDrawableFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDrawableFactory'"
      } ]
    } ]
  } ]
}