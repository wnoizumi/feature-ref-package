{
  "executionId" : "07e445d4-68ae-49d7-bd84-2b2dd9682aae",
  "computingTime" : 4590,
  "maxEvaluations" : 1000,
  "initialPopulationSize" : 50,
  "finalPopulationSize" : 34,
  "algorithm" : "Baseline",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.384851586489252,
    "meanNumConcerns" : 1.773084479371316,
    "meanMetricsIntensity" : 0.0572971415616704,
    "meanLackOfCohesion" : 0.5657915280402931
  },
  "population" : [ {
    "solutionId" : "64e1e24a-6177-42b5-bde4-8bd7ad1aed42",
    "objectives" : {
      "NumberOfConcerns" : 1.0049861495844876,
      "NumberOfRefactorings" : 5.0,
      "LackOfCohesion" : 0.5694413132585019,
      "MetricsIntensity" : 0.05689099483959825,
      "Density" : 1.001814333232537
    },
    "euclideanDistance" : 5.228874555166361,
    "generation" : 0,
    "numberOfRefactorings" : 5,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7732160312805474,
      "LackOfCohesion" : 0.5694413132585019,
      "MetricsIntensity" : 0.05689099483959826,
      "Density" : 3.373727087576375,
      "baselineType" : "EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "4c244c23-88e4-43e3-877c-193f252b29ae",
    "objectives" : {
      "NumberOfConcerns" : 1.0083102493074791,
      "NumberOfRefactorings" : 8.0,
      "LackOfCohesion" : 0.5662823487378724,
      "MetricsIntensity" : 0.056590170937612434,
      "Density" : 1.0063501663138796
    },
    "euclideanDistance" : 8.145754008195762,
    "generation" : 0,
    "numberOfRefactorings" : 8,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7738791423001947,
      "LackOfCohesion" : 0.5662823487378724,
      "MetricsIntensity" : 0.05659017093761245,
      "Density" : 3.382113821138211,
      "baselineType" : "CONCERN_EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "f0322e98-3fd5-4511-8e0f-5157add72cfa",
    "objectives" : {
      "NumberOfConcerns" : 1.005540166204986,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.5699737572688511,
      "MetricsIntensity" : 0.05674553175111262,
      "Density" : 1.0021167221046265
    },
    "euclideanDistance" : 12.09724923649679,
    "generation" : 0,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7724609375,
      "LackOfCohesion" : 0.5699737572688511,
      "MetricsIntensity" : 0.05674553175111261,
      "Density" : 3.371312309257375,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.BaseNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.datasource.DataSources'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "4a7e1bb0-789c-441c-a3d3-e78df8f18db4",
    "objectives" : {
      "NumberOfConcerns" : 1.0066481994459833,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.5654716474931752,
      "MetricsIntensity" : 0.05669830452499959,
      "Density" : 1.0060477774417902
    },
    "euclideanDistance" : 12.09745616275579,
    "generation" : 0,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7726829268292683,
      "LackOfCohesion" : 0.5654716474931752,
      "MetricsIntensity" : 0.0566983045249996,
      "Density" : 3.381097560975609,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.BaseNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.datasource.DataSources'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "82ceca8b-a27d-4187-9139-81e09f4bb87b",
    "objectives" : {
      "NumberOfConcerns" : 1.0005540166204987,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.5658309284853026,
      "MetricsIntensity" : 0.057242971461417345,
      "Density" : 0.9996976111279104
    },
    "euclideanDistance" : 17.068214465821622,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7740667976424362,
      "LackOfCohesion" : 0.5658309284853026,
      "MetricsIntensity" : 0.05724297146141735,
      "Density" : 3.3803680981595092,
      "baselineType" : "MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    } ]
  }, {
    "solutionId" : "a66257be-1abf-4c2e-bda1-a3380ac5228c",
    "objectives" : {
      "NumberOfConcerns" : 1.005540166204986,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.5648068370184013,
      "MetricsIntensity" : 0.05675210446528561,
      "Density" : 1.002419110976716
    },
    "euclideanDistance" : 17.06863154047233,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7724609375,
      "LackOfCohesion" : 0.5648068370184013,
      "MetricsIntensity" : 0.05675210446528562,
      "Density" : 3.3757637474541755,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.drawee.controller.ForwardingControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "4ede5f94-3990-48f1-b216-6ea3f562bb82",
    "objectives" : {
      "NumberOfConcerns" : 1.002770083102493,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.5675073632850889,
      "MetricsIntensity" : 0.05693038428738988,
      "Density" : 1.0003023888720894
    },
    "euclideanDistance" : 18.064646644337845,
    "generation" : 0,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7710371819960866,
      "LackOfCohesion" : 0.5675073632850889,
      "MetricsIntensity" : 0.05693038428738988,
      "Density" : 3.3720693170234455,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.scrollperf.util.PipelineUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.BaseNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.datasource.DataSources'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "d0424b83-d2cf-432a-907e-8874116f3b98",
    "objectives" : {
      "NumberOfConcerns" : 1.0077562326869807,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.569350546064791,
      "MetricsIntensity" : 0.05679351162271067,
      "Density" : 1.0063501663138796
    },
    "euclideanDistance" : 19.061891271041972,
    "generation" : 0,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7746341463414634,
      "LackOfCohesion" : 0.569350546064791,
      "MetricsIntensity" : 0.05679351162271068,
      "Density" : 3.382113821138211,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.PoolFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.cache.disk.DiskStorageCache.Params'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoderSoLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.cache.common.CacheKeyUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.vito.options.EncodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "198e1203-3816-40f0-aee8-e92e96a3d0c1",
    "objectives" : {
      "NumberOfConcerns" : 1.0038781163434902,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.5688093357633041,
      "MetricsIntensity" : 0.056764946200725884,
      "Density" : 1.004233444209253
    },
    "euclideanDistance" : 21.055712346119055,
    "generation" : 0,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.76953125,
      "LackOfCohesion" : 0.5688093357633041,
      "MetricsIntensity" : 0.056764946200725884,
      "Density" : 3.3853211009174315,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.BaseNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.datasource.DataSources'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.drawee.controller.ForwardingControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "4606f702-e5ab-45ba-86d7-69fb554d03b0",
    "objectives" : {
      "NumberOfConcerns" : 1.0038781163434902,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.5688503866664241,
      "MetricsIntensity" : 0.056741426660800634,
      "Density" : 1.0048382219534322
    },
    "euclideanDistance" : 21.05574224473414,
    "generation" : 0,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.76953125,
      "LackOfCohesion" : 0.5688503866664241,
      "MetricsIntensity" : 0.05674142666080064,
      "Density" : 3.3873598369011213,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.BaseNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.datasource.DataSources'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.drawee.controller.ForwardingControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "984a43ef-5069-4860-94af-0a21ae31636c",
    "objectives" : {
      "NumberOfConcerns" : 1.004432132963989,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.5692559394367315,
      "MetricsIntensity" : 0.056813257489754174,
      "Density" : 1.002419110976716
    },
    "euclideanDistance" : 25.046776400459052,
    "generation" : 0,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.772238514173998,
      "LackOfCohesion" : 0.5692559394367315,
      "MetricsIntensity" : 0.056813257489754174,
      "Density" : 3.375763747454175,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.postprocessor.SlowGreyScalePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.fresco.samples.showcase.common.CustomScaleTypes.ScaleTypeFitX'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.common.activitylistener.ActivityListenerManager.Listener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.imagepipeline.backends.okhttp3.OkHttpImagePipelineConfigFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      } ]
    } ]
  }, {
    "solutionId" : "957aa830-6ee1-40b6-8c62-d7786f81dbe5",
    "objectives" : {
      "NumberOfConcerns" : 1.0038781163434902,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.5688742041750368,
      "MetricsIntensity" : 0.056899290445700836,
      "Density" : 1.0048382219534322
    },
    "euclideanDistance" : 27.043378607603763,
    "generation" : 0,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7712609970674489,
      "LackOfCohesion" : 0.5688742041750368,
      "MetricsIntensity" : 0.056899290445700836,
      "Density" : 3.387359836901121,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.PoolFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.cache.disk.DiskStorageCache.Params'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoderSoLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.cache.common.CacheKeyUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.vito.options.EncodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.BaseNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.datasource.DataSources'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "c69e3050-35d9-48fd-bd11-53ff74ada7d2",
    "objectives" : {
      "NumberOfConcerns" : 1.0022160664819943,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.5736559359665285,
      "MetricsIntensity" : 0.05690980147514041,
      "Density" : 0.9978832778953735
    },
    "euclideanDistance" : 29.040188152603136,
    "generation" : 0,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7700587084148727,
      "LackOfCohesion" : 0.5736559359665285,
      "MetricsIntensity" : 0.05690980147514041,
      "Density" : 3.36734693877551,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.generic.RoundingParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "20398529-65e0-4b99-8fd1-e2ebc6eeeef6",
    "objectives" : {
      "NumberOfConcerns" : 1.0033240997229917,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.5676442518887064,
      "MetricsIntensity" : 0.05695235735119857,
      "Density" : 1.0039310553371636
    },
    "euclideanDistance" : 29.04031680923377,
    "generation" : 0,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7702834799608995,
      "LackOfCohesion" : 0.5676442518887064,
      "MetricsIntensity" : 0.05695235735119858,
      "Density" : 3.3808553971486766,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.scrollperf.util.PipelineUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.PoolFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.cache.disk.DiskStorageCache.Params'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoderSoLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.cache.common.CacheKeyUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.vito.options.EncodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.BaseNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.datasource.DataSources'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "284d9a9b-35c2-44ef-a3a1-4b1f114d6a6c",
    "objectives" : {
      "NumberOfConcerns" : 1.0022160664819943,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.5685302930922606,
      "MetricsIntensity" : 0.05691747934988176,
      "Density" : 1.0009071666162686
    },
    "euclideanDistance" : 31.037601687207047,
    "generation" : 0,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.770058708414873,
      "LackOfCohesion" : 0.5685302930922606,
      "MetricsIntensity" : 0.05691747934988177,
      "Density" : 3.374108053007136,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.scrollperf.util.PipelineUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.postprocessor.SlowGreyScalePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.fresco.samples.showcase.common.CustomScaleTypes.ScaleTypeFitX'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.common.activitylistener.ActivityListenerManager.Listener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.imagepipeline.backends.okhttp3.OkHttpImagePipelineConfigFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      } ]
    } ]
  }, {
    "solutionId" : "3c5c7350-1c87-4408-b5fe-e511e15d8df1",
    "objectives" : {
      "NumberOfConcerns" : 1.0011080332409972,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.5690105003014753,
      "MetricsIntensity" : 0.0569931682112849,
      "Density" : 0.9990928333837314
    },
    "euclideanDistance" : 38.03061168262502,
    "generation" : 0,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7681017612524466,
      "LackOfCohesion" : 0.5690105003014753,
      "MetricsIntensity" : 0.05699316821128491,
      "Density" : 3.3679918450560655,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.generic.RoundingParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.common.activitylistener.ActivityListenerManager.Listener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.imagepipeline.backends.okhttp3.OkHttpImagePipelineConfigFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      } ]
    } ]
  }, {
    "solutionId" : "85f2b79f-cc84-4579-93f7-6f448e2f0a2f",
    "objectives" : {
      "NumberOfConcerns" : 1.0005540166204987,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.568012106799468,
      "MetricsIntensity" : 0.05706037084841988,
      "Density" : 1.0015119443604474
    },
    "euclideanDistance" : 38.03064590766589,
    "generation" : 0,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.768854064642507,
      "LackOfCohesion" : 0.568012106799468,
      "MetricsIntensity" : 0.05706037084841989,
      "Density" : 3.3830439223697653,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.PoolFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.cache.disk.DiskStorageCache.Params'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoderSoLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.cache.common.CacheKeyUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.vito.options.EncodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.BaseNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.datasource.DataSources'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.postprocessor.SlowGreyScalePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.fresco.samples.showcase.common.CustomScaleTypes.ScaleTypeFitX'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.common.activitylistener.ActivityListenerManager.Listener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.imagepipeline.backends.okhttp3.OkHttpImagePipelineConfigFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      } ]
    } ]
  }, {
    "solutionId" : "6ade7bad-312a-4e66-ba40-2a8075b062d1",
    "objectives" : {
      "NumberOfConcerns" : 1.0016620498614959,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.5740908602517996,
      "MetricsIntensity" : 0.0568521943177081,
      "Density" : 1.0027214998488057
    },
    "euclideanDistance" : 40.029259170714305,
    "generation" : 0,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7673509286412519,
      "LackOfCohesion" : 0.5740908602517996,
      "MetricsIntensity" : 0.05685219431770809,
      "Density" : 3.3836734693877553,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.generic.RoundingParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.drawee.controller.ForwardingControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.postprocessor.SlowGreyScalePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.fresco.samples.showcase.common.CustomScaleTypes.ScaleTypeFitX'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "d1e71874-eda1-4591-ab1c-4fd30236eff7",
    "objectives" : {
      "NumberOfConcerns" : 1.0005540166204987,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.5741710453282306,
      "MetricsIntensity" : 0.05704324173584668,
      "Density" : 0.998185666767463
    },
    "euclideanDistance" : 44.02647395926952,
    "generation" : 0,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.768854064642507,
      "LackOfCohesion" : 0.5741710453282306,
      "MetricsIntensity" : 0.05704324173584667,
      "Density" : 3.371807967313585,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.PoolFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.cache.disk.DiskStorageCache.Params'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoderSoLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.cache.common.CacheKeyUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.vito.options.EncodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.generic.RoundingParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "1cec8f06-ed27-4083-ae01-fa3653e8c5c8",
    "objectives" : {
      "NumberOfConcerns" : 0.9994459833795014,
      "NumberOfRefactorings" : 48.0,
      "LackOfCohesion" : 0.5715815844024587,
      "MetricsIntensity" : 0.05704214668045177,
      "Density" : 0.998185666767463
    },
    "euclideanDistance" : 48.02421499840637,
    "generation" : 0,
    "numberOfRefactorings" : 48,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7668952007835457,
      "LackOfCohesion" : 0.5715815844024587,
      "MetricsIntensity" : 0.057042146680451766,
      "Density" : 3.3683673469387756,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.scrollperf.util.PipelineUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.generic.RoundingParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.drawee.controller.ForwardingControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "f5c85f57-c547-476c-8a79-5acf005dfe33",
    "objectives" : {
      "NumberOfConcerns" : 1.002770083102493,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.5662933811854135,
      "MetricsIntensity" : 0.056961727576669674,
      "Density" : 1.006652555185969
    },
    "euclideanDistance" : 50.0234228141019,
    "generation" : 0,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7710371819960862,
      "LackOfCohesion" : 0.5662933811854135,
      "MetricsIntensity" : 0.05696172757666968,
      "Density" : 3.3900203665987783,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer.EncodedMemoryCacheConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.postprocessor.SlowGreyScalePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.fresco.samples.showcase.common.CustomScaleTypes.ScaleTypeFitX'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "90165334-8324-45c1-b380-9ae70b026494",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 51.0,
      "LackOfCohesion" : 0.5658065760381146,
      "MetricsIntensity" : 0.057018002724214624,
      "Density" : 1.0045358330813425
    },
    "euclideanDistance" : 51.022862330273746,
    "generation" : 0,
    "numberOfRefactorings" : 51,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.76614481409002,
      "LackOfCohesion" : 0.5658065760381146,
      "MetricsIntensity" : 0.057018002724214624,
      "Density" : 3.3863404689092773,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer.EncodedMemoryCacheConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.BaseNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.datasource.DataSources'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.postprocessor.SlowGreyScalePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.fresco.samples.showcase.common.CustomScaleTypes.ScaleTypeFitX'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.common.activitylistener.ActivityListenerManager.Listener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.imagepipeline.backends.okhttp3.OkHttpImagePipelineConfigFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      } ]
    } ]
  }, {
    "solutionId" : "369935f9-7e45-4899-af42-bb1a3352fc9e",
    "objectives" : {
      "NumberOfConcerns" : 0.9988919667590028,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.5663040389770218,
      "MetricsIntensity" : 0.05724444836287139,
      "Density" : 0.999395222255821
    },
    "euclideanDistance" : 55.02109189359071,
    "generation" : 0,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7693817468105988,
      "LackOfCohesion" : 0.5663040389770218,
      "MetricsIntensity" : 0.05724444836287139,
      "Density" : 3.375893769152196,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer.EncodedMemoryCacheConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.common.activitylistener.ActivityListenerManager.Listener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.imagepipeline.backends.okhttp3.OkHttpImagePipelineConfigFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      } ]
    } ]
  }, {
    "solutionId" : "4f33fe75-e52a-4ae2-97dc-fe26bcb2d25b",
    "objectives" : {
      "NumberOfConcerns" : 0.9994459833795014,
      "NumberOfRefactorings" : 61.0,
      "LackOfCohesion" : 0.5727857759888786,
      "MetricsIntensity" : 0.0570906712031949,
      "Density" : 1.0039310553371636
    },
    "euclideanDistance" : 61.01916184877892,
    "generation" : 0,
    "numberOfRefactorings" : 61,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7668952007835454,
      "LackOfCohesion" : 0.5727857759888786,
      "MetricsIntensity" : 0.0570906712031949,
      "Density" : 3.387755102040818,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer.EncodedMemoryCacheConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.generic.RoundingParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.postprocessor.SlowGreyScalePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.fresco.samples.showcase.common.CustomScaleTypes.ScaleTypeFitX'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "5577d781-a954-4755-acfb-851621c80010",
    "objectives" : {
      "NumberOfConcerns" : 0.9939058171745152,
      "NumberOfRefactorings" : 64.0,
      "LackOfCohesion" : 0.5712758477253326,
      "MetricsIntensity" : 0.05725191434351847,
      "Density" : 0.9936498336861204
    },
    "euclideanDistance" : 64.0180038945396,
    "generation" : 0,
    "numberOfRefactorings" : 64,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7605495583905788,
      "LackOfCohesion" : 0.5712758477253326,
      "MetricsIntensity" : 0.05725191434351847,
      "Density" : 3.3668032786885242,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.scrollperf.util.PipelineUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.PoolFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.cache.disk.DiskStorageCache.Params'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoderSoLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.cache.common.CacheKeyUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.vito.options.EncodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.generic.RoundingParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.BaseNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.datasource.DataSources'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.drawee.controller.ForwardingControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.common.activitylistener.ActivityListenerManager.Listener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.imagepipeline.backends.okhttp3.OkHttpImagePipelineConfigFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      } ]
    } ]
  }, {
    "solutionId" : "67d2dd26-c7ca-480e-b749-d8df32b547c9",
    "objectives" : {
      "NumberOfConcerns" : 0.9977839335180055,
      "NumberOfRefactorings" : 65.0,
      "LackOfCohesion" : 0.5687507790072014,
      "MetricsIntensity" : 0.057105820425036695,
      "Density" : 1.004233444209253
    },
    "euclideanDistance" : 65.01792672880151,
    "generation" : 0,
    "numberOfRefactorings" : 65,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.763956904995103,
      "LackOfCohesion" : 0.5687507790072014,
      "MetricsIntensity" : 0.05710582042503669,
      "Density" : 3.388775510204082,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer.EncodedMemoryCacheConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.generic.RoundingParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.BaseNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.datasource.DataSources'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "1269fbc6-4d47-4fa3-b864-7cfbb9fe712e",
    "objectives" : {
      "NumberOfConcerns" : 1.0005540166204987,
      "NumberOfRefactorings" : 65.0,
      "LackOfCohesion" : 0.5693492099633406,
      "MetricsIntensity" : 0.057040205095623395,
      "Density" : 1.005442999697611
    },
    "euclideanDistance" : 65.01799317168825,
    "generation" : 0,
    "numberOfRefactorings" : 65,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7671232876712333,
      "LackOfCohesion" : 0.5693492099633406,
      "MetricsIntensity" : 0.057040205095623395,
      "Density" : 3.3859470468431767,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer.EncodedMemoryCacheConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.generic.RoundingParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "50312feb-cff1-44ac-b392-9d1223008c3d",
    "objectives" : {
      "NumberOfConcerns" : 0.9988919667590028,
      "NumberOfRefactorings" : 67.0,
      "LackOfCohesion" : 0.5702601493954339,
      "MetricsIntensity" : 0.057161653934412374,
      "Density" : 1.0048382219534322
    },
    "euclideanDistance" : 67.01743018876674,
    "generation" : 0,
    "numberOfRefactorings" : 67,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7676470588235298,
      "LackOfCohesion" : 0.5702601493954339,
      "MetricsIntensity" : 0.05716165393441237,
      "Density" : 3.390816326530613,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer.EncodedMemoryCacheConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.generic.RoundingParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "d8eb7a0e-ca8e-4c47-a806-68e0650e05c9",
    "objectives" : {
      "NumberOfConcerns" : 0.9966759002770084,
      "NumberOfRefactorings" : 72.0,
      "LackOfCohesion" : 0.5711064346942043,
      "MetricsIntensity" : 0.057236854979680556,
      "Density" : 0.9990928333837314
    },
    "euclideanDistance" : 72.01611616823854,
    "generation" : 0,
    "numberOfRefactorings" : 72,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7654563297350343,
      "LackOfCohesion" : 0.5711064346942043,
      "MetricsIntensity" : 0.057236854979680556,
      "Density" : 3.378323108384458,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer.EncodedMemoryCacheConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.generic.RoundingParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.drawee.controller.ForwardingControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "e1dff8b5-462c-4852-8ddf-daf220faf30e",
    "objectives" : {
      "NumberOfConcerns" : 0.9977839335180055,
      "NumberOfRefactorings" : 72.0,
      "LackOfCohesion" : 0.572265156002672,
      "MetricsIntensity" : 0.05725524683962126,
      "Density" : 1.0
    },
    "euclideanDistance" : 72.01615331541981,
    "generation" : 0,
    "numberOfRefactorings" : 72,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7656862745098039,
      "LackOfCohesion" : 0.572265156002672,
      "MetricsIntensity" : 0.05725524683962126,
      "Density" : 3.3779366700715014,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.PoolFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.cache.disk.DiskStorageCache.Params'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoderSoLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.cache.common.CacheKeyUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.vito.options.EncodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer.EncodedMemoryCacheConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.generic.RoundingParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "6baaed6c-2e11-4f6c-9834-71de7f22b03d",
    "objectives" : {
      "NumberOfConcerns" : 0.9944598337950139,
      "NumberOfRefactorings" : 75.0,
      "LackOfCohesion" : 0.5688406561237426,
      "MetricsIntensity" : 0.057174875919876224,
      "Density" : 0.9975808890232839
    },
    "euclideanDistance" : 75.01540486226594,
    "generation" : 0,
    "numberOfRefactorings" : 75,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7598039215686276,
      "LackOfCohesion" : 0.5688406561237426,
      "MetricsIntensity" : 0.05717487591987622,
      "Density" : 3.3732106339468304,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer.EncodedMemoryCacheConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.generic.RoundingParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.BaseNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.datasource.DataSources'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.drawee.controller.ForwardingControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.common.activitylistener.ActivityListenerManager.Listener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.imagepipeline.backends.okhttp3.OkHttpImagePipelineConfigFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      } ]
    } ]
  }, {
    "solutionId" : "90a19c10-79c3-42cd-b2a3-865d60a9fcf1",
    "objectives" : {
      "NumberOfConcerns" : 0.9950138504155125,
      "NumberOfRefactorings" : 77.0,
      "LackOfCohesion" : 0.56843209177944,
      "MetricsIntensity" : 0.057274095796926675,
      "Density" : 1.0021167221046265
    },
    "euclideanDistance" : 77.01506791435202,
    "generation" : 0,
    "numberOfRefactorings" : 77,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.762512266928361,
      "LackOfCohesion" : 0.56843209177944,
      "MetricsIntensity" : 0.05727409579692669,
      "Density" : 3.392016376663254,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer.EncodedMemoryCacheConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.generic.RoundingParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.drawee.controller.ForwardingControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.common.internal.CountingOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.postprocessor.SlowGreyScalePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.fresco.samples.showcase.common.CustomScaleTypes.ScaleTypeFitX'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.common.activitylistener.ActivityListenerManager.Listener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.imagepipeline.backends.okhttp3.OkHttpImagePipelineConfigFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      } ]
    } ]
  }, {
    "solutionId" : "3a401d54-73e7-434a-ad13-6f48b062d2c2",
    "objectives" : {
      "NumberOfConcerns" : 0.9966759002770084,
      "NumberOfRefactorings" : 78.0,
      "LackOfCohesion" : 0.5729051447895814,
      "MetricsIntensity" : 0.05726688639643408,
      "Density" : 1.004233444209253
    },
    "euclideanDistance" : 78.01495592168122,
    "generation" : 0,
    "numberOfRefactorings" : 78,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7637254901960784,
      "LackOfCohesion" : 0.5729051447895814,
      "MetricsIntensity" : 0.0572668863964341,
      "Density" : 3.3922369765066405,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.PoolFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.cache.disk.DiskStorageCache.Params'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoderSoLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.cache.common.CacheKeyUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.vito.options.EncodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDrawableFactory'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer.EncodedMemoryCacheConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.samples.comparison.urlsfetcher.ImageUrlsFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.platform.OreoDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.fresco.animation.bitmap.cache.NoOpCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.DefaultFrescoVitoProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.generic.RoundingParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.samples.comparison.holders.GlideHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.BaseNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.datasource.DataSources'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.vito.core.impl.source.EmptyImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.postprocessor.SlowGreyScalePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.fresco.samples.showcase.common.CustomScaleTypes.ScaleTypeFitX'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "59db35bd-3abb-48c4-b373-63c1f2193f1b",
    "objectives" : {
      "NumberOfConcerns" : 0.9889196675900277,
      "NumberOfRefactorings" : 96.0,
      "LackOfCohesion" : 0.5691459212203122,
      "MetricsIntensity" : 0.057383424326524615,
      "Density" : 1.0003023888720894
    },
    "euclideanDistance" : 96.01200855577993,
    "generation" : 0,
    "numberOfRefactorings" : 96,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7534381139489197,
      "LackOfCohesion" : 0.5691459212203122,
      "MetricsIntensity" : 0.05738342432652461,
      "Density" : 3.385875127942681,
      "baselineType" : "CONCERN_MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.samples.animation2.local.LocalDrawableAnimationBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.samples.animation2.local.LocalDrawableAnimationBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.animation2.local.LocalDrawableAnimationBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.animation2.local.LocalDrawableAnimationBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.samples.animation2.local.LocalDrawableAnimationBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.animation2.local.LocalDrawableAnimationBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.imagepipeline.bitmaps.GingerbreadBitmapFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.NonrecoverableException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer.AddImageTransformMetaDataConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.vito.options.EncodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.fresco.vito.core.impl.FrescoDrawable2Impl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.fresco.vito.core.impl.FrescoDrawable2Impl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.producers.NetworkFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher.PriorityFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.common.RotationOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.common.RotationOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.drawee.backends.pipeline.Fresco'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.Fresco'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.drawee.backends.pipeline.Fresco'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.drawee.backends.pipeline.Fresco'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.memory.PooledByteBufferOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.generic.RoundingParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelinePrefetchFragment.PrefetchSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MyPagerAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.samples.zoomableapp.MyPagerAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.nativecode.WebpTranscoderImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.nativecode.WebpTranscoderImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.imagepipeline.listener.BaseRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.imagepipeline.listener.BaseRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.imagepipeline.listener.BaseRequestListener'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.datasource.RetainingDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.datasource.SimpleDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.datasource.SimpleDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.datasource.SimpleDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.datasource.SimpleDataSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.common.time.CurrentThreadTimeClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.drawee.debug.DebugControllerOverlayDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.common.references.FinalizerCloseableReference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.samples.comparison.Drawables'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoLithoGalleryFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.StandaloneActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.cache.disk.DiskCacheConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.cache.disk.DiskCacheConfig'"
      } ]
    } ]
  } ]
}