{
  "executionId" : "27b9beda-91cb-43b7-a724-e2bb12440a4c",
  "computingTime" : 733716,
  "maxEvaluations" : 10240,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 128,
  "algorithm" : "NSGAII",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.011969532100108,
    "meanNumConcerns" : 1.4723061430010076,
    "meanMetricsIntensity" : 0.03296937024300845,
    "meanLackOfCohesion" : 0.48535030050355515
  },
  "population" : [ {
    "solutionId" : "05c36fdd-e3a4-4220-989a-335e5c5d676b",
    "objectives" : {
      "NumberOfConcerns" : 1.0041039671682626,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.48609186464611254,
      "MetricsIntensity" : 0.032873932615764094,
      "Density" : 0.9965679190751445
    },
    "euclideanDistance" : 9.1235266421781,
    "generation" : 7,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4731560461615654,
      "LackOfCohesion" : 0.48609186464611254,
      "MetricsIntensity" : 0.0328739326157641,
      "Density" : 2.990243902439023
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "2bbc1ead-d214-48b3-8055-6f1e433cb37b",
    "objectives" : {
      "NumberOfConcerns" : 1.0054719562243501,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.48552096150316204,
      "MetricsIntensity" : 0.03286296389958238,
      "Density" : 0.9976517341040463
    },
    "euclideanDistance" : 9.12376530911277,
    "generation" : 48,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4744232698094286,
      "LackOfCohesion" : 0.48552096150316204,
      "MetricsIntensity" : 0.03286296389958238,
      "Density" : 2.9918743228602387
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "f26cb355-7b34-4fad-b10f-7d1399373aa8",
    "objectives" : {
      "NumberOfConcerns" : 1.005813953488372,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4853585939227994,
      "MetricsIntensity" : 0.032868773566091934,
      "Density" : 1.0016257225433527
    },
    "euclideanDistance" : 9.12422978218232,
    "generation" : 37,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4749247743229694,
      "LackOfCohesion" : 0.4853585939227994,
      "MetricsIntensity" : 0.03286877356609194,
      "Density" : 3.003791982665222
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "5565279c-ae9f-47f5-b1f4-59045669a2b6",
    "objectives" : {
      "NumberOfConcerns" : 1.005813953488372,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4853377106327206,
      "MetricsIntensity" : 0.03286706166899979,
      "Density" : 1.001806358381503
    },
    "euclideanDistance" : 9.124248496497149,
    "generation" : 48,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4749247743229692,
      "LackOfCohesion" : 0.4853377106327206,
      "MetricsIntensity" : 0.03286706166899978,
      "Density" : 3.00433369447454
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "5f26a819-5b41-4f7d-8d6e-0a347a9da2e7",
    "objectives" : {
      "NumberOfConcerns" : 1.006155950752394,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.48513514412504677,
      "MetricsIntensity" : 0.0328730775228234,
      "Density" : 1.0023482658959537
    },
    "euclideanDistance" : 9.124334967035686,
    "generation" : 15,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4746867167919802,
      "LackOfCohesion" : 0.48513514412504677,
      "MetricsIntensity" : 0.032873077522823396,
      "Density" : 3.0043313481321063
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "15e9c4bb-6217-402e-8c21-2a81bc130667",
    "objectives" : {
      "NumberOfConcerns" : 1.006155950752394,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4851351441250467,
      "MetricsIntensity" : 0.03287307752282341,
      "Density" : 1.0023482658959537
    },
    "euclideanDistance" : 9.124334967035686,
    "generation" : 37,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.47468671679198,
      "LackOfCohesion" : 0.4851351441250467,
      "MetricsIntensity" : 0.03287307752282341,
      "Density" : 3.004331348132107
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "6ba0b368-1d01-4b95-9548-1f4d6f6ae7c7",
    "objectives" : {
      "NumberOfConcerns" : 1.003077975376197,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4853506677479102,
      "MetricsIntensity" : 0.03289979511756149,
      "Density" : 0.9962066473988439
    },
    "euclideanDistance" : 10.111144385093537,
    "generation" : 47,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4723895582329307,
      "LackOfCohesion" : 0.4853506677479102,
      "MetricsIntensity" : 0.03289979511756149,
      "Density" : 2.9907809110629073
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "2b3c93b5-954b-4ca1-bf7d-85fbab54d687",
    "objectives" : {
      "NumberOfConcerns" : 1.0047879616963065,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.485776583804845,
      "MetricsIntensity" : 0.03284236850928771,
      "Density" : 0.997471098265896
    },
    "euclideanDistance" : 10.111459091070289,
    "generation" : 37,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.474159558454591,
      "LackOfCohesion" : 0.485776583804845,
      "MetricsIntensity" : 0.03284236850928771,
      "Density" : 2.992953929539295
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "1f7998d6-28d7-4253-8dac-aeb618ea77a1",
    "objectives" : {
      "NumberOfConcerns" : 1.0051299589603284,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48557366466403235,
      "MetricsIntensity" : 0.03284840124547174,
      "Density" : 0.9980130057803468
    },
    "euclideanDistance" : 10.111536826585063,
    "generation" : 47,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4739217652958876,
      "LackOfCohesion" : 0.48557366466403235,
      "MetricsIntensity" : 0.03284840124547174,
      "Density" : 2.992957746478874
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "0cc176f9-8156-4ddd-aff5-90b301ac8216",
    "objectives" : {
      "NumberOfConcerns" : 1.0034199726402189,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4851463088937624,
      "MetricsIntensity" : 0.03290218361605333,
      "Density" : 1.0005419075144508
    },
    "euclideanDistance" : 10.111596572495657,
    "generation" : 47,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4728915662650595,
      "LackOfCohesion" : 0.4851463088937624,
      "MetricsIntensity" : 0.03290218361605333,
      "Density" : 3.003796095444686
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "c2d4b84b-f18e-4891-aebd-d68991e25b37",
    "objectives" : {
      "NumberOfConcerns" : 1.0037619699042408,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4849436248221305,
      "MetricsIntensity" : 0.0329081867689752,
      "Density" : 1.0010838150289016
    },
    "euclideanDistance" : 10.111674449118253,
    "generation" : 47,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4726542900150523,
      "LackOfCohesion" : 0.4849436248221305,
      "MetricsIntensity" : 0.0329081867689752,
      "Density" : 3.003794037940379
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "6c448346-f09d-44ec-bd38-52c0a12f7e3c",
    "objectives" : {
      "NumberOfConcerns" : 1.0051299589603284,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48667959077220857,
      "MetricsIntensity" : 0.03283988754555708,
      "Density" : 1.001264450867052
    },
    "euclideanDistance" : 10.111911402759516,
    "generation" : 37,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.474661314601104,
      "LackOfCohesion" : 0.48667959077220857,
      "MetricsIntensity" : 0.03283988754555707,
      "Density" : 3.0043360433604342
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "6f949263-bb5c-4204-849b-5e80881aefa3",
    "objectives" : {
      "NumberOfConcerns" : 1.0054719562243501,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4853904137935904,
      "MetricsIntensity" : 0.03285249901488915,
      "Density" : 1.0021676300578035
    },
    "euclideanDistance" : 10.111972950615696,
    "generation" : 46,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4744232698094286,
      "LackOfCohesion" : 0.4853904137935904,
      "MetricsIntensity" : 0.03285249901488915,
      "Density" : 3.005417118093175
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "8a3e2117-f7c0-4e12-87ec-bd678e0783d4",
    "objectives" : {
      "NumberOfConcerns" : 1.0023939808481532,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4855832563361984,
      "MetricsIntensity" : 0.03289014440478642,
      "Density" : 0.9954841040462428
    },
    "euclideanDistance" : 11.101020455556435,
    "generation" : 48,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4721245605223505,
      "LackOfCohesion" : 0.4855832563361984,
      "MetricsIntensity" : 0.03289014440478643,
      "Density" : 2.9902333152468787
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "1fdc5f31-7962-46e9-9613-2f52e5568664",
    "objectives" : {
      "NumberOfConcerns" : 1.0034199726402189,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4852586462340531,
      "MetricsIntensity" : 0.03291502418741092,
      "Density" : 0.9967485549132948
    },
    "euclideanDistance" : 11.101212486741131,
    "generation" : 40,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4721525338685404,
      "LackOfCohesion" : 0.4852586462340531,
      "MetricsIntensity" : 0.03291502418741092,
      "Density" : 2.9907859078590793
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "d0e5df92-98ba-434e-9869-fd0cadb038ba",
    "objectives" : {
      "NumberOfConcerns" : 1.0044459644322845,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48582701469626915,
      "MetricsIntensity" : 0.032842099870069724,
      "Density" : 0.9971098265895953
    },
    "euclideanDistance" : 11.101362357543259,
    "generation" : 48,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.473657802308078,
      "LackOfCohesion" : 0.48582701469626915,
      "MetricsIntensity" : 0.032842099870069724,
      "Density" : 2.991869918699187
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "055a047e-f0d5-4a0b-88e3-514991fcf718",
    "objectives" : {
      "NumberOfConcerns" : 1.0044459644322845,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4857124014782668,
      "MetricsIntensity" : 0.032882690192552945,
      "Density" : 1.0009031791907514
    },
    "euclideanDistance" : 11.10169881945293,
    "generation" : 37,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.473657802308078,
      "LackOfCohesion" : 0.4857124014782668,
      "MetricsIntensity" : 0.032882690192552945,
      "Density" : 3.0032520325203262
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "692485ec-c72e-439a-931c-01392cfa1bae",
    "objectives" : {
      "NumberOfConcerns" : 1.0023939808481532,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48556213473611554,
      "MetricsIntensity" : 0.03293089777607682,
      "Density" : 0.9963872832369942
    },
    "euclideanDistance" : 12.092743127254248,
    "generation" : 41,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4713855421686748,
      "LackOfCohesion" : 0.48556213473611554,
      "MetricsIntensity" : 0.03293089777607682,
      "Density" : 2.9913232104121477
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "6a353a41-ca43-4c90-bca7-af8add0f8ce8",
    "objectives" : {
      "NumberOfConcerns" : 1.003077975376197,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.485328509869792,
      "MetricsIntensity" : 0.03291120322871593,
      "Density" : 1.0
    },
    "euclideanDistance" : 12.093088618482675,
    "generation" : 47,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4723895582329312,
      "LackOfCohesion" : 0.485328509869792,
      "MetricsIntensity" : 0.03291120322871593,
      "Density" : 3.0021691973969626
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "888bad6b-8be8-4b0d-ac8f-7613eebb1e6c",
    "objectives" : {
      "NumberOfConcerns" : 1.0017099863201095,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4858366753487952,
      "MetricsIntensity" : 0.03292469364054827,
      "Density" : 0.9953034682080925
    },
    "euclideanDistance" : 13.085532973520252,
    "generation" : 36,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4711200401808133,
      "LackOfCohesion" : 0.4858366753487952,
      "MetricsIntensity" : 0.03292469364054827,
      "Density" : 2.9896907216494846
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "efbdf7c0-9962-46da-b790-235f53d5256e",
    "objectives" : {
      "NumberOfConcerns" : 1.0044459644322845,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48455754437783566,
      "MetricsIntensity" : 0.03287846789310487,
      "Density" : 0.996929190751445
    },
    "euclideanDistance" : 13.085818908815034,
    "generation" : 38,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.473657802308078,
      "LackOfCohesion" : 0.48455754437783566,
      "MetricsIntensity" : 0.03287846789310487,
      "Density" : 2.992950108459869
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "7237bebf-427f-4c09-aff0-cb643bd93672",
    "objectives" : {
      "NumberOfConcerns" : 1.0047879616963065,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48542017352441913,
      "MetricsIntensity" : 0.03287619216018239,
      "Density" : 0.9972904624277457
    },
    "euclideanDistance" : 13.085904657427953,
    "generation" : 17,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4734202607823468,
      "LackOfCohesion" : 0.48542017352441913,
      "MetricsIntensity" : 0.03287619216018239,
      "Density" : 2.9924119241192413
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "0f16819f-1073-4660-b5d9-b8ad253eddc6",
    "objectives" : {
      "NumberOfConcerns" : 1.0044459644322845,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48451766298749394,
      "MetricsIntensity" : 0.032878671117048806,
      "Density" : 1.0007225433526012
    },
    "euclideanDistance" : 13.08610697178499,
    "generation" : 35,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.472918756268807,
      "LackOfCohesion" : 0.48451766298749394,
      "MetricsIntensity" : 0.032878671117048806,
      "Density" : 3.002710027100271
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "36e4234e-030c-4078-9d05-12f96378dfff",
    "objectives" : {
      "NumberOfConcerns" : 1.0013679890560876,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.4861874956571061,
      "MetricsIntensity" : 0.032925299269783985,
      "Density" : 0.9989161849710982
    },
    "euclideanDistance" : 14.07970289993254,
    "generation" : 13,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4713567839195978,
      "LackOfCohesion" : 0.4861874956571061,
      "MetricsIntensity" : 0.03292529926978398,
      "Density" : 3.0021715526601525
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "e81beac2-d9e9-4466-8da7-7247d98fdb1f",
    "objectives" : {
      "NumberOfConcerns" : 1.0034199726402189,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.484973021035125,
      "MetricsIntensity" : 0.03286470847417572,
      "Density" : 0.9992774566473989
    },
    "euclideanDistance" : 14.079832598331985,
    "generation" : 49,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.47289156626506,
      "LackOfCohesion" : 0.484973021035125,
      "MetricsIntensity" : 0.03286470847417572,
      "Density" : 3.0016277807921865
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "e51f0df0-c0bf-436e-a787-6fc37bfd983c",
    "objectives" : {
      "NumberOfConcerns" : 1.0037619699042408,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48477043228134686,
      "MetricsIntensity" : 0.03287073224048694,
      "Density" : 0.9998193641618497
    },
    "euclideanDistance" : 14.079888483586485,
    "generation" : 41,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4726542900150528,
      "LackOfCohesion" : 0.48477043228134686,
      "MetricsIntensity" : 0.03287073224048694,
      "Density" : 3.0016268980477223
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "5977a6ab-1c00-44e3-8bb6-1c00b7bd5608",
    "objectives" : {
      "NumberOfConcerns" : 1.0034199726402189,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48484147174967984,
      "MetricsIntensity" : 0.03289622881690919,
      "Density" : 1.0001806358381502
    },
    "euclideanDistance" : 14.079892270908811,
    "generation" : 50,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4721525338685408,
      "LackOfCohesion" : 0.48484147174967984,
      "MetricsIntensity" : 0.03289622881690919,
      "Density" : 3.002711496746204
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "a6d29613-9a52-4e00-b812-d518025633c1",
    "objectives" : {
      "NumberOfConcerns" : 1.0013679890560876,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4861869474841884,
      "MetricsIntensity" : 0.032967770449068255,
      "Density" : 0.9996387283236994
    },
    "euclideanDistance" : 15.074464503207508,
    "generation" : 48,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4706177800100455,
      "LackOfCohesion" : 0.4861869474841884,
      "MetricsIntensity" : 0.032967770449068255,
      "Density" : 3.0027129679869775
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "d50fa7c2-f0d1-4257-953a-e91ebae92bdd",
    "objectives" : {
      "NumberOfConcerns" : 1.0013679890560876,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48616602969528216,
      "MetricsIntensity" : 0.03296605572395229,
      "Density" : 0.9998193641618497
    },
    "euclideanDistance" : 15.074475804475556,
    "generation" : 49,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4706177800100455,
      "LackOfCohesion" : 0.48616602969528216,
      "MetricsIntensity" : 0.03296605572395229,
      "Density" : 3.0032555615843726
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "bf6f7f09-d2d1-4ff2-a459-4eb9cc94041f",
    "objectives" : {
      "NumberOfConcerns" : 1.0037619699042408,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48586598475209947,
      "MetricsIntensity" : 0.03284829366599509,
      "Density" : 1.0001806358381502
    },
    "euclideanDistance" : 15.074649056016778,
    "generation" : 36,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4733935742971889,
      "LackOfCohesion" : 0.48586598475209947,
      "MetricsIntensity" : 0.03284829366599509,
      "Density" : 3.004340748779164
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "007e84d4-c7a8-4800-bbb1-103d5bf1cb14",
    "objectives" : {
      "NumberOfConcerns" : 1.0010259917920656,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4858563040094908,
      "MetricsIntensity" : 0.03289199561308532,
      "Density" : 0.9940390173410405
    },
    "euclideanDistance" : 16.069452536902457,
    "generation" : 33,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4708542713567836,
      "LackOfCohesion" : 0.4858563040094908,
      "MetricsIntensity" : 0.03289199561308532,
      "Density" : 2.989136338946225
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "ea4f4afa-9c4f-4b91-9023-aaa7970b8234",
    "objectives" : {
      "NumberOfConcerns" : 1.0027359781121752,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4863033283710573,
      "MetricsIntensity" : 0.032837880752652225,
      "Density" : 0.9951228323699421
    },
    "euclideanDistance" : 16.069639639609274,
    "generation" : 32,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.472626820693119,
      "LackOfCohesion" : 0.4863033283710573,
      "MetricsIntensity" : 0.032837880752652225,
      "Density" : 2.9907709011943546
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "897e4e12-e148-4e88-abb3-34574d2c610a",
    "objectives" : {
      "NumberOfConcerns" : 1.0006839945280437,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4864201249806446,
      "MetricsIntensity" : 0.03295815187106935,
      "Density" : 0.9989161849710982
    },
    "euclideanDistance" : 16.069750862389334,
    "generation" : 52,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4703517587939692,
      "LackOfCohesion" : 0.4864201249806446,
      "MetricsIntensity" : 0.03295815187106935,
      "Density" : 3.002171552660152
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "349f356b-32c7-4fc6-9348-c84943d2a76b",
    "objectives" : {
      "NumberOfConcerns" : 1.0010259917920656,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48585593821082845,
      "MetricsIntensity" : 0.0329344851313876,
      "Density" : 0.9947615606936416
    },
    "euclideanDistance" : 17.06542540553509,
    "generation" : 44,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4701155198392768,
      "LackOfCohesion" : 0.48585593821082845,
      "MetricsIntensity" : 0.03293448513138761,
      "Density" : 2.989685124864278
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "d2dfa52e-fe23-4209-af80-11399f3df6d3",
    "objectives" : {
      "NumberOfConcerns" : 1.0010259917920656,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48583502042192234,
      "MetricsIntensity" : 0.03293277040627162,
      "Density" : 0.994942196531792
    },
    "euclideanDistance" : 17.06543533711103,
    "generation" : 42,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.470115519839277,
      "LackOfCohesion" : 0.48583502042192234,
      "MetricsIntensity" : 0.03293277040627162,
      "Density" : 2.9902280130293173
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "63cc2458-d736-41a1-806e-38c47b3f3c1a",
    "objectives" : {
      "NumberOfConcerns" : 1.0006839945280437,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.48604101057911625,
      "MetricsIntensity" : 0.03289001327062766,
      "Density" : 0.9942196531791907
    },
    "euclideanDistance" : 18.061759570778538,
    "generation" : 38,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4703517587939696,
      "LackOfCohesion" : 0.48604101057911625,
      "MetricsIntensity" : 0.03289001327062767,
      "Density" : 2.9896795219989136
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "f9ef6379-d09a-4c65-8ca1-765ce10dcedb",
    "objectives" : {
      "NumberOfConcerns" : 1.0034199726402189,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.4846063222836128,
      "MetricsIntensity" : 0.032884612983025176,
      "Density" : 0.9962066473988439
    },
    "euclideanDistance" : 18.061982283547486,
    "generation" : 37,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.47215253386854,
      "LackOfCohesion" : 0.4846063222836128,
      "MetricsIntensity" : 0.03288461298302518,
      "Density" : 2.9924036896364625
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "72baf5f3-f471-4743-b812-5831dcd34da1",
    "objectives" : {
      "NumberOfConcerns" : 1.0020519835841313,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48526880378077364,
      "MetricsIntensity" : 0.0328555975783573,
      "Density" : 0.9983742774566474
    },
    "euclideanDistance" : 19.05878864665609,
    "generation" : 50,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4716223003515816,
      "LackOfCohesion" : 0.48526880378077364,
      "MetricsIntensity" : 0.0328555975783573,
      "Density" : 3.0021727322107545
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "0d81288c-f516-4dc5-b815-b00323265fe8",
    "objectives" : {
      "NumberOfConcerns" : 1.0023939808481532,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4850450344677479,
      "MetricsIntensity" : 0.032859915892743105,
      "Density" : 0.9990968208092486
    },
    "euclideanDistance" : 19.05883880538702,
    "generation" : 45,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4713855421686746,
      "LackOfCohesion" : 0.4850450344677479,
      "MetricsIntensity" : 0.032859915892743105,
      "Density" : 3.00271444082519
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "8554510b-57cf-4751-8551-a3d6a95fc152",
    "objectives" : {
      "NumberOfConcerns" : 1.0017099863201095,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.4853178205629972,
      "MetricsIntensity" : 0.032851680882826535,
      "Density" : 0.9945809248554913
    },
    "euclideanDistance" : 20.055653236249192,
    "generation" : 40,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.471859296482412,
      "LackOfCohesion" : 0.4853178205629972,
      "MetricsIntensity" : 0.03285168088282654,
      "Density" : 2.9923913043478256
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "f94ef252-6321-4185-8f15-48e64f692346",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4869506868491936,
      "MetricsIntensity" : 0.03300344738309487,
      "Density" : 1.0
    },
    "euclideanDistance" : 21.053223273384102,
    "generation" : 37,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4693467336683415,
      "LackOfCohesion" : 0.4869506868491936,
      "MetricsIntensity" : 0.03300344738309487,
      "Density" : 3.00542888165038
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "055ed192-6468-4ce2-a7a2-91da303dfe4e",
    "objectives" : {
      "NumberOfConcerns" : 1.0041039671682626,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48441882264716307,
      "MetricsIntensity" : 0.032934944214966635,
      "Density" : 0.9976517341040463
    },
    "euclideanDistance" : 21.053248681990368,
    "generation" : 49,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4731560461615654,
      "LackOfCohesion" : 0.48441882264716307,
      "MetricsIntensity" : 0.032934944214966635,
      "Density" : 2.9951193058568335
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "45593306-3884-4ca4-a721-e042c26f6d66",
    "objectives" : {
      "NumberOfConcerns" : 1.003077975376197,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48439890351374915,
      "MetricsIntensity" : 0.032955853939409516,
      "Density" : 1.001986994219653
    },
    "euclideanDistance" : 21.05340522925696,
    "generation" : 44,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4716507777220273,
      "LackOfCohesion" : 0.48439890351374915,
      "MetricsIntensity" : 0.03295585393940952,
      "Density" : 3.0048754062838565
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "4c4a1254-7919-4c86-8fa2-ad1ed8676eaf",
    "objectives" : {
      "NumberOfConcerns" : 1.000341997264022,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4876059418312455,
      "MetricsIntensity" : 0.03291919124590699,
      "Density" : 0.9936777456647399
    },
    "euclideanDistance" : 22.0505537980655,
    "generation" : 41,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4705882352941178,
      "LackOfCohesion" : 0.4876059418312455,
      "MetricsIntensity" : 0.03291919124590699,
      "Density" : 2.9880499728408476
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "b015edfa-7343-4fa8-96b0-8e6d23b13a6a",
    "objectives" : {
      "NumberOfConcerns" : 1.0020519835841313,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4847019188497572,
      "MetricsIntensity" : 0.03297174999904516,
      "Density" : 1.0016257225433527
    },
    "euclideanDistance" : 22.050927086004798,
    "generation" : 34,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4708835341365456,
      "LackOfCohesion" : 0.4847019188497572,
      "MetricsIntensity" : 0.03297174999904516,
      "Density" : 3.005420054200542
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "9195e8d6-ba44-4df0-ac62-cf30f8885bdf",
    "objectives" : {
      "NumberOfConcerns" : 1.0013679890560876,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.4850682686243692,
      "MetricsIntensity" : 0.032960448150783625,
      "Density" : 1.0014450867052023
    },
    "euclideanDistance" : 24.046663130828794,
    "generation" : 47,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4706177800100455,
      "LackOfCohesion" : 0.4850682686243692,
      "MetricsIntensity" : 0.032960448150783625,
      "Density" : 3.0065075921908893
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "3675730e-b6ce-4b81-bb00-62a6487d9cda",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4863398391367983,
      "MetricsIntensity" : 0.03296179238703383,
      "Density" : 0.9978323699421965
    },
    "euclideanDistance" : 25.04462581787545,
    "generation" : 41,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4693467336683415,
      "LackOfCohesion" : 0.4863398391367983,
      "MetricsIntensity" : 0.032961792387033825,
      "Density" : 3.0005431830526894
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "7b7ab6c3-7499-4d39-a3f9-f6223920aab6",
    "objectives" : {
      "NumberOfConcerns" : 1.003077975376197,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4840925039957618,
      "MetricsIntensity" : 0.032946283172029786,
      "Density" : 0.9981936416184971
    },
    "euclideanDistance" : 25.044719742509642,
    "generation" : 21,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4716507777220271,
      "LackOfCohesion" : 0.4840925039957618,
      "MetricsIntensity" : 0.032946283172029786,
      "Density" : 2.9951219512195126
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "f145ab66-834b-412d-aaad-cffc8feb91b5",
    "objectives" : {
      "NumberOfConcerns" : 1.0006839945280437,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4853426882757303,
      "MetricsIntensity" : 0.03295589027203206,
      "Density" : 1.0003612716763006
    },
    "euclideanDistance" : 25.044734671114824,
    "generation" : 46,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4703517587939694,
      "LackOfCohesion" : 0.4853426882757303,
      "MetricsIntensity" : 0.032955890272032065,
      "Density" : 3.0048833423765604
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "50ae0646-bbcc-4c44-80f7-0d3d58b6a385",
    "objectives" : {
      "NumberOfConcerns" : 1.0027359781121752,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4842758556642622,
      "MetricsIntensity" : 0.0329421831486138,
      "Density" : 1.001264450867052
    },
    "euclideanDistance" : 25.044832166221052,
    "generation" : 43,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4711490215755147,
      "LackOfCohesion" : 0.4842758556642622,
      "MetricsIntensity" : 0.0329421831486138,
      "Density" : 3.004336043360435
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "85a93e4e-69cb-46ae-9bc5-ceef3944bd54",
    "objectives" : {
      "NumberOfConcerns" : 1.0020519835841313,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48507713904730104,
      "MetricsIntensity" : 0.03292672281017004,
      "Density" : 0.9987355491329479
    },
    "euclideanDistance" : 26.04300222468232,
    "generation" : 37,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4716223003515823,
      "LackOfCohesion" : 0.48507713904730104,
      "MetricsIntensity" : 0.03292672281017004,
      "Density" : 3.003259098316133
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "dbe01276-f117-41ee-9516-bd455819478a",
    "objectives" : {
      "NumberOfConcerns" : 1.000341997264022,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.48515788444605296,
      "MetricsIntensity" : 0.032969540586097176,
      "Density" : 0.9960260115606936
    },
    "euclideanDistance" : 27.04125028711953,
    "generation" : 43,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4691109994977396,
      "LackOfCohesion" : 0.48515788444605296,
      "MetricsIntensity" : 0.032969540586097176,
      "Density" : 2.9918610960390666
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "9b7b583b-5f9e-4e41-9fc9-6137d9cfa854",
    "objectives" : {
      "NumberOfConcerns" : 0.9989740082079344,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48619977407271187,
      "MetricsIntensity" : 0.03302355861255484,
      "Density" : 0.9992774566473989
    },
    "euclideanDistance" : 28.03986421650737,
    "generation" : 47,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.468577174459528,
      "LackOfCohesion" : 0.48619977407271187,
      "MetricsIntensity" : 0.03302355861255484,
      "Density" : 3.0032573289902276
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "2d6b1fde-0ee9-4af1-a9e9-dabf65b487d7",
    "objectives" : {
      "NumberOfConcerns" : 1.0006839945280437,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.4850852278136496,
      "MetricsIntensity" : 0.03298287988733399,
      "Density" : 1.0001806358381502
    },
    "euclideanDistance" : 28.039938040406202,
    "generation" : 40,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4696132596685088,
      "LackOfCohesion" : 0.4850852278136496,
      "MetricsIntensity" : 0.032982879887333984,
      "Density" : 3.004340748779165
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "691732eb-eb6b-4dce-9ffc-ec5c0af77d3a",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.48605386248718524,
      "MetricsIntensity" : 0.03295392147007198,
      "Density" : 0.9938583815028902
    },
    "euclideanDistance" : 29.03833825825201,
    "generation" : 45,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.469346733668342,
      "LackOfCohesion" : 0.48605386248718524,
      "MetricsIntensity" : 0.03295392147007198,
      "Density" : 2.9902173913043475
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "5ee05a1c-5091-47ed-88da-8fe861e44110",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.4871420167571578,
      "MetricsIntensity" : 0.032947330249625525,
      "Density" : 0.9934971098265896
    },
    "euclideanDistance" : 29.038344122526937,
    "generation" : 40,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4693467336683415,
      "LackOfCohesion" : 0.4871420167571578,
      "MetricsIntensity" : 0.032947330249625525,
      "Density" : 2.9891304347826084
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "bb55482b-872f-4478-8736-b9bef01f91bc",
    "objectives" : {
      "NumberOfConcerns" : 0.9989740082079344,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.48743545803401855,
      "MetricsIntensity" : 0.03303080835375188,
      "Density" : 0.9958453757225434
    },
    "euclideanDistance" : 29.038394264171572,
    "generation" : 11,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4685771744595286,
      "LackOfCohesion" : 0.48743545803401855,
      "MetricsIntensity" : 0.03303080835375188,
      "Density" : 2.994568169473113
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "5a79277e-7ca5-49e8-b599-2a519cfd3842",
    "objectives" : {
      "NumberOfConcerns" : 0.9993160054719562,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.4873665681312018,
      "MetricsIntensity" : 0.03299258747188388,
      "Density" : 0.9962066473988439
    },
    "euclideanDistance" : 29.03841722349333,
    "generation" : 48,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4690799396681744,
      "LackOfCohesion" : 0.4873665681312018,
      "MetricsIntensity" : 0.03299258747188388,
      "Density" : 2.99565453557849
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "5a807141-9660-41e5-9d09-d8acff32d2e8",
    "objectives" : {
      "NumberOfConcerns" : 1.0017099863201095,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.48484857405376286,
      "MetricsIntensity" : 0.03299632365853607,
      "Density" : 0.997471098265896
    },
    "euclideanDistance" : 29.03850096657378,
    "generation" : 17,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4711200401808133,
      "LackOfCohesion" : 0.48484857405376286,
      "MetricsIntensity" : 0.03299632365853607,
      "Density" : 2.994577006507593
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "352bf942-acca-43d2-ba5c-d2e2f6d1e46a",
    "objectives" : {
      "NumberOfConcerns" : 1.0010259917920656,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.4851745475461981,
      "MetricsIntensity" : 0.032956628791138885,
      "Density" : 1.0009031791907514
    },
    "euclideanDistance" : 29.038600873515332,
    "generation" : 48,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4708542713567834,
      "LackOfCohesion" : 0.4851745475461981,
      "MetricsIntensity" : 0.032956628791138885,
      "Density" : 3.0081433224755703
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "5ec05e36-71d9-41aa-8e5a-627a703dc782",
    "objectives" : {
      "NumberOfConcerns" : 0.9989740082079344,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.48865578476941385,
      "MetricsIntensity" : 0.03301274942756906,
      "Density" : 0.994400289017341
    },
    "euclideanDistance" : 30.037087996699782,
    "generation" : 40,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4693158953722336,
      "LackOfCohesion" : 0.48865578476941385,
      "MetricsIntensity" : 0.03301274942756905,
      "Density" : 2.990222705051603
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "507b7502-11a8-40f5-9400-a8f370f1e954",
    "objectives" : {
      "NumberOfConcerns" : 0.9986320109439124,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.48710408381107434,
      "MetricsIntensity" : 0.03299748762725596,
      "Density" : 0.9981936416184971
    },
    "euclideanDistance" : 31.03597937333547,
    "generation" : 38,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.46807440925088,
      "LackOfCohesion" : 0.48710408381107434,
      "MetricsIntensity" : 0.03299748762725596,
      "Density" : 3.003260869565217
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "58b63d21-e6fb-4251-8b10-ca705d779aa7",
    "objectives" : {
      "NumberOfConcerns" : 0.9986320109439124,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.48830327536782814,
      "MetricsIntensity" : 0.03297769146964374,
      "Density" : 0.996929190751445
    },
    "euclideanDistance" : 32.03483512243389,
    "generation" : 36,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.468812877263582,
      "LackOfCohesion" : 0.48830327536782814,
      "MetricsIntensity" : 0.03297769146964374,
      "Density" : 2.9994565217391296
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "4d0b013b-ebad-4fa3-bf4e-31887de0cb57",
    "objectives" : {
      "NumberOfConcerns" : 0.9996580027359782,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.4892027967225262,
      "MetricsIntensity" : 0.03300616178693122,
      "Density" : 0.9945809248554913
    },
    "euclideanDistance" : 33.03375419357536,
    "generation" : 28,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4695827048768229,
      "LackOfCohesion" : 0.4892027967225262,
      "MetricsIntensity" : 0.03300616178693122,
      "Density" : 2.9907658881042907
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "8611d7b0-38d9-4c95-b999-e67a335d49a4",
    "objectives" : {
      "NumberOfConcerns" : 0.9996580027359782,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.48616551884044396,
      "MetricsIntensity" : 0.03298001968870295,
      "Density" : 0.9985549132947977
    },
    "euclideanDistance" : 33.03382921537719,
    "generation" : 33,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4695827048768229,
      "LackOfCohesion" : 0.48616551884044396,
      "MetricsIntensity" : 0.03298001968870295,
      "Density" : 3.005981511691136
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "17219c8e-4ef6-4e1a-8db2-c584a36afed8",
    "objectives" : {
      "NumberOfConcerns" : 0.9982900136798906,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.486709687571479,
      "MetricsIntensity" : 0.03306718600523901,
      "Density" : 1.0005419075144508
    },
    "euclideanDistance" : 33.033856069476236,
    "generation" : 22,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4675716440422322,
      "LackOfCohesion" : 0.486709687571479,
      "MetricsIntensity" : 0.03306718600523901,
      "Density" : 3.0070575461454943
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "26452e10-ed9a-424d-a945-34086118383e",
    "objectives" : {
      "NumberOfConcerns" : 1.0023939808481532,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.4841768278458548,
      "MetricsIntensity" : 0.03299851833121303,
      "Density" : 0.9981936416184971
    },
    "euclideanDistance" : 33.03387201558187,
    "generation" : 16,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4713855421686746,
      "LackOfCohesion" : 0.4841768278458548,
      "MetricsIntensity" : 0.03299851833121303,
      "Density" : 2.9967462039045545
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "a6b06598-d582-4cb6-9617-97d6ec0663df",
    "objectives" : {
      "NumberOfConcerns" : 0.9993160054719562,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.48780504969953425,
      "MetricsIntensity" : 0.0329386405899923,
      "Density" : 0.9927745664739884
    },
    "euclideanDistance" : 34.03267947927677,
    "generation" : 29,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.469818913480885,
      "LackOfCohesion" : 0.48780504969953425,
      "MetricsIntensity" : 0.03293864058999231,
      "Density" : 2.9885807504078303
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "3b9acfa1-7020-4812-85a6-8a7c9eb355ca",
    "objectives" : {
      "NumberOfConcerns" : 0.9982900136798906,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.4879296139922228,
      "MetricsIntensity" : 0.03304912424969076,
      "Density" : 0.9990968208092486
    },
    "euclideanDistance" : 34.032836275596964,
    "generation" : 47,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4683098591549302,
      "LackOfCohesion" : 0.4879296139922228,
      "MetricsIntensity" : 0.03304912424969076,
      "Density" : 3.0027144408251907
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "8f2a9dea-70cc-4f88-b801-ef089b4ea69c",
    "objectives" : {
      "NumberOfConcerns" : 0.9979480164158687,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.48637831334853443,
      "MetricsIntensity" : 0.03303386910323002,
      "Density" : 0.9956647398843931
    },
    "euclideanDistance" : 35.031769918431486,
    "generation" : 43,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.467068878833585,
      "LackOfCohesion" : 0.48637831334853443,
      "MetricsIntensity" : 0.03303386910323002,
      "Density" : 2.9940249864204236
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "766171b9-2540-4926-902a-5f5e7e9a0b44",
    "objectives" : {
      "NumberOfConcerns" : 1.000341997264022,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.4857019526381789,
      "MetricsIntensity" : 0.03297577280977655,
      "Density" : 0.9945809248554913
    },
    "euclideanDistance" : 35.031797971499635,
    "generation" : 41,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4705882352941184,
      "LackOfCohesion" : 0.4857019526381789,
      "MetricsIntensity" : 0.03297577280977655,
      "Density" : 2.994018488308863
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "ec68d091-b2e4-4e2c-ab81-9680baa3dd0d",
    "objectives" : {
      "NumberOfConcerns" : 1.000341997264022,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.4849376380766699,
      "MetricsIntensity" : 0.0330041763940136,
      "Density" : 0.9998193641618497
    },
    "euclideanDistance" : 35.031936524561786,
    "generation" : 42,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4698492462311556,
      "LackOfCohesion" : 0.4849376380766699,
      "MetricsIntensity" : 0.0330041763940136,
      "Density" : 3.004885993485342
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Queue.ItemList.get(Task), hudson.model.Queue.ItemList.getAll(Task), hudson.model.Queue.ItemList.cancelAll(), hudson.model.Queue.ItemList.remove(Task), hudson.model.Queue.ItemList.containsKey(Task), hudson.model.Queue.ItemList.put(Task, T), hudson.model.Queue.ItemList.cancel(Task)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "fc4f4fc6-e2f8-4c45-9643-b420a520e1be",
    "objectives" : {
      "NumberOfConcerns" : 0.9986320109439124,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.4880379356467062,
      "MetricsIntensity" : 0.03297152943242638,
      "Density" : 0.9927745664739884
    },
    "euclideanDistance" : 36.03084977323603,
    "generation" : 51,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.468812877263582,
      "LackOfCohesion" : 0.4880379356467062,
      "MetricsIntensity" : 0.03297152943242638,
      "Density" : 2.9885807504078303
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "aa539a46-a272-4698-8c51-5cbda5eb6dfa",
    "objectives" : {
      "NumberOfConcerns" : 0.9979480164158687,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.4866843984612931,
      "MetricsIntensity" : 0.03305094704670306,
      "Density" : 0.9951228323699421
    },
    "euclideanDistance" : 36.03087736600066,
    "generation" : 40,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4678068410462777,
      "LackOfCohesion" : 0.4866843984612931,
      "MetricsIntensity" : 0.03305094704670306,
      "Density" : 2.992395437262357
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "ce9acbfd-ed1f-4a67-bb32-b119ce796ed9",
    "objectives" : {
      "NumberOfConcerns" : 0.9982900136798906,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48752912897102774,
      "MetricsIntensity" : 0.03297919676852755,
      "Density" : 0.9945809248554913
    },
    "euclideanDistance" : 36.03088323156281,
    "generation" : 48,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4683098591549295,
      "LackOfCohesion" : 0.48752912897102774,
      "MetricsIntensity" : 0.03297919676852754,
      "Density" : 2.9907658881042907
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "8730c542-5885-4b1b-8954-e99cb2fdec87",
    "objectives" : {
      "NumberOfConcerns" : 0.9989740082079344,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48549661466311655,
      "MetricsIntensity" : 0.03301396674094715,
      "Density" : 0.9951228323699421
    },
    "euclideanDistance" : 36.0308897392977,
    "generation" : 44,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.468577174459528,
      "LackOfCohesion" : 0.48549661466311655,
      "MetricsIntensity" : 0.03301396674094715,
      "Density" : 2.9923954372623567
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "fb9d5462-1222-4b19-97c7-44a240e4638a",
    "objectives" : {
      "NumberOfConcerns" : 0.9982900136798906,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48626449387472176,
      "MetricsIntensity" : 0.033074234078007574,
      "Density" : 0.9994580924855492
    },
    "euclideanDistance" : 36.0310011863813,
    "generation" : 48,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4683098591549295,
      "LackOfCohesion" : 0.48626449387472176,
      "MetricsIntensity" : 0.033074234078007574,
      "Density" : 3.005431830526887
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "8b3b502d-b260-434c-909e-eb6254616204",
    "objectives" : {
      "NumberOfConcerns" : 0.9982900136798906,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.48609850311833847,
      "MetricsIntensity" : 0.03302549221244002,
      "Density" : 0.9983742774566474
    },
    "euclideanDistance" : 37.030132548873894,
    "generation" : 47,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4675716440422328,
      "LackOfCohesion" : 0.48609850311833847,
      "MetricsIntensity" : 0.03302549221244002,
      "Density" : 3.002172732210755
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "ccf23345-b815-4038-8960-7c4d0cda4f9b",
    "objectives" : {
      "NumberOfConcerns" : 0.9979480164158687,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.4888134701205932,
      "MetricsIntensity" : 0.03302132132186792,
      "Density" : 0.9981936416184971
    },
    "euclideanDistance" : 37.03015419635556,
    "generation" : 37,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4678068410462772,
      "LackOfCohesion" : 0.4888134701205932,
      "MetricsIntensity" : 0.033021321321867914,
      "Density" : 3.003260869565217
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "e53cbfe4-a75b-44e9-a276-1df636505360",
    "objectives" : {
      "NumberOfConcerns" : 0.9976060191518468,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.486352841461612,
      "MetricsIntensity" : 0.033017610499739655,
      "Density" : 0.997471098265896
    },
    "euclideanDistance" : 38.02930180282468,
    "generation" : 43,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4673038229376254,
      "LackOfCohesion" : 0.486352841461612,
      "MetricsIntensity" : 0.033017610499739655,
      "Density" : 3.001086956521739
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "478fa404-0dea-4b69-8d9d-9a180c4f83ab",
    "objectives" : {
      "NumberOfConcerns" : 1.0010259917920656,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.4844489506974712,
      "MetricsIntensity" : 0.033000428197396355,
      "Density" : 0.9967485549132948
    },
    "euclideanDistance" : 38.02934841056389,
    "generation" : 31,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.470115519839277,
      "LackOfCohesion" : 0.4844489506974712,
      "MetricsIntensity" : 0.033000428197396355,
      "Density" : 2.9956568946796955
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "ec665c04-6c7e-426f-b56b-5ba4cbb000c6",
    "objectives" : {
      "NumberOfConcerns" : 0.9979480164158687,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.4883901557248876,
      "MetricsIntensity" : 0.033030091949664116,
      "Density" : 0.996929190751445
    },
    "euclideanDistance" : 40.02785759925235,
    "generation" : 37,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.468545546049321,
      "LackOfCohesion" : 0.4883901557248876,
      "MetricsIntensity" : 0.033030091949664116,
      "Density" : 3.001087547580207
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "4a4f91c5-0ec0-4fcd-b8ae-04a1e721d1c4",
    "objectives" : {
      "NumberOfConcerns" : 0.9979480164158687,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.4872908124676101,
      "MetricsIntensity" : 0.03300619054051206,
      "Density" : 0.9976517341040463
    },
    "euclideanDistance" : 40.02786218336621,
    "generation" : 38,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4678068410462777,
      "LackOfCohesion" : 0.4872908124676101,
      "MetricsIntensity" : 0.03300619054051206,
      "Density" : 3.0016304347826086
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "952c92f0-c59a-4bd2-9efe-da2518125297",
    "objectives" : {
      "NumberOfConcerns" : 0.9986320109439124,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.4857411727035217,
      "MetricsIntensity" : 0.03299206223512301,
      "Density" : 0.9940390173410405
    },
    "euclideanDistance" : 41.027093638525116,
    "generation" : 41,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4680744092508795,
      "LackOfCohesion" : 0.4857411727035217,
      "MetricsIntensity" : 0.03299206223512301,
      "Density" : 2.990760869565217
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "9455169a-5e05-4543-9d20-d9ca124c1cf3",
    "objectives" : {
      "NumberOfConcerns" : 0.9972640218878249,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.4881082517453068,
      "MetricsIntensity" : 0.0330594404273437,
      "Density" : 0.9954841040462428
    },
    "euclideanDistance" : 41.027123549217826,
    "generation" : 41,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4668008048289736,
      "LackOfCohesion" : 0.4881082517453068,
      "MetricsIntensity" : 0.0330594404273437,
      "Density" : 2.993481803367734
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "020829da-44be-4b44-ad10-c5dfd02d103f",
    "objectives" : {
      "NumberOfConcerns" : 0.9976060191518468,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.4871256653135007,
      "MetricsIntensity" : 0.033056378585268865,
      "Density" : 0.9967485549132948
    },
    "euclideanDistance" : 41.027150883154704,
    "generation" : 35,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4673038229376256,
      "LackOfCohesion" : 0.4871256653135007,
      "MetricsIntensity" : 0.033056378585268865,
      "Density" : 2.997284084736558
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "a500a380-ef44-4102-bc84-15f65b4765d1",
    "objectives" : {
      "NumberOfConcerns" : 0.9976060191518468,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.48604559693668026,
      "MetricsIntensity" : 0.03300801333752438,
      "Density" : 0.9936777456647399
    },
    "euclideanDistance" : 42.026419584386716,
    "generation" : 39,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4673038229376252,
      "LackOfCohesion" : 0.48604559693668026,
      "MetricsIntensity" : 0.03300801333752437,
      "Density" : 2.991299619358347
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "50d4fe18-da56-417c-92d3-dc608b4e0d71",
    "objectives" : {
      "NumberOfConcerns" : 0.9979480164158687,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.4859976213170712,
      "MetricsIntensity" : 0.03297313996582351,
      "Density" : 0.9938583815028902
    },
    "euclideanDistance" : 42.02643139313445,
    "generation" : 42,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4678068410462775,
      "LackOfCohesion" : 0.4859976213170712,
      "MetricsIntensity" : 0.03297313996582351,
      "Density" : 2.99184339314845
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "c44c6597-ba13-4df1-ac98-a1d753de143a",
    "objectives" : {
      "NumberOfConcerns" : 0.9972640218878249,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.4884154604913486,
      "MetricsIntensity" : 0.03307654190794011,
      "Density" : 0.994942196531792
    },
    "euclideanDistance" : 42.02646891214468,
    "generation" : 34,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4675390035228992,
      "LackOfCohesion" : 0.4884154604913486,
      "MetricsIntensity" : 0.03307654190794011,
      "Density" : 2.991852254209669
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "4d3c0abc-9b3b-4749-a170-04127d6d62cf",
    "objectives" : {
      "NumberOfConcerns" : 0.9972640218878249,
      "NumberOfRefactorings" : 43.0,
      "LackOfCohesion" : 0.48665822648575763,
      "MetricsIntensity" : 0.03306365762670561,
      "Density" : 0.9958453757225434
    },
    "euclideanDistance" : 43.025854703614684,
    "generation" : 48,
    "numberOfRefactorings" : 43,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4668008048289736,
      "LackOfCohesion" : 0.48665822648575763,
      "MetricsIntensity" : 0.033063657626705614,
      "Density" : 2.9961956521739137
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "ada8f675-ff2b-4122-9c03-dffb89880936",
    "objectives" : {
      "NumberOfConcerns" : 0.996922024623803,
      "NumberOfRefactorings" : 43.0,
      "LackOfCohesion" : 0.486863036214377,
      "MetricsIntensity" : 0.03306126385849839,
      "Density" : 0.9987355491329479
    },
    "euclideanDistance" : 43.02591608418677,
    "generation" : 40,
    "numberOfRefactorings" : 43,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4662977867203222,
      "LackOfCohesion" : 0.486863036214377,
      "MetricsIntensity" : 0.03306126385849839,
      "Density" : 3.0048913043478263
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "aebdb5b2-0512-4580-82d9-fbdf3c5857b4",
    "objectives" : {
      "NumberOfConcerns" : 0.9979480164158687,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.48810370560400035,
      "MetricsIntensity" : 0.03302220800138282,
      "Density" : 0.9929552023121387
    },
    "euclideanDistance" : 44.025233627669856,
    "generation" : 37,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4685455460493209,
      "LackOfCohesion" : 0.48810370560400035,
      "MetricsIntensity" : 0.03302220800138282,
      "Density" : 2.990750816104461
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.idFor(Class<?>), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "719aece4-470f-4216-9da0-70baac6ef136",
    "objectives" : {
      "NumberOfConcerns" : 0.9972640218878249,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.48766358419119693,
      "MetricsIntensity" : 0.033066486846190936,
      "Density" : 0.994400289017341
    },
    "euclideanDistance" : 44.025245900824316,
    "generation" : 37,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4675390035228988,
      "LackOfCohesion" : 0.48766358419119693,
      "MetricsIntensity" : 0.033066486846190936,
      "Density" : 2.991847826086958
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "bc0f6fe6-9c29-4d03-b407-414bd53467e4",
    "objectives" : {
      "NumberOfConcerns" : 0.996922024623803,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.48808372051319104,
      "MetricsIntensity" : 0.033043186963323874,
      "Density" : 0.9972904624277457
    },
    "euclideanDistance" : 44.025308168825624,
    "generation" : 42,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4670357322596874,
      "LackOfCohesion" : 0.48808372051319104,
      "MetricsIntensity" : 0.03304318696332388,
      "Density" : 3.00054347826087
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "8b235e88-3fe1-4156-b7cf-8d643a2d78e6",
    "objectives" : {
      "NumberOfConcerns" : 0.9979480164158687,
      "NumberOfRefactorings" : 46.0,
      "LackOfCohesion" : 0.4874952898596179,
      "MetricsIntensity" : 0.03296578489416112,
      "Density" : 0.9936777456647399
    },
    "euclideanDistance" : 46.024146207249814,
    "generation" : 38,
    "numberOfRefactorings" : 46,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4685455460493209,
      "LackOfCohesion" : 0.4874952898596179,
      "MetricsIntensity" : 0.03296578489416112,
      "Density" : 2.991299619358348
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "b009c4a6-debd-495e-87d8-eadd46c9c524",
    "objectives" : {
      "NumberOfConcerns" : 0.996922024623803,
      "NumberOfRefactorings" : 46.0,
      "LackOfCohesion" : 0.486417681455228,
      "MetricsIntensity" : 0.033068310649161846,
      "Density" : 0.9976517341040463
    },
    "euclideanDistance" : 46.02419861529087,
    "generation" : 42,
    "numberOfRefactorings" : 46,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4670357322596876,
      "LackOfCohesion" : 0.486417681455228,
      "MetricsIntensity" : 0.033068310649161846,
      "Density" : 3.00326264274062
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "404bf7d3-86ae-4b7c-80d6-6ccc869230e1",
    "objectives" : {
      "NumberOfConcerns" : 0.996922024623803,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.48655579168944546,
      "MetricsIntensity" : 0.03305166669628311,
      "Density" : 0.994942196531792
    },
    "euclideanDistance" : 47.02362802303452,
    "generation" : 40,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4662977867203222,
      "LackOfCohesion" : 0.48655579168944546,
      "MetricsIntensity" : 0.03305166669628311,
      "Density" : 2.9951060358890707
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "3b287ff6-f86f-4855-9594-7d79447680bf",
    "objectives" : {
      "NumberOfConcerns" : 0.9972640218878249,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.4863928867646355,
      "MetricsIntensity" : 0.03305749558948821,
      "Density" : 0.9953034682080925
    },
    "euclideanDistance" : 47.023641238865046,
    "generation" : 41,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4668008048289736,
      "LackOfCohesion" : 0.4863928867646355,
      "MetricsIntensity" : 0.033057495589488214,
      "Density" : 2.9961935834692768
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "1ed03f78-4e2d-4c16-8c73-42faa3fab042",
    "objectives" : {
      "NumberOfConcerns" : 0.9965800273597811,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.4889259368085466,
      "MetricsIntensity" : 0.03312021808897171,
      "Density" : 0.9962066473988439
    },
    "euclideanDistance" : 47.023672176423915,
    "generation" : 33,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4665324609964776,
      "LackOfCohesion" : 0.4889259368085466,
      "MetricsIntensity" : 0.03312021808897171,
      "Density" : 2.9956545355784905
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "06033bef-0c4a-4d4c-81dc-82a73d483370",
    "objectives" : {
      "NumberOfConcerns" : 0.996922024623803,
      "NumberOfRefactorings" : 48.0,
      "LackOfCohesion" : 0.4877972703923039,
      "MetricsIntensity" : 0.03303530301504256,
      "Density" : 0.9933164739884393
    },
    "euclideanDistance" : 48.02311494112938,
    "generation" : 26,
    "numberOfRefactorings" : 48,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4670357322596874,
      "LackOfCohesion" : 0.4877972703923039,
      "MetricsIntensity" : 0.03303530301504256,
      "Density" : 2.990212071778141
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "516f2acf-c151-4d5f-8dc6-0da2cbcc4bf8",
    "objectives" : {
      "NumberOfConcerns" : 0.9972640218878249,
      "NumberOfRefactorings" : 48.0,
      "LackOfCohesion" : 0.487728304331043,
      "MetricsIntensity" : 0.03299869188717046,
      "Density" : 0.9936777456647399
    },
    "euclideanDistance" : 48.0231287902412,
    "generation" : 43,
    "numberOfRefactorings" : 48,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4675390035228992,
      "LackOfCohesion" : 0.487728304331043,
      "MetricsIntensity" : 0.03299869188717045,
      "Density" : 2.991299619358348
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "a0f9b83c-621b-4ce5-9ad9-a303a6770a49",
    "objectives" : {
      "NumberOfConcerns" : 0.9965800273597811,
      "NumberOfRefactorings" : 49.0,
      "LackOfCohesion" : 0.48817406050839507,
      "MetricsIntensity" : 0.033110162392730166,
      "Density" : 0.9956647398843931
    },
    "euclideanDistance" : 49.02268791306111,
    "generation" : 42,
    "numberOfRefactorings" : 49,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4665324609964772,
      "LackOfCohesion" : 0.48817406050839507,
      "MetricsIntensity" : 0.033110162392730166,
      "Density" : 2.9956521739130433
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "df12b59b-5347-40a5-8c15-f83909975f1f",
    "objectives" : {
      "NumberOfConcerns" : 0.9965800273597811,
      "NumberOfRefactorings" : 49.0,
      "LackOfCohesion" : 0.48725989775058354,
      "MetricsIntensity" : 0.03314534050582497,
      "Density" : 0.9965679190751445
    },
    "euclideanDistance" : 49.02269719415503,
    "generation" : 14,
    "numberOfRefactorings" : 49,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4665324609964774,
      "LackOfCohesion" : 0.48725989775058354,
      "MetricsIntensity" : 0.03314534050582497,
      "Density" : 2.9983695652173914
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "15318f5d-0749-4fac-9823-bcc3e4c32d02",
    "objectives" : {
      "NumberOfConcerns" : 0.9962380300957593,
      "NumberOfRefactorings" : 49.0,
      "LackOfCohesion" : 0.4885941968303892,
      "MetricsIntensity" : 0.03308686441334018,
      "Density" : 0.9985549132947977
    },
    "euclideanDistance" : 49.02274391705596,
    "generation" : 35,
    "numberOfRefactorings" : 49,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4660291897332662,
      "LackOfCohesion" : 0.4885941968303892,
      "MetricsIntensity" : 0.03308686441334019,
      "Density" : 3.0043478260869567
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "4d5c2fad-d505-4c09-bcff-7a54a6a32713",
    "objectives" : {
      "NumberOfConcerns" : 0.9962380300957593,
      "NumberOfRefactorings" : 49.0,
      "LackOfCohesion" : 0.4885732328653489,
      "MetricsIntensity" : 0.03308514590295906,
      "Density" : 0.9987355491329479
    },
    "euclideanDistance" : 49.02274738670266,
    "generation" : 42,
    "numberOfRefactorings" : 49,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4660291897332662,
      "LackOfCohesion" : 0.4885732328653489,
      "MetricsIntensity" : 0.03308514590295906,
      "Density" : 3.0048913043478263
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "8a6e36ce-ade7-49ae-8e2b-86c35fe96603",
    "objectives" : {
      "NumberOfConcerns" : 0.9965800273597811,
      "NumberOfRefactorings" : 49.0,
      "LackOfCohesion" : 0.488525230890152,
      "MetricsIntensity" : 0.03304862403022756,
      "Density" : 0.9989161849710982
    },
    "euclideanDistance" : 49.022757515344814,
    "generation" : 42,
    "numberOfRefactorings" : 49,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4665324609964772,
      "LackOfCohesion" : 0.488525230890152,
      "MetricsIntensity" : 0.03304862403022756,
      "Density" : 3.0054347826086962
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "ac8017b6-2e1f-4029-903a-d71084d195e7",
    "objectives" : {
      "NumberOfConcerns" : 0.9972640218878249,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.4859472725411102,
      "MetricsIntensity" : 0.033064540300533005,
      "Density" : 0.9942196531791907
    },
    "euclideanDistance" : 50.022197535330605,
    "generation" : 38,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4675390035228992,
      "LackOfCohesion" : 0.4859472725411102,
      "MetricsIntensity" : 0.033064540300533005,
      "Density" : 2.9945593035908584
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "9e1fbf60-2235-4b13-a490-d35e58ca346f",
    "objectives" : {
      "NumberOfConcerns" : 0.9965800273597811,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.4884814752276609,
      "MetricsIntensity" : 0.03312730259383806,
      "Density" : 0.9951228323699421
    },
    "euclideanDistance" : 50.022226587510616,
    "generation" : 36,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.467270896273918,
      "LackOfCohesion" : 0.4884814752276609,
      "MetricsIntensity" : 0.03312730259383806,
      "Density" : 2.9940217391304347
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "66dcda8c-9ef5-4177-94df-8e6eef121271",
    "objectives" : {
      "NumberOfConcerns" : 0.9965800273597811,
      "NumberOfRefactorings" : 51.0,
      "LackOfCohesion" : 0.48674419897919574,
      "MetricsIntensity" : 0.03311610042984591,
      "Density" : 0.9934971098265896
    },
    "euclideanDistance" : 51.02174266770505,
    "generation" : 38,
    "numberOfRefactorings" : 51,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4665324609964772,
      "LackOfCohesion" : 0.48674419897919574,
      "MetricsIntensity" : 0.03311610042984591,
      "Density" : 2.9907558455682435
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "5b8bb9cb-4e37-49bf-9434-64d11a2e380c",
    "objectives" : {
      "NumberOfConcerns" : 0.9962380300957593,
      "NumberOfRefactorings" : 51.0,
      "LackOfCohesion" : 0.486928157772426,
      "MetricsIntensity" : 0.03311198683019344,
      "Density" : 0.9989161849710982
    },
    "euclideanDistance" : 51.02184354952014,
    "generation" : 15,
    "numberOfRefactorings" : 51,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4660291897332673,
      "LackOfCohesion" : 0.486928157772426,
      "MetricsIntensity" : 0.03311198683019344,
      "Density" : 3.007069059271343
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "c4a36a08-c4b8-4e4d-9160-8251b124ef59",
    "objectives" : {
      "NumberOfConcerns" : 0.9965800273597811,
      "NumberOfRefactorings" : 52.0,
      "LackOfCohesion" : 0.4880805479259346,
      "MetricsIntensity" : 0.03305729788740577,
      "Density" : 0.9978323699421965
    },
    "euclideanDistance" : 52.02142017088388,
    "generation" : 22,
    "numberOfRefactorings" : 52,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.467270896273918,
      "LackOfCohesion" : 0.4880805479259346,
      "MetricsIntensity" : 0.03305729788740577,
      "Density" : 3.0038064165307232
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "6a8f5714-8106-4867-99c5-7c5292ab0e4c",
    "objectives" : {
      "NumberOfConcerns" : 0.9962380300957593,
      "NumberOfRefactorings" : 53.0,
      "LackOfCohesion" : 0.48830774670950206,
      "MetricsIntensity" : 0.033078980465058895,
      "Density" : 0.9945809248554913
    },
    "euclideanDistance" : 53.02095076574109,
    "generation" : 26,
    "numberOfRefactorings" : 53,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4660291897332665,
      "LackOfCohesion" : 0.48830774670950206,
      "MetricsIntensity" : 0.03307898046505889,
      "Density" : 2.994018488308863
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "53bf310a-9ed3-4e60-809f-8d4080965bbe",
    "objectives" : {
      "NumberOfConcerns" : 0.9965800273597811,
      "NumberOfRefactorings" : 53.0,
      "LackOfCohesion" : 0.48788761038750783,
      "MetricsIntensity" : 0.03310227844444887,
      "Density" : 0.9989161849710982
    },
    "euclideanDistance" : 53.02103483879523,
    "generation" : 42,
    "numberOfRefactorings" : 53,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.466532460996477,
      "LackOfCohesion" : 0.48788761038750783,
      "MetricsIntensity" : 0.03310227844444887,
      "Density" : 3.0070690592713425
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "d780be93-f296-412f-bed1-f512d6795014",
    "objectives" : {
      "NumberOfConcerns" : 0.9972640218878249,
      "NumberOfRefactorings" : 54.0,
      "LackOfCohesion" : 0.4875607964950846,
      "MetricsIntensity" : 0.033016484422127644,
      "Density" : 0.9938583815028902
    },
    "euclideanDistance" : 54.0205617855864,
    "generation" : 39,
    "numberOfRefactorings" : 54,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.468277945619336,
      "LackOfCohesion" : 0.4875607964950846,
      "MetricsIntensity" : 0.033016484422127644,
      "Density" : 2.9934711643090326
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "42f21f61-5331-41e9-acb7-a1f185eee746",
    "objectives" : {
      "NumberOfConcerns" : 0.9965800273597811,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.48645774885830845,
      "MetricsIntensity" : 0.033108216481564624,
      "Density" : 0.993135838150289
    },
    "euclideanDistance" : 55.020152924536426,
    "generation" : 39,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4665324609964778,
      "LackOfCohesion" : 0.48645774885830845,
      "MetricsIntensity" : 0.033108216481564624,
      "Density" : 2.9912948857453756
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "649e5c0d-51e2-4d7b-bd8a-9ad49d9ffc4d",
    "objectives" : {
      "NumberOfConcerns" : 0.9962380300957593,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.4866417076515386,
      "MetricsIntensity" : 0.033104102881912144,
      "Density" : 0.994942196531792
    },
    "euclideanDistance" : 55.0201809904357,
    "generation" : 14,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4660291897332665,
      "LackOfCohesion" : 0.4866417076515386,
      "MetricsIntensity" : 0.033104102881912144,
      "Density" : 2.9967355821545163
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "0080fba7-b812-49f9-830d-7ac7ab857a9b",
    "objectives" : {
      "NumberOfConcerns" : 0.9965800273597811,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.48657274171130155,
      "MetricsIntensity" : 0.0330658612369842,
      "Density" : 0.9953034682080925
    },
    "euclideanDistance" : 55.0201930851657,
    "generation" : 42,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4665324609964776,
      "LackOfCohesion" : 0.48657274171130155,
      "MetricsIntensity" : 0.0330658612369842,
      "Density" : 2.997823721436344
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "762ce968-bd95-430f-b832-431c933ac769",
    "objectives" : {
      "NumberOfConcerns" : 0.9958960328317373,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.4889922334202415,
      "MetricsIntensity" : 0.03317100162234659,
      "Density" : 0.9963872832369942
    },
    "euclideanDistance" : 55.0202218302153,
    "generation" : 16,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4662638469284999,
      "LackOfCohesion" : 0.4889922334202415,
      "MetricsIntensity" : 0.033171001622346596,
      "Density" : 2.997826086956522
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "cb8b101b-6879-4ed5-b31b-aaf164787814",
    "objectives" : {
      "NumberOfConcerns" : 0.9958960328317373,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.48899223342024184,
      "MetricsIntensity" : 0.03317100162234658,
      "Density" : 0.9963872832369942
    },
    "euclideanDistance" : 55.0202218302153,
    "generation" : 7,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4662638469285,
      "LackOfCohesion" : 0.48899223342024184,
      "MetricsIntensity" : 0.03317100162234658,
      "Density" : 2.997826086956522
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "55b69b3d-e87b-49fd-b5dc-b337e68ef326",
    "objectives" : {
      "NumberOfConcerns" : 0.9962380300957593,
      "NumberOfRefactorings" : 56.0,
      "LackOfCohesion" : 0.48786294377571787,
      "MetricsIntensity" : 0.03308604092960265,
      "Density" : 0.9934971098265896
    },
    "euclideanDistance" : 56.01980570885494,
    "generation" : 24,
    "numberOfRefactorings" : 56,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4667673716012088,
      "LackOfCohesion" : 0.48786294377571787,
      "MetricsIntensity" : 0.03308604092960265,
      "Density" : 2.9923830250272045
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "c9c4bac8-c069-4b81-ad8e-98b1e1cd4a6f",
    "objectives" : {
      "NumberOfConcerns" : 0.9965800273597811,
      "NumberOfRefactorings" : 56.0,
      "LackOfCohesion" : 0.4877939396327006,
      "MetricsIntensity" : 0.03304940958575713,
      "Density" : 0.9938583815028902
    },
    "euclideanDistance" : 56.019817577571885,
    "generation" : 40,
    "numberOfRefactorings" : 56,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.467270896273918,
      "LackOfCohesion" : 0.4877939396327006,
      "MetricsIntensity" : 0.03304940958575713,
      "Density" : 2.9934711643090326
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "0dca0f60-aef0-45c5-a03b-d751e3ffb08e",
    "objectives" : {
      "NumberOfConcerns" : 0.9955540355677155,
      "NumberOfRefactorings" : 57.0,
      "LackOfCohesion" : 0.4886603102615329,
      "MetricsIntensity" : 0.03313762952944524,
      "Density" : 0.9987355491329479
    },
    "euclideanDistance" : 57.019544785416805,
    "generation" : 7,
    "numberOfRefactorings" : 57,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4657603222557911,
      "LackOfCohesion" : 0.4886603102615329,
      "MetricsIntensity" : 0.03313762952944524,
      "Density" : 3.0065252854812403
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "181a7ce5-a4b4-43a6-9f24-9ebb5fb77331",
    "objectives" : {
      "NumberOfConcerns" : 0.9955540355677155,
      "NumberOfRefactorings" : 57.0,
      "LackOfCohesion" : 0.4886603102615328,
      "MetricsIntensity" : 0.03313762952944526,
      "Density" : 0.9987355491329479
    },
    "euclideanDistance" : 57.019544785416805,
    "generation" : 34,
    "numberOfRefactorings" : 57,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.465760322255791,
      "LackOfCohesion" : 0.4886603102615328,
      "MetricsIntensity" : 0.03313762952944527,
      "Density" : 3.0065252854812403
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "d500cb34-9ddd-4941-87b1-04b9e7fd3c14",
    "objectives" : {
      "NumberOfConcerns" : 0.9958960328317373,
      "NumberOfRefactorings" : 57.0,
      "LackOfCohesion" : 0.48859130623960556,
      "MetricsIntensity" : 0.033099366768203166,
      "Density" : 0.9990968208092486
    },
    "euclideanDistance" : 57.019556473180096,
    "generation" : 41,
    "numberOfRefactorings" : 57,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4662638469285,
      "LackOfCohesion" : 0.48859130623960556,
      "MetricsIntensity" : 0.03309936676820316,
      "Density" : 3.0076128330614464
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "0680e501-277b-45d3-827a-90cec3387fdd",
    "objectives" : {
      "NumberOfConcerns" : 0.9958960328317373,
      "NumberOfRefactorings" : 59.0,
      "LackOfCohesion" : 0.48870562512700716,
      "MetricsIntensity" : 0.033163113320697914,
      "Density" : 0.9960260115606936
    },
    "euclideanDistance" : 59.01884283603018,
    "generation" : 19,
    "numberOfRefactorings" : 59,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4662638469285003,
      "LackOfCohesion" : 0.48870562512700716,
      "MetricsIntensity" : 0.033163113320697914,
      "Density" : 2.998368678629691
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "6ac892d0-c095-4e21-8655-a7e63ee1ff9e",
    "objectives" : {
      "NumberOfConcerns" : 0.9958960328317373,
      "NumberOfRefactorings" : 59.0,
      "LackOfCohesion" : 0.4887056251270071,
      "MetricsIntensity" : 0.033163113320697955,
      "Density" : 0.9960260115606936
    },
    "euclideanDistance" : 59.01884283603018,
    "generation" : 20,
    "numberOfRefactorings" : 59,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4662638469284999,
      "LackOfCohesion" : 0.4887056251270071,
      "MetricsIntensity" : 0.033163113320697955,
      "Density" : 2.99836867862969
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.values()', targetType='hudson.util.Area'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='jenkins.telemetry.Correlator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.queue.CauseOfBlockage.BecauseNodeIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='jenkins.tasks.SimpleBuildWrapper.Disposer'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "3c9ef4b5-9a06-4f35-8c67-4e93fe1fc8c9",
    "objectives" : {
      "NumberOfConcerns" : 0.9955540355677155,
      "NumberOfRefactorings" : 61.0,
      "LackOfCohesion" : 0.4883737019682982,
      "MetricsIntensity" : 0.033129741227796626,
      "Density" : 0.9947615606936416
    },
    "euclideanDistance" : 61.01819634218056,
    "generation" : 15,
    "numberOfRefactorings" : 61,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.465760322255791,
      "LackOfCohesion" : 0.4883737019682982,
      "MetricsIntensity" : 0.033129741227796626,
      "Density" : 2.9961915125136023
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.UpdateSite.WarningVersionRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='jenkins.tasks.filters.EnvVarsFilterRuleWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  }, {
    "solutionId" : "e37a6a24-3679-426e-a825-7ff8d6364616",
    "objectives" : {
      "NumberOfConcerns" : 0.9958960328317373,
      "NumberOfRefactorings" : 61.0,
      "LackOfCohesion" : 0.4883046979463711,
      "MetricsIntensity" : 0.033091478466554525,
      "Density" : 0.9951228323699421
    },
    "euclideanDistance" : 61.018207240820324,
    "generation" : 38,
    "numberOfRefactorings" : 61,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4662638469284999,
      "LackOfCohesion" : 0.4883046979463711,
      "MetricsIntensity" : 0.033091478466554525,
      "Density" : 2.997279651795429
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.security.seed.UserSeedProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='jenkins.security.s2m.RejectedCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessTree.ListAll'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.security.ResourceDomainRootAction.Redirection'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.views.ViewsTabBarDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.model.Fingerprint.RangeSet.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.init.impl.InitialUserContent'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.model.TransientUserActionFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.model.Computer.TerminationRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='hudson.model.Descriptor.FormException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='jenkins.mvn.FilePathSettingsProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.Retrier.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.util.RunList.PredicateAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='jenkins.security.s2m.RunningBuildFilePathFilter.ChannelConfiguratorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.UserProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.model.CauseOfInterruption.UserInterruption'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.ItemList",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.get(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.getAll(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancelAll()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.remove(Task)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.put(Task, T)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.ItemList.cancel(Task)', targetType='hudson.model.Queue.Item'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.DescriptorVisibilityFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.util.DirectedGraph.SCC'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.util.DirectedGraph.SCC'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.console.ConsoleAnnotator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='OutputImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.model.View.AsynchPeople.People'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.model.View.AsynchPeople.People'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.idFor(Class<?>)', targetType='hudson.search.SearchItems'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.model.RSS'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.model.TimeSeries'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.FilePath.UnzipLocal'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.model.queue.AbstractQueueSorterImpl'"
      } ]
    } ]
  } ]
}