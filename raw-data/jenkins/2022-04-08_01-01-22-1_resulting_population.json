{
  "executionId" : "cbda84a5-4d16-47c1-9287-914017d4e2d2",
  "computingTime" : 3740802,
  "maxEvaluations" : 100,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 31,
  "algorithm" : "MOSA",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.035021551724138,
    "meanNumConcerns" : 1.5050352467270895,
    "meanMetricsIntensity" : 0.032969370243008465,
    "meanLackOfCohesion" : 0.4853503005035552
  },
  "population" : [ {
    "solutionId" : "322dcc57-fc4e-4d85-bad5-f511d831eb83",
    "objectives" : {
      "NumberOfConcerns" : 0.9969889595182335,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4861380800824215,
      "MetricsIntensity" : 0.03292740918616089,
      "Density" : 0.9921888869163856
    },
    "euclideanDistance" : 9.122271658962122,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4997483643683949,
      "LackOfCohesion" : 0.4861380800824215,
      "MetricsIntensity" : 0.03292740918616089,
      "Density" : 3.0113146551724146
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.queue.MappingWorksheet.ExecutorSlot'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.authenticate2(Queue.Item)', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "42e00784-c213-4506-8220-02f6de2af398",
    "objectives" : {
      "NumberOfConcerns" : 0.9969889595182335,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4861380800824215,
      "MetricsIntensity" : 0.03292740918616089,
      "Density" : 0.9921888869163856
    },
    "euclideanDistance" : 9.122271658962122,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4997483643683946,
      "LackOfCohesion" : 0.4861380800824215,
      "MetricsIntensity" : 0.03292740918616089,
      "Density" : 3.011314655172414
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.queue.MappingWorksheet.ExecutorSlot'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.authenticate2(Queue.Item)', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "679875d3-4a6b-4bb7-9504-d8d69a2ab131",
    "objectives" : {
      "NumberOfConcerns" : 0.9969889595182335,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4861380800824215,
      "MetricsIntensity" : 0.03292740918616089,
      "Density" : 0.9921888869163856
    },
    "euclideanDistance" : 9.122271658962122,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4997483643683946,
      "LackOfCohesion" : 0.4861380800824215,
      "MetricsIntensity" : 0.03292740918616089,
      "Density" : 3.0113146551724146
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.queue.MappingWorksheet.ExecutorSlot'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.authenticate2(Queue.Item)', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "23db03fd-e5cb-42d3-9735-4cc77d850206",
    "objectives" : {
      "NumberOfConcerns" : 0.9976580796252927,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.48613808008242143,
      "MetricsIntensity" : 0.03285018549557376,
      "Density" : 0.9923664122137404
    },
    "euclideanDistance" : 9.122363844285367,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5007549068948165,
      "LackOfCohesion" : 0.48613808008242143,
      "MetricsIntensity" : 0.03285018549557375,
      "Density" : 3.0118534482758625
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.FilePath.SecureFileCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSON(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "65a6f438-619c-4951-a16b-21b887b5e2c4",
    "objectives" : {
      "NumberOfConcerns" : 0.9976580796252927,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.48613808008242143,
      "MetricsIntensity" : 0.03285018549557376,
      "Density" : 0.9923664122137404
    },
    "euclideanDistance" : 9.122363844285367,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5007549068948163,
      "LackOfCohesion" : 0.48613808008242143,
      "MetricsIntensity" : 0.03285018549557376,
      "Density" : 3.0118534482758625
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.FilePath.SecureFileCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "ba7d113a-256f-4ea4-8e19-cbc4b3d998a5",
    "objectives" : {
      "NumberOfConcerns" : 0.9976580796252927,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.48613808008242165,
      "MetricsIntensity" : 0.032850185495573746,
      "Density" : 0.9923664122137404
    },
    "euclideanDistance" : 9.122363844285367,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5007549068948167,
      "LackOfCohesion" : 0.48613808008242165,
      "MetricsIntensity" : 0.032850185495573746,
      "Density" : 3.011853448275862
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.FilePath.SecureFileCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "b3424c24-877b-4a9e-a7cd-896995a88cbb",
    "objectives" : {
      "NumberOfConcerns" : 0.9973235195717631,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4861380800824216,
      "MetricsIntensity" : 0.032923076366513815,
      "Density" : 0.9927214628084502
    },
    "euclideanDistance" : 9.122366155075953,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.500251635631605,
      "LackOfCohesion" : 0.4861380800824216,
      "MetricsIntensity" : 0.032923076366513815,
      "Density" : 3.011308562197093
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.queue.MappingWorksheet.ExecutorSlot'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.authenticate2(Queue.Item)', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "03b59e01-f92a-4148-a280-335e4466784e",
    "objectives" : {
      "NumberOfConcerns" : 0.9973235195717631,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4861380800824215,
      "MetricsIntensity" : 0.03292307636651382,
      "Density" : 0.9927214628084502
    },
    "euclideanDistance" : 9.122366155075953,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5002516356316054,
      "LackOfCohesion" : 0.4861380800824215,
      "MetricsIntensity" : 0.03292307636651382,
      "Density" : 3.011308562197091
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.queue.MappingWorksheet.ExecutorSlot'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.authenticate2(Queue.Item)', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "74489062-edc9-462f-a2dd-f6b2cab5d693",
    "objectives" : {
      "NumberOfConcerns" : 0.9976580796252927,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4861372732456091,
      "MetricsIntensity" : 0.03284846698519262,
      "Density" : 0.9925439375110954
    },
    "euclideanDistance" : 9.12238310870321,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5007549068948167,
      "LackOfCohesion" : 0.4861372732456091,
      "MetricsIntensity" : 0.03284846698519262,
      "Density" : 3.012392241379311
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.util.CopyOnWriteList'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "f5d66cd4-9d70-4bc0-b73e-c8ce7cfdd4b8",
    "objectives" : {
      "NumberOfConcerns" : 0.9979926396788223,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.48613808008242143,
      "MetricsIntensity" : 0.032845853328809224,
      "Density" : 0.9928989881058051
    },
    "euclideanDistance" : 9.122458374386904,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5012581781580272,
      "LackOfCohesion" : 0.48613808008242143,
      "MetricsIntensity" : 0.03284585332880922,
      "Density" : 3.011847065158858
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.FilePath.SecureFileCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSON(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "10aab398-cd58-46ac-bf2a-d185a5e586d6",
    "objectives" : {
      "NumberOfConcerns" : 0.9979926396788223,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.48613808008242154,
      "MetricsIntensity" : 0.03284585332880922,
      "Density" : 0.9928989881058051
    },
    "euclideanDistance" : 9.122458374386904,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5012581781580272,
      "LackOfCohesion" : 0.48613808008242154,
      "MetricsIntensity" : 0.03284585332880922,
      "Density" : 3.011847065158859
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.FilePath.SecureFileCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "be78ce01-73f7-46f9-833e-ec0f47dfcaf8",
    "objectives" : {
      "NumberOfConcerns" : 0.9979926396788223,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.48613727324560885,
      "MetricsIntensity" : 0.03284413481842809,
      "Density" : 0.9930765134031599
    },
    "euclideanDistance" : 9.122477648969973,
    "generation" : 1,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5012581781580274,
      "LackOfCohesion" : 0.48613727324560885,
      "MetricsIntensity" : 0.03284413481842809,
      "Density" : 3.0123855681206244
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.util.CopyOnWriteList'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "f84f2008-d567-43af-8a6d-2156278e25e6",
    "objectives" : {
      "NumberOfConcerns" : 0.9969889595182335,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48610797773443853,
      "MetricsIntensity" : 0.03292740918616089,
      "Density" : 0.9921888869163856
    },
    "euclideanDistance" : 10.110183527167763,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4997483643683949,
      "LackOfCohesion" : 0.48610797773443853,
      "MetricsIntensity" : 0.03292740918616089,
      "Density" : 3.0113146551724146
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.queue.MappingWorksheet.ExecutorSlot'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.authenticate2(Queue.Item)', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "da86bd51-7248-4372-86e1-763937b2f7b8",
    "objectives" : {
      "NumberOfConcerns" : 0.9969889595182335,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48610797773443853,
      "MetricsIntensity" : 0.03292740918616089,
      "Density" : 0.9921888869163856
    },
    "euclideanDistance" : 10.110183527167763,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4997483643683946,
      "LackOfCohesion" : 0.48610797773443853,
      "MetricsIntensity" : 0.03292740918616089,
      "Density" : 3.0113146551724146
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.queue.MappingWorksheet.ExecutorSlot'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.authenticate2(Queue.Item)', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "d6529312-f1b7-4db8-85e2-278c3c99b002",
    "objectives" : {
      "NumberOfConcerns" : 0.9969889595182335,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48610797773443853,
      "MetricsIntensity" : 0.03292740918616089,
      "Density" : 0.9921888869163856
    },
    "euclideanDistance" : 10.110183527167763,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4997483643683946,
      "LackOfCohesion" : 0.48610797773443853,
      "MetricsIntensity" : 0.03292740918616089,
      "Density" : 3.011314655172414
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.isApplicable(Collection<? extends Item>)', targetType='hudson.model.queue.MappingWorksheet.ExecutorSlot'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.authenticate2(Queue.Item)', targetType='jenkins.model.JobGlobalBuildDiscarderStrategy'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "0d75f9c7-6ba4-4304-8f2a-8d415d953295",
    "objectives" : {
      "NumberOfConcerns" : 0.9976580796252927,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48610797773443865,
      "MetricsIntensity" : 0.03284585332880922,
      "Density" : 0.9923664122137404
    },
    "euclideanDistance" : 10.110266690648153,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5007549068948165,
      "LackOfCohesion" : 0.48610797773443865,
      "MetricsIntensity" : 0.03284585332880922,
      "Density" : 3.0118534482758625
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.FilePath.SecureFileCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getName()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "7d2a5fa6-bbcb-4a76-92a6-8fc65f370cc6",
    "objectives" : {
      "NumberOfConcerns" : 0.9976580796252927,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4861079777344384,
      "MetricsIntensity" : 0.032845853328809224,
      "Density" : 0.9923664122137404
    },
    "euclideanDistance" : 10.110266690648153,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5007549068948156,
      "LackOfCohesion" : 0.4861079777344384,
      "MetricsIntensity" : 0.032845853328809224,
      "Density" : 3.011853448275861
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.FilePath.SecureFileCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getName()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "de44e846-78f9-46d5-8548-7de5a355e57c",
    "objectives" : {
      "NumberOfConcerns" : 0.9976580796252927,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4861079777344383,
      "MetricsIntensity" : 0.03285018549557376,
      "Density" : 0.9923664122137404
    },
    "euclideanDistance" : 10.110266704723262,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5007549068948167,
      "LackOfCohesion" : 0.4861079777344383,
      "MetricsIntensity" : 0.03285018549557376,
      "Density" : 3.011853448275862
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.FilePath.SecureFileCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSON(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "6e27f5dc-1f52-4fac-8dd2-56cde67364ae",
    "objectives" : {
      "NumberOfConcerns" : 0.9976580796252927,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4861079777344383,
      "MetricsIntensity" : 0.03285018549557376,
      "Density" : 0.9923664122137404
    },
    "euclideanDistance" : 10.110266704723262,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5007549068948165,
      "LackOfCohesion" : 0.4861079777344383,
      "MetricsIntensity" : 0.03285018549557376,
      "Density" : 3.0118534482758617
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.FilePath.SecureFileCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getName()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSON(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "a9f1db25-a577-4a8e-972d-6e0814817873",
    "objectives" : {
      "NumberOfConcerns" : 0.9976580796252927,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48610717089762623,
      "MetricsIntensity" : 0.03284413481842809,
      "Density" : 0.9925439375110954
    },
    "euclideanDistance" : 10.110284072691613,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5007549068948154,
      "LackOfCohesion" : 0.48610717089762623,
      "MetricsIntensity" : 0.0328441348184281,
      "Density" : 3.012392241379311
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.util.CopyOnWriteList'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getName()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "499d72e8-b154-4a92-8203-68b522856514",
    "objectives" : {
      "NumberOfConcerns" : 0.9976580796252927,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48610717089762606,
      "MetricsIntensity" : 0.03284846698519263,
      "Density" : 0.9925439375110954
    },
    "euclideanDistance" : 10.110284086765962,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.500754906894816,
      "LackOfCohesion" : 0.48610717089762606,
      "MetricsIntensity" : 0.03284846698519263,
      "Density" : 3.012392241379311
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.util.CopyOnWriteList'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getName()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSON(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "30a67784-5aee-4b71-9734-542de34f5a36",
    "objectives" : {
      "NumberOfConcerns" : 0.9976580796252927,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4861071708976261,
      "MetricsIntensity" : 0.03284846698519262,
      "Density" : 0.9925439375110954
    },
    "euclideanDistance" : 10.110284086765962,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5007549068948167,
      "LackOfCohesion" : 0.4861071708976261,
      "MetricsIntensity" : 0.03284846698519262,
      "Density" : 3.012392241379311
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.util.CopyOnWriteList'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getName()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSON(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "5efe7ced-867a-429d-9ecf-487f857fb3e3",
    "objectives" : {
      "NumberOfConcerns" : 0.9976580796252927,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48607118597579235,
      "MetricsIntensity" : 0.03285018549557375,
      "Density" : 0.9923664122137404
    },
    "euclideanDistance" : 11.100335899082271,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5007549068948167,
      "LackOfCohesion" : 0.48607118597579235,
      "MetricsIntensity" : 0.03285018549557375,
      "Density" : 3.011853448275861
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.FilePath.SecureFileCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getName()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSON(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "3f17c87f-165f-4c07-bd9a-57fb11af848e",
    "objectives" : {
      "NumberOfConcerns" : 0.9976580796252927,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48607118597579246,
      "MetricsIntensity" : 0.032850185495573746,
      "Density" : 0.9923664122137404
    },
    "euclideanDistance" : 11.100335899082271,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5007549068948165,
      "LackOfCohesion" : 0.48607118597579246,
      "MetricsIntensity" : 0.03285018549557375,
      "Density" : 3.0118534482758625
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.FilePath.SecureFileCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getName()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "3f6b0ba7-b3bd-4afb-9d3e-15a050714bfe",
    "objectives" : {
      "NumberOfConcerns" : 0.9976580796252927,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48638478694129744,
      "MetricsIntensity" : 0.03284402772268407,
      "Density" : 0.9923664122137404
    },
    "euclideanDistance" : 11.100349617514603,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5007549068948165,
      "LackOfCohesion" : 0.48638478694129744,
      "MetricsIntensity" : 0.03284402772268407,
      "Density" : 3.0118534482758625
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.FilePath.SecureFileCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getName()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSON(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "9f34a25c-b0d1-4d42-adc9-6c0b2889edcc",
    "objectives" : {
      "NumberOfConcerns" : 0.9976580796252927,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48607037913897994,
      "MetricsIntensity" : 0.032849838185076786,
      "Density" : 0.9925439375110954
    },
    "euclideanDistance" : 11.100351734836007,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5007549068948163,
      "LackOfCohesion" : 0.48607037913897994,
      "MetricsIntensity" : 0.03284983818507678,
      "Density" : 3.012392241379311
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.getApi()', targetType='hudson.util.CopyOnWriteList'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getName()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getRun()', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSON(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "7907735d-19ef-40df-b2d9-2c6f6afa61a8",
    "objectives" : {
      "NumberOfConcerns" : 0.9973235195717631,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48602519627748475,
      "MetricsIntensity" : 0.03285155669545791,
      "Density" : 0.9918338363216759
    },
    "euclideanDistance" : 12.091967924112165,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5002516356316054,
      "LackOfCohesion" : 0.48602519627748475,
      "MetricsIntensity" : 0.03285155669545791,
      "Density" : 3.010237068965518
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.FilePath.SecureFileCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getName()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getRun()', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "aaeb6e8c-b726-489d-ba17-30175ceddd2d",
    "objectives" : {
      "NumberOfConcerns" : 0.9973235195717631,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48602519627748486,
      "MetricsIntensity" : 0.032851556695457904,
      "Density" : 0.9918338363216759
    },
    "euclideanDistance" : 12.091967924112165,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5002516356316051,
      "LackOfCohesion" : 0.48602519627748486,
      "MetricsIntensity" : 0.032851556695457904,
      "Density" : 3.0102370689655173
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.FilePath.SecureFileCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getName()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getRun()', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "9445b9cf-dafc-42af-a978-3583c50d1c76",
    "objectives" : {
      "NumberOfConcerns" : 0.9969889595182335,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.485966066665375,
      "MetricsIntensity" : 0.0328769090085792,
      "Density" : 0.9913012604296112
    },
    "euclideanDistance" : 13.084873292601147,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4997483643683946,
      "LackOfCohesion" : 0.485966066665375,
      "MetricsIntensity" : 0.0328769090085792,
      "Density" : 3.008620689655172
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.FilePath.SecureFileCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getName()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getJob()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getRun()', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.authenticate2(Queue.Task)', targetType='jenkins.security.QueueItemAuthenticatorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSON(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "5b8604f7-cb18-4713-94f4-2402ddc75603",
    "objectives" : {
      "NumberOfConcerns" : 0.9973235195717631,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4859660666653751,
      "MetricsIntensity" : 0.0328522332743481,
      "Density" : 0.9918338363216759
    },
    "euclideanDistance" : 13.084939084640206,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5002516356316056,
      "LackOfCohesion" : 0.4859660666653751,
      "MetricsIntensity" : 0.032852233274348094,
      "Density" : 3.010237068965518
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.FilePath.SecureFileCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getName()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getJob()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getRun()', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSON(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  }, {
    "solutionId" : "38b15ec3-7020-47db-8e72-4bab7da9d8dc",
    "objectives" : {
      "NumberOfConcerns" : 0.9973235195717631,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4863020054843436,
      "MetricsIntensity" : 0.03284973239509782,
      "Density" : 0.9918338363216759
    },
    "euclideanDistance" : 13.08495155921565,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5002516356316054,
      "LackOfCohesion" : 0.4863020054843436,
      "MetricsIntensity" : 0.03284973239509782,
      "Density" : 3.0102370689655173
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.View.People.toList(Map<User,UserInfo>)', targetType='hudson.FilePath.SecureFileCallable'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.BuildPtr",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getName()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.hasPermissionToDiscoverBuild()', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.is(Job)', targetType='hudson.model.Descriptor.Self'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.BuildPtr.getRun()', targetType='hudson.model.Descriptor.Self'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.FilePath.SymlinkDiscardingFileFilter'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.GlobalNodePropertiesConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.GlobalNodePropertiesConfiguration.configure(StaplerRequest, JSONObject)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.PlainCLIProtocol.EitherSide",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.cli.PlainCLIProtocol.EitherSide.out], extractedMethods=[hudson.cli.PlainCLIProtocol.EitherSide.send(Op, byte[], int, int), hudson.cli.PlainCLIProtocol.EitherSide.handle(DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.handle(Op, DataInputStream), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, int), hudson.cli.PlainCLIProtocol.EitherSide.send(Op, String), hudson.cli.PlainCLIProtocol.EitherSide.close(), hudson.cli.PlainCLIProtocol.EitherSide.handleClose()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.QueueItemAuthenticator",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.QueueItemAuthenticator.getDescriptor()', targetType='hudson.cli.GetNodeCommand'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSONHTML(URL)', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.loadJSON(URL)', targetType='hudson.ProxyConfiguration'"
      } ]
    } ]
  } ]
}