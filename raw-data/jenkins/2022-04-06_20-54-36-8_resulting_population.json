{
  "executionId" : "aa1ef6a6-5669-48a1-8af2-d4d8e6d45b3f",
  "computingTime" : 4240583,
  "maxEvaluations" : 100,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 33,
  "algorithm" : "MOSA",
  "projectBeforeRefactoring" : {
    "meanDensity" : 2.990243902439024,
    "meanNumConcerns" : 1.4843907351460226,
    "meanMetricsIntensity" : 0.03296937024300845,
    "meanLackOfCohesion" : 0.48535030050355515
  },
  "population" : [ {
    "solutionId" : "90ee594a-c91d-457b-bd76-57ea9a6b03b0",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48622151309453304,
      "MetricsIntensity" : 0.03286487188201803,
      "Density" : 0.983868044226935
    },
    "euclideanDistance" : 10.109672981261594,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4814070351758795,
      "LackOfCohesion" : 0.48622151309453304,
      "MetricsIntensity" : 0.03286487188201804,
      "Density" : 2.9372294372294374
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='hudson.tools.ToolInstaller'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER, hudson.util.IOUtils.DIR_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_UNIX, hudson.util.IOUtils.LINE_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR_UNIX], extractedMethods=[hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.copy(Reader, Writer), hudson.util.IOUtils.copy(Reader, OutputStream), hudson.util.IOUtils.copy(Reader, OutputStream, String), hudson.util.IOUtils.toString(byte[], String), hudson.util.IOUtils.toString(byte[]), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.toString(Reader), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.toByteArray(Reader, String), hudson.util.IOUtils.toByteArray(InputStream), hudson.util.IOUtils.toByteArray(Reader), hudson.util.IOUtils.toByteArray(String), hudson.util.IOUtils.closeQuietly(Writer), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.closeQuietly(Reader), hudson.util.IOUtils.toCharArray(InputStream), hudson.util.IOUtils.toCharArray(Reader), hudson.util.IOUtils.toCharArray(InputStream, String), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.readLines(Reader), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.lineIterator(Reader), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.copyLarge(Reader, Writer), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.contentEquals(Reader, Reader), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.readFirstLine(InputStream, String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.util.xstream.XStreamDOM'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "d18fbede-8469-4a19-8289-8543648350f8",
    "objectives" : {
      "NumberOfConcerns" : 1.0003392130257802,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48621167444833097,
      "MetricsIntensity" : 0.032864871882018046,
      "Density" : 0.9844118180170383
    },
    "euclideanDistance" : 10.109759001120764,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4819095477386932,
      "LackOfCohesion" : 0.48621167444833097,
      "MetricsIntensity" : 0.032864871882018046,
      "Density" : 2.938852813852814
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidList'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER, hudson.util.IOUtils.DIR_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_UNIX, hudson.util.IOUtils.LINE_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR_UNIX], extractedMethods=[hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.copy(Reader, Writer), hudson.util.IOUtils.copy(Reader, OutputStream), hudson.util.IOUtils.copy(Reader, OutputStream, String), hudson.util.IOUtils.toString(byte[], String), hudson.util.IOUtils.toString(byte[]), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.toString(Reader), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.toByteArray(Reader, String), hudson.util.IOUtils.toByteArray(InputStream), hudson.util.IOUtils.toByteArray(Reader), hudson.util.IOUtils.toByteArray(String), hudson.util.IOUtils.closeQuietly(Writer), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.closeQuietly(Reader), hudson.util.IOUtils.toCharArray(InputStream), hudson.util.IOUtils.toCharArray(Reader), hudson.util.IOUtils.toCharArray(InputStream, String), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.readLines(Reader), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.lineIterator(Reader), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.copyLarge(Reader, Writer), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.contentEquals(Reader, Reader), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.readFirstLine(InputStream, String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.util.xstream.XStreamDOM'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "cfb4919b-6ce1-4a51-b111-899e82cc57aa",
    "objectives" : {
      "NumberOfConcerns" : 1.0003392130257802,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4862116744483311,
      "MetricsIntensity" : 0.03286487188201803,
      "Density" : 0.9844118180170383
    },
    "euclideanDistance" : 10.109759001120764,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4819095477386923,
      "LackOfCohesion" : 0.4862116744483311,
      "MetricsIntensity" : 0.03286487188201803,
      "Density" : 2.938852813852814
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidList'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER, hudson.util.IOUtils.DIR_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_UNIX, hudson.util.IOUtils.LINE_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR_UNIX], extractedMethods=[hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.copy(Reader, Writer), hudson.util.IOUtils.copy(Reader, OutputStream), hudson.util.IOUtils.copy(Reader, OutputStream, String), hudson.util.IOUtils.toString(byte[], String), hudson.util.IOUtils.toString(byte[]), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.toString(Reader), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.toByteArray(Reader, String), hudson.util.IOUtils.toByteArray(InputStream), hudson.util.IOUtils.toByteArray(Reader), hudson.util.IOUtils.toByteArray(String), hudson.util.IOUtils.closeQuietly(Writer), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.closeQuietly(Reader), hudson.util.IOUtils.toCharArray(InputStream), hudson.util.IOUtils.toCharArray(Reader), hudson.util.IOUtils.toCharArray(InputStream, String), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.readLines(Reader), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.lineIterator(Reader), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.copyLarge(Reader, Writer), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.contentEquals(Reader, Reader), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.readFirstLine(InputStream, String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.util.xstream.XStreamDOM'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "c248b9ca-8b4a-4eea-ad98-2495712003ff",
    "objectives" : {
      "NumberOfConcerns" : 1.0006784260515604,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4859853855856786,
      "MetricsIntensity" : 0.032863516053669814,
      "Density" : 0.9844118180170383
    },
    "euclideanDistance" : 10.109781686342535,
    "generation" : 1,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4824120603015079,
      "LackOfCohesion" : 0.4859853855856786,
      "MetricsIntensity" : 0.03286351605366982,
      "Density" : 2.9372633856138446
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='hudson.tools.ToolInstaller'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER, hudson.util.IOUtils.DIR_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_UNIX, hudson.util.IOUtils.LINE_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR_UNIX], extractedMethods=[hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.copy(Reader, Writer), hudson.util.IOUtils.copy(Reader, OutputStream), hudson.util.IOUtils.copy(Reader, OutputStream, String), hudson.util.IOUtils.toString(byte[], String), hudson.util.IOUtils.toString(byte[]), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.toString(Reader), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.toByteArray(Reader, String), hudson.util.IOUtils.toByteArray(InputStream), hudson.util.IOUtils.toByteArray(Reader), hudson.util.IOUtils.toByteArray(String), hudson.util.IOUtils.closeQuietly(Writer), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.closeQuietly(Reader), hudson.util.IOUtils.toCharArray(InputStream), hudson.util.IOUtils.toCharArray(Reader), hudson.util.IOUtils.toCharArray(InputStream, String), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.readLines(Reader), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.lineIterator(Reader), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.copyLarge(Reader, Writer), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.contentEquals(Reader, Reader), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.readFirstLine(InputStream, String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.util.xstream.XStreamDOM'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      } ]
    } ]
  }, {
    "solutionId" : "5efbc7e6-e51e-43cb-b339-d46f3ab222db",
    "objectives" : {
      "NumberOfConcerns" : 0.9969470827679783,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48697708676845536,
      "MetricsIntensity" : 0.03289696131326372,
      "Density" : 0.9791553380460395
    },
    "euclideanDistance" : 11.09913859517777,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4776269482151843,
      "LackOfCohesion" : 0.48697708676845536,
      "MetricsIntensity" : 0.032896961313263716,
      "Density" : 2.926327193932828
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='org.acegisecurity.BadCredentialsException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='hudson.slaves.RetentionStrategy.NoOp'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      } ]
    } ]
  }, {
    "solutionId" : "e1011801-b6cc-419c-be6a-d694202b2851",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4861296857299785,
      "MetricsIntensity" : 0.032864871882018046,
      "Density" : 0.983868044226935
    },
    "euclideanDistance" : 11.099792723272028,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4814070351758795,
      "LackOfCohesion" : 0.4861296857299785,
      "MetricsIntensity" : 0.032864871882018046,
      "Density" : 2.937229437229437
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='hudson.tools.ToolInstaller'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER, hudson.util.IOUtils.DIR_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_UNIX, hudson.util.IOUtils.LINE_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR_UNIX], extractedMethods=[hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.copy(Reader, Writer), hudson.util.IOUtils.copy(Reader, OutputStream), hudson.util.IOUtils.copy(Reader, OutputStream, String), hudson.util.IOUtils.toString(byte[], String), hudson.util.IOUtils.toString(byte[]), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.toString(Reader), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.toByteArray(Reader, String), hudson.util.IOUtils.toByteArray(InputStream), hudson.util.IOUtils.toByteArray(Reader), hudson.util.IOUtils.toByteArray(String), hudson.util.IOUtils.closeQuietly(Writer), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.closeQuietly(Reader), hudson.util.IOUtils.toCharArray(InputStream), hudson.util.IOUtils.toCharArray(Reader), hudson.util.IOUtils.toCharArray(InputStream, String), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.readLines(Reader), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.lineIterator(Reader), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.copyLarge(Reader, Writer), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.contentEquals(Reader, Reader), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.readFirstLine(InputStream, String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.util.xstream.XStreamDOM'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "2203a220-f4bc-42ce-8113-09579fbfc7f9",
    "objectives" : {
      "NumberOfConcerns" : 1.0006784260515604,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48598412422078063,
      "MetricsIntensity" : 0.03286351605366981,
      "Density" : 0.9844118180170383
    },
    "euclideanDistance" : 11.099895698586481,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4824120603015079,
      "LackOfCohesion" : 0.48598412422078063,
      "MetricsIntensity" : 0.032863516053669814,
      "Density" : 2.9372633856138446
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='hudson.tools.ToolInstaller'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER, hudson.util.IOUtils.DIR_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_UNIX, hudson.util.IOUtils.LINE_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR_UNIX], extractedMethods=[hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.copy(Reader, Writer), hudson.util.IOUtils.copy(Reader, OutputStream), hudson.util.IOUtils.copy(Reader, OutputStream, String), hudson.util.IOUtils.toString(byte[], String), hudson.util.IOUtils.toString(byte[]), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.toString(Reader), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.toByteArray(Reader, String), hudson.util.IOUtils.toByteArray(InputStream), hudson.util.IOUtils.toByteArray(Reader), hudson.util.IOUtils.toByteArray(String), hudson.util.IOUtils.closeQuietly(Writer), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.closeQuietly(Reader), hudson.util.IOUtils.toCharArray(InputStream), hudson.util.IOUtils.toCharArray(Reader), hudson.util.IOUtils.toCharArray(InputStream, String), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.readLines(Reader), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.lineIterator(Reader), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.copyLarge(Reader, Writer), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.contentEquals(Reader, Reader), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.readFirstLine(InputStream, String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.util.xstream.XStreamDOM'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      } ]
    } ]
  }, {
    "solutionId" : "a4829dd8-c555-4fb0-baf7-1729511a2567",
    "objectives" : {
      "NumberOfConcerns" : 1.0003392130257802,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4861296857299786,
      "MetricsIntensity" : 0.032864871882018025,
      "Density" : 0.9980061627696212
    },
    "euclideanDistance" : 11.101085397977755,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.481909547738693,
      "LackOfCohesion" : 0.4861296857299786,
      "MetricsIntensity" : 0.03286487188201803,
      "Density" : 2.979437229437229
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='hudson.tools.ToolInstaller'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER, hudson.util.IOUtils.DIR_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_UNIX, hudson.util.IOUtils.LINE_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR_UNIX], extractedMethods=[hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.copy(Reader, Writer), hudson.util.IOUtils.copy(Reader, OutputStream), hudson.util.IOUtils.copy(Reader, OutputStream, String), hudson.util.IOUtils.toString(byte[], String), hudson.util.IOUtils.toString(byte[]), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.toString(Reader), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.toByteArray(Reader, String), hudson.util.IOUtils.toByteArray(InputStream), hudson.util.IOUtils.toByteArray(Reader), hudson.util.IOUtils.toByteArray(String), hudson.util.IOUtils.closeQuietly(Writer), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.closeQuietly(Reader), hudson.util.IOUtils.toCharArray(InputStream), hudson.util.IOUtils.toCharArray(Reader), hudson.util.IOUtils.toCharArray(InputStream, String), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.readLines(Reader), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.lineIterator(Reader), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.copyLarge(Reader, Writer), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.contentEquals(Reader, Reader), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.readFirstLine(InputStream, String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.util.xstream.XStreamDOM'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "81c8a8b3-7145-4cdd-a5be-c32229826bd7",
    "objectives" : {
      "NumberOfConcerns" : 0.9966078697421981,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48714497290657277,
      "MetricsIntensity" : 0.03290208018813645,
      "Density" : 0.9787928221859706
    },
    "euclideanDistance" : 12.090891423145925,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4771241830065358,
      "LackOfCohesion" : 0.48714497290657277,
      "MetricsIntensity" : 0.03290208018813645,
      "Density" : 2.9252437703141916
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.invalidate()', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='org.acegisecurity.BadCredentialsException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='hudson.slaves.RetentionStrategy.NoOp'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "2297208e-c1f0-4b9e-bbb4-c4e815832972",
    "objectives" : {
      "NumberOfConcerns" : 1.0010176390773406,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4858791786612897,
      "MetricsIntensity" : 0.03286216022532159,
      "Density" : 0.9845930759470727
    },
    "euclideanDistance" : 12.09167558019889,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4829145728643216,
      "LackOfCohesion" : 0.4858791786612897,
      "MetricsIntensity" : 0.032862160225321596,
      "Density" : 2.9378042184964857
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.LastGrantedAuthoritiesProperty.timestamp, jenkins.security.LastGrantedAuthoritiesProperty.roles], extractedMethods=[jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities(), jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication), jenkins.security.LastGrantedAuthoritiesProperty.invalidate()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.load(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.getNodes(), jenkins.model.Nodes.save(), jenkins.model.Nodes.setNodes(Collection<? extends Node>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier.RestartCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>)', targetType='jenkins.diagnosis.HsErrPidList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.hashCode()', targetType='hudson.tools.ToolInstaller'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER, hudson.util.IOUtils.DIR_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_UNIX, hudson.util.IOUtils.LINE_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR, hudson.util.IOUtils.DIR_SEPARATOR_WINDOWS, hudson.util.IOUtils.LINE_SEPARATOR_UNIX], extractedMethods=[hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.copy(InputStream, Writer, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.copy(Reader, Writer), hudson.util.IOUtils.copy(Reader, OutputStream), hudson.util.IOUtils.copy(Reader, OutputStream, String), hudson.util.IOUtils.toString(byte[], String), hudson.util.IOUtils.toString(byte[]), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.toString(Reader), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.toByteArray(Reader, String), hudson.util.IOUtils.toByteArray(InputStream), hudson.util.IOUtils.toByteArray(Reader), hudson.util.IOUtils.toByteArray(String), hudson.util.IOUtils.closeQuietly(Writer), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.closeQuietly(InputStream), hudson.util.IOUtils.closeQuietly(Reader), hudson.util.IOUtils.toCharArray(InputStream), hudson.util.IOUtils.toCharArray(Reader), hudson.util.IOUtils.toCharArray(InputStream, String), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.readLines(Reader), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.lineIterator(Reader), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.copyLarge(Reader, Writer), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.contentEquals(Reader, Reader), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.readFirstLine(InputStream, String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.util.xstream.XStreamDOM'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      } ]
    } ]
  }, {
    "solutionId" : "4dc4fabb-0e18-4db9-bb93-d446287ba7aa",
    "objectives" : {
      "NumberOfConcerns" : 0.9959294436906377,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48725242242140937,
      "MetricsIntensity" : 0.03293342541946261,
      "Density" : 0.9956498096791735
    },
    "euclideanDistance" : 12.092216237480601,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4761186525892402,
      "LackOfCohesion" : 0.48725242242140937,
      "MetricsIntensity" : 0.03293342541946261,
      "Density" : 2.9756229685807147
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='org.acegisecurity.BadCredentialsException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='hudson.slaves.RetentionStrategy.NoOp'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "613a60af-b26c-48a5-a52e-ce7beb7e913a",
    "objectives" : {
      "NumberOfConcerns" : 0.996268656716418,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48719061359444077,
      "MetricsIntensity" : 0.03293493068844102,
      "Density" : 0.9956498096791735
    },
    "euclideanDistance" : 12.09224169389215,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.476621417797889,
      "LackOfCohesion" : 0.48719061359444077,
      "MetricsIntensity" : 0.03293493068844102,
      "Density" : 2.9756229685807147
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='org.acegisecurity.BadCredentialsException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='hudson.slaves.RetentionStrategy.NoOp'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "7f24e06f-e59e-4b22-b6f8-3faf31f6f2eb",
    "objectives" : {
      "NumberOfConcerns" : 0.9952510176390773,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.487528056379513,
      "MetricsIntensity" : 0.03294050114691728,
      "Density" : 0.9956498096791735
    },
    "euclideanDistance" : 14.079084196566154,
    "generation" : 1,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4751131221719451,
      "LackOfCohesion" : 0.487528056379513,
      "MetricsIntensity" : 0.03294050114691729,
      "Density" : 2.9756229685807147
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='org.acegisecurity.BadCredentialsException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='hudson.slaves.RetentionStrategy.NoOp'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "b067e640-59e0-4cfa-94e8-6176259d0ba5",
    "objectives" : {
      "NumberOfConcerns" : 0.9955902306648575,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4869788123490121,
      "MetricsIntensity" : 0.03289038036403895,
      "Density" : 0.9784303063259018
    },
    "euclideanDistance" : 21.052001232959533,
    "generation" : 1,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4756158873805936,
      "LackOfCohesion" : 0.4869788123490121,
      "MetricsIntensity" : 0.03289038036403894,
      "Density" : 2.924160346695558
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.util.URLClassLoader2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "62b728e2-6978-4371-8663-9edc9d3ecfb7",
    "objectives" : {
      "NumberOfConcerns" : 0.9955902306648575,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4869788123490122,
      "MetricsIntensity" : 0.032890380364038935,
      "Density" : 0.9784303063259018
    },
    "euclideanDistance" : 21.052001232959533,
    "generation" : 1,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4756158873805942,
      "LackOfCohesion" : 0.4869788123490122,
      "MetricsIntensity" : 0.03289038036403893,
      "Density" : 2.924160346695558
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.util.URLClassLoader2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "922e25ab-7652-4220-9e22-60580d1e38e0",
    "objectives" : {
      "NumberOfConcerns" : 0.9955902306648575,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4870231450835321,
      "MetricsIntensity" : 0.03289008340420136,
      "Density" : 0.9786115642559362
    },
    "euclideanDistance" : 21.052010683127733,
    "generation" : 1,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4756158873805938,
      "LackOfCohesion" : 0.4870231450835321,
      "MetricsIntensity" : 0.03289008340420136,
      "Density" : 2.924702058504874
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.util.URLClassLoader2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "e597816f-ddf4-458f-be2f-c1ea38c45fa1",
    "objectives" : {
      "NumberOfConcerns" : 0.996268656716418,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4863616235840835,
      "MetricsIntensity" : 0.032890380364038935,
      "Density" : 0.9787928221859706
    },
    "euclideanDistance" : 21.05203591178616,
    "generation" : 1,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4766214177978885,
      "LackOfCohesion" : 0.4863616235840835,
      "MetricsIntensity" : 0.032890380364038935,
      "Density" : 2.925243770314193
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.util.URLClassLoader2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "9699b4ae-2b0e-4b5e-b4c8-05fcc104782b",
    "objectives" : {
      "NumberOfConcerns" : 0.9966078697421981,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48716096206258414,
      "MetricsIntensity" : 0.032889023788266046,
      "Density" : 0.9789740801160051
    },
    "euclideanDistance" : 21.052078875645858,
    "generation" : 1,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4771241830065358,
      "LackOfCohesion" : 0.48716096206258414,
      "MetricsIntensity" : 0.03288902378826604,
      "Density" : 2.9257854821235108
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.util.URLClassLoader2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "dc06c24d-24be-462d-84a8-9392cf0efc9d",
    "objectives" : {
      "NumberOfConcerns" : 0.996268656716418,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4869788123490122,
      "MetricsIntensity" : 0.03289038036403893,
      "Density" : 0.9963748413993112
    },
    "euclideanDistance" : 21.05287496285784,
    "generation" : 1,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.476621417797889,
      "LackOfCohesion" : 0.4869788123490122,
      "MetricsIntensity" : 0.03289038036403893,
      "Density" : 2.9777898158179843
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.util.URLClassLoader2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "ef094ee5-4b41-4c41-abd7-1832f403c897",
    "objectives" : {
      "NumberOfConcerns" : 0.9952510176390773,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.48629892088835136,
      "MetricsIntensity" : 0.03288507598120935,
      "Density" : 0.9778865325357985
    },
    "euclideanDistance" : 22.049588538730287,
    "generation" : 1,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4751131221719447,
      "LackOfCohesion" : 0.48629892088835136,
      "MetricsIntensity" : 0.03288507598120935,
      "Density" : 2.9225352112676073
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.CopyOnWriteMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.util.DirScanner.Filter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.util.URLClassLoader2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "99915942-7486-41f8-8719-c8c09371b7c4",
    "objectives" : {
      "NumberOfConcerns" : 0.9955902306648575,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.48629892088835125,
      "MetricsIntensity" : 0.03288507598120936,
      "Density" : 0.9782490483958673
    },
    "euclideanDistance" : 22.049619932705465,
    "generation" : 1,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4756158873805942,
      "LackOfCohesion" : 0.48629892088835125,
      "MetricsIntensity" : 0.03288507598120935,
      "Density" : 2.923618634886241
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.CopyOnWriteMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.util.DirScanner.Filter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.util.URLClassLoader2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "cce6e91f-f48f-41bb-a53f-100be6aa1d8f",
    "objectives" : {
      "NumberOfConcerns" : 0.9959294436906377,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.48664250771281786,
      "MetricsIntensity" : 0.03287909810139792,
      "Density" : 0.9782490483958673
    },
    "euclideanDistance" : 22.049642823023287,
    "generation" : 1,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.47611865258924,
      "LackOfCohesion" : 0.48664250771281786,
      "MetricsIntensity" : 0.03287909810139792,
      "Density" : 2.9236186348862416
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.util.URLClassLoader2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "b2d28595-8389-4de7-94a7-345f6274a598",
    "objectives" : {
      "NumberOfConcerns" : 0.9959294436906377,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4862989208883512,
      "MetricsIntensity" : 0.032874834501292464,
      "Density" : 0.9784303063259018
    },
    "euclideanDistance" : 22.049643278664345,
    "generation" : 1,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.47611865258924,
      "LackOfCohesion" : 0.4862989208883512,
      "MetricsIntensity" : 0.03287483450129246,
      "Density" : 2.924160346695558
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.CopyOnWriteMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.util.DirScanner.Filter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "f19660a8-c49b-43f0-ad2e-25d5e5939b44",
    "objectives" : {
      "NumberOfConcerns" : 0.996268656716418,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.48606732761776816,
      "MetricsIntensity" : 0.032877997667463715,
      "Density" : 0.9784303063259018
    },
    "euclideanDistance" : 22.04965350091472,
    "generation" : 1,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4766214177978891,
      "LackOfCohesion" : 0.48606732761776816,
      "MetricsIntensity" : 0.032877997667463715,
      "Density" : 2.924160346695558
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.CopyOnWriteMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.util.DirScanner.Filter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER, hudson.util.IOUtils.DIR_SEPARATOR], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.util.URLClassLoader2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "1a09b9eb-2dc6-4df7-85b2-a077eb3f69f4",
    "objectives" : {
      "NumberOfConcerns" : 0.9949118046132972,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4862070429023168,
      "MetricsIntensity" : 0.03288507598120936,
      "Density" : 0.9778865325357985
    },
    "euclideanDistance" : 23.047420469246962,
    "generation" : 1,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4746103569632982,
      "LackOfCohesion" : 0.4862070429023168,
      "MetricsIntensity" : 0.03288507598120936,
      "Density" : 2.9225352112676046
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.CopyOnWriteMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.util.DirScanner.Filter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER, hudson.util.IOUtils.DIR_SEPARATOR], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.util.URLClassLoader2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "6968b739-f498-46a2-8c64-9b55732844c6",
    "objectives" : {
      "NumberOfConcerns" : 0.9955902306648575,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4859295106387165,
      "MetricsIntensity" : 0.032879007315661894,
      "Density" : 0.9778865325357985
    },
    "euclideanDistance" : 23.0474439037465,
    "generation" : 1,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4756158873805933,
      "LackOfCohesion" : 0.4859295106387165,
      "MetricsIntensity" : 0.032879007315661894,
      "Density" : 2.922535211267605
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.CopyOnWriteMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.util.DirScanner.Filter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER, hudson.util.IOUtils.DIR_SEPARATOR], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.util.URLClassLoader2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "b8377dbb-5858-45ff-bb09-ce81ea038a11",
    "objectives" : {
      "NumberOfConcerns" : 0.9952510176390773,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.48620704290231676,
      "MetricsIntensity" : 0.03288507598120936,
      "Density" : 0.9782490483958673
    },
    "euclideanDistance" : 23.047450499037613,
    "generation" : 1,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4751131221719458,
      "LackOfCohesion" : 0.48620704290231676,
      "MetricsIntensity" : 0.03288507598120935,
      "Density" : 2.923618634886241
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.CopyOnWriteMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.util.DirScanner.Filter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER, hudson.util.IOUtils.DIR_SEPARATOR], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.util.URLClassLoader2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "0085f4ec-6595-4f96-9fd4-9657336fd7f7",
    "objectives" : {
      "NumberOfConcerns" : 0.9955902306648575,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.48620704290231664,
      "MetricsIntensity" : 0.03287483450129246,
      "Density" : 0.9784303063259018
    },
    "euclideanDistance" : 23.047472829250577,
    "generation" : 1,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.475615887380594,
      "LackOfCohesion" : 0.48620704290231664,
      "MetricsIntensity" : 0.03287483450129246,
      "Density" : 2.924160346695558
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.CopyOnWriteMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.util.DirScanner.Filter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER, hudson.util.IOUtils.DIR_SEPARATOR], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "f05414c1-391b-418e-a5ed-41d984fd7753",
    "objectives" : {
      "NumberOfConcerns" : 0.9952510176390773,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.4862051445968201,
      "MetricsIntensity" : 0.03288507598120936,
      "Density" : 0.9782490483958673
    },
    "euclideanDistance" : 24.0454771767926,
    "generation" : 1,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.475113122171945,
      "LackOfCohesion" : 0.4862051445968201,
      "MetricsIntensity" : 0.03288507598120936,
      "Density" : 2.923618634886241
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.CopyOnWriteMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.util.DirScanner.Filter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER, hudson.util.IOUtils.DIR_SEPARATOR], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.util.URLClassLoader2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "980cde62-6f93-4411-9b72-b95c755c4884",
    "objectives" : {
      "NumberOfConcerns" : 0.9952510176390773,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.4867766864157309,
      "MetricsIntensity" : 0.032885075981209336,
      "Density" : 0.9780677904658329
    },
    "euclideanDistance" : 24.04548136680816,
    "generation" : 1,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4751131221719451,
      "LackOfCohesion" : 0.4867766864157309,
      "MetricsIntensity" : 0.032885075981209336,
      "Density" : 2.9230769230769242
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.CopyOnWriteMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.util.DirScanner.Filter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.util.URLClassLoader2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "2a19b326-f58b-4ecd-aeab-317ef3269ad7",
    "objectives" : {
      "NumberOfConcerns" : 0.9959294436906377,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.4865062969922631,
      "MetricsIntensity" : 0.032873568711255595,
      "Density" : 0.9786115642559362
    },
    "euclideanDistance" : 24.045526093205748,
    "generation" : 1,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4761186525892402,
      "LackOfCohesion" : 0.4865062969922631,
      "MetricsIntensity" : 0.032873568711255595,
      "Density" : 2.924702058504874
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.util.DirScanner.Filter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "67fd30b0-e49f-44ed-94b5-a638e9c45e88",
    "objectives" : {
      "NumberOfConcerns" : 0.9959294436906377,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4862271584701657,
      "MetricsIntensity" : 0.03287774152562504,
      "Density" : 0.9780677904658329
    },
    "euclideanDistance" : 25.04368163539615,
    "generation" : 1,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.47611865258924,
      "LackOfCohesion" : 0.4862271584701657,
      "MetricsIntensity" : 0.03287774152562504,
      "Density" : 2.923076923076923
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.util.DirScanner.Filter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.util.URLClassLoader2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.SuggestedItem.path', targetTypeName='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  }, {
    "solutionId" : "3bb80426-ed19-4aa7-8c62-9a6306f3e223",
    "objectives" : {
      "NumberOfConcerns" : 0.996268656716418,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4867176219961374,
      "MetricsIntensity" : 0.03287198712816996,
      "Density" : 0.9789740801160051
    },
    "euclideanDistance" : 25.04374005808625,
    "generation" : 1,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.476621417797889,
      "LackOfCohesion" : 0.4867176219961374,
      "MetricsIntensity" : 0.03287198712816996,
      "Density" : 2.925785482123511
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.LastGrantedAuthoritiesProperty",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.getAuthorities()', targetType='hudson.util.CopyOnWriteMap'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.LastGrantedAuthoritiesProperty.update(Authentication)', targetType='hudson.util.Secret.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.item_category.StandaloneProjectsCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.StringParameterValue.value], extractedMethods=[hudson.model.StringParameterValue.getShortDescription(), hudson.model.StringParameterValue.doTrim(), hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars), hudson.model.StringParameterValue.createVariableResolver(AbstractBuild<?,?>), hudson.model.StringParameterValue.equals(Object), hudson.model.StringParameterValue.hashCode()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.View.People",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.View.People.toList(Map<User,UserInfo>), hudson.model.View.People.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.RSAConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPrivateKey()', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.lastCS', targetTypeName='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.RSAConfidentialKey.priv', targetTypeName='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getPublicKey()', targetType='hudson.util.DirScanner.Filter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.RSAConfidentialKey.getEncodedPublicKey()', targetType='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.IOUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.IOUtils.SKIP_BUFFER], extractedMethods=[hudson.util.IOUtils.writeLines(Collection, String, Writer), hudson.util.IOUtils.mode(File), hudson.util.IOUtils.mkdirs(File), hudson.util.IOUtils.skip(InputStream, long), hudson.util.IOUtils.lineIterator(InputStream, String), hudson.util.IOUtils.copy(InputStream, File), hudson.util.IOUtils.readLines(InputStream), hudson.util.IOUtils.readFirstLine(InputStream, String), hudson.util.IOUtils.copy(File, OutputStream), hudson.util.IOUtils.readLines(InputStream, String), hudson.util.IOUtils.toString(InputStream), hudson.util.IOUtils.isAbsolute(String), hudson.util.IOUtils.absolutize(File, String), hudson.util.IOUtils.copyLarge(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String, String), hudson.util.IOUtils.writeLines(Collection, String, OutputStream), hudson.util.IOUtils.contentEquals(InputStream, InputStream), hudson.util.IOUtils.drain(InputStream), hudson.util.IOUtils.closeQuietly(OutputStream), hudson.util.IOUtils.writeLines(Collection, String, OutputStream, String), hudson.util.IOUtils.toString(InputStream, String), hudson.util.IOUtils.copy(InputStream, OutputStream), hudson.util.IOUtils.toInputStream(String), hudson.util.IOUtils.closeQuietly(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='hudson.model.queue.MappingWorksheet.ReadOnlyList'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='hudson.tasks.Maven.MavenInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='jenkins.util.HttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.util.AbstractTaskListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.SUPPORTED_FORMATS', targetTypeName='hudson.util.AbstractTaskListener'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.SuggestedItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath()', targetType='jenkins.security.s2m.FilePathRule'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.build(SearchableModelObject, Item)', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl()', targetType='jenkins.security.QueueItemAuthenticator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getPath(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.SuggestedItem.getUrl(StringBuilder)', targetType='jenkins.util.ServerTcpPort'"
      } ]
    } ]
  } ]
}