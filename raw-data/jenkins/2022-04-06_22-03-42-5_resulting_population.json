{
  "executionId" : "6953fb50-7bd6-4306-9f86-4e684565ed39",
  "computingTime" : 11170,
  "maxEvaluations" : 1000,
  "initialPopulationSize" : 50,
  "finalPopulationSize" : 34,
  "algorithm" : "Baseline",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.0736329182458038,
    "meanNumConcerns" : 1.5337361530715001,
    "meanMetricsIntensity" : 0.032969370243008465,
    "meanLackOfCohesion" : 0.4853503005035552
  },
  "population" : [ {
    "solutionId" : "6d7f590b-c481-45a8-97dc-419dbb6fb6fc",
    "objectives" : {
      "NumberOfConcerns" : 1.0016414970453054,
      "NumberOfRefactorings" : 3.0,
      "LackOfCohesion" : 0.4862888817963521,
      "MetricsIntensity" : 0.03289042015191797,
      "Density" : 0.9996477012506606
    },
    "euclideanDistance" : 3.3526317828707954,
    "generation" : 0,
    "numberOfRefactorings" : 3,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5339366515837096,
      "LackOfCohesion" : 0.4862888817963521,
      "MetricsIntensity" : 0.03289042015191797,
      "Density" : 3.0708874458874456,
      "baselineType" : "EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    } ]
  }, {
    "solutionId" : "c98f4824-c38f-40b5-a39d-4b0ec1ea4004",
    "objectives" : {
      "NumberOfConcerns" : 1.004267892317794,
      "NumberOfRefactorings" : 8.0,
      "LackOfCohesion" : 0.48595427216441744,
      "MetricsIntensity" : 0.032842504425407405,
      "Density" : 1.0010568962480184
    },
    "euclideanDistance" : 8.139281239384587,
    "generation" : 0,
    "numberOfRefactorings" : 8,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5341023069207627,
      "LackOfCohesion" : 0.48595427216441744,
      "MetricsIntensity" : 0.032842504425407405,
      "Density" : 3.063611859838275,
      "baselineType" : "CONCERN_EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "213ef83e-4cf5-4a28-a1bc-bba67babfc11",
    "objectives" : {
      "NumberOfConcerns" : 0.9977019041365726,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48533336164168966,
      "MetricsIntensity" : 0.03283864952837938,
      "Density" : 0.9954201162585873
    },
    "euclideanDistance" : 10.110533969390305,
    "generation" : 0,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5302114803625373,
      "LackOfCohesion" : 0.48533336164168966,
      "MetricsIntensity" : 0.03283864952837937,
      "Density" : 3.0612134344528714,
      "baselineType" : "MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    } ]
  }, {
    "solutionId" : "62fa4d4b-5eba-4601-aade-c9210a10c7aa",
    "objectives" : {
      "NumberOfConcerns" : 1.0016414970453054,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4855464975872411,
      "MetricsIntensity" : 0.03280236502932103,
      "Density" : 0.9978862075039634
    },
    "euclideanDistance" : 10.111176685638549,
    "generation" : 0,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5316265060240961,
      "LackOfCohesion" : 0.4855464975872411,
      "MetricsIntensity" : 0.03280236502932103,
      "Density" : 3.0605078336034564,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "63117a4e-0f4f-41f6-b132-86eb737fcd9e",
    "objectives" : {
      "NumberOfConcerns" : 1.0022980958634276,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48698609154512845,
      "MetricsIntensity" : 0.0327769372423679,
      "Density" : 0.998766954377312
    },
    "euclideanDistance" : 10.111397859994481,
    "generation" : 0,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.532630522088353,
      "LackOfCohesion" : 0.48698609154512845,
      "MetricsIntensity" : 0.0327769372423679,
      "Density" : 3.0632090761750406,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "380ac71d-e530-4bf0-af81-d820a6ab2d1f",
    "objectives" : {
      "NumberOfConcerns" : 1.0022980958634276,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48529569245496557,
      "MetricsIntensity" : 0.03279877423879122,
      "Density" : 0.9961247137572662
    },
    "euclideanDistance" : 12.092702493116926,
    "generation" : 0,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5326305220883532,
      "LackOfCohesion" : 0.48529569245496557,
      "MetricsIntensity" : 0.03279877423879122,
      "Density" : 3.0534557235421174,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='org.acegisecurity.CredentialsExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      } ]
    } ]
  }, {
    "solutionId" : "c04f0361-340e-45a4-8e64-e4b2018f39cf",
    "objectives" : {
      "NumberOfConcerns" : 1.0019697964543663,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4851439839925583,
      "MetricsIntensity" : 0.032811236451411506,
      "Density" : 0.9959485643825965
    },
    "euclideanDistance" : 13.08557596280516,
    "generation" : 0,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5328980411853341,
      "LackOfCohesion" : 0.4851439839925583,
      "MetricsIntensity" : 0.032811236451411506,
      "Density" : 3.0545650999459752,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.install.InstallState.Downgrade'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.FilePath.Write'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      } ]
    } ]
  }, {
    "solutionId" : "8eafbd63-cbe0-4385-9270-3ab2bbd0a304",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48617444065899124,
      "MetricsIntensity" : 0.03280054818926437,
      "Density" : 0.9948916681345781
    },
    "euclideanDistance" : 14.079319972713,
    "generation" : 0,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5306532663316585,
      "LackOfCohesion" : 0.48617444065899124,
      "MetricsIntensity" : 0.03280054818926437,
      "Density" : 3.0529729729729724,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='org.acegisecurity.CredentialsExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      } ]
    } ]
  }, {
    "solutionId" : "5830e6ca-5385-49dc-8248-35357c4eafd3",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.4862161561881575,
      "MetricsIntensity" : 0.032796267396927786,
      "Density" : 0.9952439668839176
    },
    "euclideanDistance" : 14.07943963441276,
    "generation" : 0,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5326633165829147,
      "LackOfCohesion" : 0.4862161561881575,
      "MetricsIntensity" : 0.032796267396927786,
      "Density" : 3.054054054054054,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      } ]
    } ]
  }, {
    "solutionId" : "1a5aa74c-72bc-4240-bf35-eed12436165b",
    "objectives" : {
      "NumberOfConcerns" : 1.0022980958634276,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4867265039458499,
      "MetricsIntensity" : 0.0328337865817002,
      "Density" : 0.9989431037519817
    },
    "euclideanDistance" : 16.069862150768117,
    "generation" : 0,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5326305220883532,
      "LackOfCohesion" : 0.4867265039458499,
      "MetricsIntensity" : 0.0328337865817002,
      "Density" : 3.062095032397408,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.install.InstallState.Downgrade'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.FilePath.Write'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "b9cc9a43-9537-433a-88b1-6f3869a378e9",
    "objectives" : {
      "NumberOfConcerns" : 1.0006565988181222,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.4861411027847444,
      "MetricsIntensity" : 0.0328173414813432,
      "Density" : 0.9957724150079267
    },
    "euclideanDistance" : 17.065470590668387,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5308890005022604,
      "LackOfCohesion" : 0.4861411027847444,
      "MetricsIntensity" : 0.0328173414813432,
      "Density" : 3.054024851431658,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.ListFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      } ]
    } ]
  }, {
    "solutionId" : "9031854c-57ab-4b09-8aaf-01d65af09121",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.48536039119905355,
      "MetricsIntensity" : 0.0328110832170783,
      "Density" : 0.9936586225118901
    },
    "euclideanDistance" : 18.061672368156252,
    "generation" : 0,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5306532663316577,
      "LackOfCohesion" : 0.48536039119905355,
      "MetricsIntensity" : 0.0328110832170783,
      "Density" : 3.0508382909680916,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      } ]
    } ]
  }, {
    "solutionId" : "9233d434-728e-4840-953c-8fe80e41842e",
    "objectives" : {
      "NumberOfConcerns" : 0.9996717005909389,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.4861394617267766,
      "MetricsIntensity" : 0.03281513762887147,
      "Density" : 0.9947155187599084
    },
    "euclideanDistance" : 18.061733329936246,
    "generation" : 0,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5309200603318256,
      "LackOfCohesion" : 0.4861394617267766,
      "MetricsIntensity" : 0.03281513762887147,
      "Density" : 3.0524324324324326,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='org.acegisecurity.CredentialsExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      } ]
    } ]
  }, {
    "solutionId" : "93463628-507d-422b-923a-467b9fc477e5",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.485802669351613,
      "MetricsIntensity" : 0.032762253967269256,
      "Density" : 0.994363220010569
    },
    "euclideanDistance" : 18.061795700646833,
    "generation" : 0,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5318935208437972,
      "LackOfCohesion" : 0.485802669351613,
      "MetricsIntensity" : 0.032762253967269256,
      "Density" : 3.0530016224986474,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      } ]
    } ]
  }, {
    "solutionId" : "8db194b9-d415-4a94-a6d2-7d651d7d223f",
    "objectives" : {
      "NumberOfConcerns" : 1.0006565988181222,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.4865154709132312,
      "MetricsIntensity" : 0.03277018251839071,
      "Density" : 0.9970054606306148
    },
    "euclideanDistance" : 18.06192416952263,
    "generation" : 0,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5308890005022604,
      "LackOfCohesion" : 0.4865154709132312,
      "MetricsIntensity" : 0.0327701825183907,
      "Density" : 3.0594594594594584,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "4e621962-7e04-455d-bd33-5c631ec34938",
    "objectives" : {
      "NumberOfConcerns" : 1.000328299409061,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48635893741048136,
      "MetricsIntensity" : 0.03278853267469644,
      "Density" : 0.9948916681345781
    },
    "euclideanDistance" : 19.05854365479682,
    "generation" : 0,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531155778894472,
      "LackOfCohesion" : 0.48635893741048136,
      "MetricsIntensity" : 0.03278853267469644,
      "Density" : 3.0529729729729724,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      } ]
    } ]
  }, {
    "solutionId" : "dc4473d5-2fc8-48bc-942a-805d3dfc2406",
    "objectives" : {
      "NumberOfConcerns" : 1.000328299409061,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48635893741048075,
      "MetricsIntensity" : 0.03278853267469646,
      "Density" : 0.9948916681345781
    },
    "euclideanDistance" : 19.05854365479682,
    "generation" : 0,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5311557788944723,
      "LackOfCohesion" : 0.48635893741048075,
      "MetricsIntensity" : 0.03278853267469646,
      "Density" : 3.0529729729729724,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      } ]
    } ]
  }, {
    "solutionId" : "23de3330-01ee-483f-be3c-ad5b54ce82fd",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4866974346529654,
      "MetricsIntensity" : 0.03279553671796818,
      "Density" : 0.9978862075039634
    },
    "euclideanDistance" : 19.05876058255136,
    "generation" : 0,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5326633165829147,
      "LackOfCohesion" : 0.4866974346529654,
      "MetricsIntensity" : 0.03279553671796817,
      "Density" : 3.063818280151433,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.install.InstallState.Downgrade'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.FilePath.Write'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "f6bb7dc1-82c0-4b79-93b2-9728f8b677ac",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48693145292429285,
      "MetricsIntensity" : 0.03285267189409304,
      "Density" : 0.9952439668839176
    },
    "euclideanDistance" : 21.05299722347192,
    "generation" : 0,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5306532663316579,
      "LackOfCohesion" : 0.48693145292429285,
      "MetricsIntensity" : 0.03285267189409304,
      "Density" : 3.054054054054054,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='org.acegisecurity.CredentialsExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Environment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.install.SetupWizard'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='jenkins.ClassLoaderReflectionToolkit.FindResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='jenkins.ClassLoaderReflectionToolkit.FindResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      } ]
    } ]
  }, {
    "solutionId" : "d34f3473-0627-439b-a947-da6113999b72",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48673193599569536,
      "MetricsIntensity" : 0.032848520979180444,
      "Density" : 0.9980623568786331
    },
    "euclideanDistance" : 21.053079267523717,
    "generation" : 0,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5299145299145305,
      "LackOfCohesion" : 0.48673193599569536,
      "MetricsIntensity" : 0.03284852097918044,
      "Density" : 3.066017316017316,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='org.acegisecurity.CredentialsExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.ListFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.model.HealthReport.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.UpdateCenter.HudsonDowngradeJob'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "ce983358-66b2-48da-873b-3c4735a33455",
    "objectives" : {
      "NumberOfConcerns" : 0.9993434011818779,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4856875876603303,
      "MetricsIntensity" : 0.032868521431950896,
      "Density" : 0.994363220010569
    },
    "euclideanDistance" : 22.05049700617435,
    "generation" : 0,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531187122736418,
      "LackOfCohesion" : 0.4856875876603303,
      "MetricsIntensity" : 0.03286852143195089,
      "Density" : 3.053001622498648,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.install.InstallState.Downgrade'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.FilePath.Write'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='org.acegisecurity.CredentialsExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.model.HealthReport.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.UpdateCenter.HudsonDowngradeJob'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      } ]
    } ]
  }, {
    "solutionId" : "66ce6940-9501-4eee-abce-aa8d20a63282",
    "objectives" : {
      "NumberOfConcerns" : 0.9996717005909389,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4867249299351681,
      "MetricsIntensity" : 0.03284924970686295,
      "Density" : 0.9977100581292936
    },
    "euclideanDistance" : 22.050685909959387,
    "generation" : 0,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5293822199899545,
      "LackOfCohesion" : 0.4867249299351681,
      "MetricsIntensity" : 0.032849249706862954,
      "Density" : 3.0599675850891415,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='org.acegisecurity.CredentialsExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.ListFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "d3254d15-a132-4844-b53f-4c8c345dd571",
    "objectives" : {
      "NumberOfConcerns" : 0.9996717005909389,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.48691516393336215,
      "MetricsIntensity" : 0.032864804878731134,
      "Density" : 0.9984146556279725
    },
    "euclideanDistance" : 22.050722024591465,
    "generation" : 0,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5309200603318254,
      "LackOfCohesion" : 0.48691516393336215,
      "MetricsIntensity" : 0.032864804878731134,
      "Density" : 3.0637837837837836,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='org.acegisecurity.CredentialsExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.model.HealthReport.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.UpdateCenter.HudsonDowngradeJob'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Environment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.install.SetupWizard'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='jenkins.ClassLoaderReflectionToolkit.FindResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='jenkins.ClassLoaderReflectionToolkit.FindResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "656dddcb-d1dd-4424-8139-c618f4148402",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4861919790015189,
      "MetricsIntensity" : 0.032788300995522233,
      "Density" : 0.9973577593799542
    },
    "euclideanDistance" : 23.048474574542304,
    "generation" : 0,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5306532663316585,
      "LackOfCohesion" : 0.4861919790015189,
      "MetricsIntensity" : 0.032788300995522233,
      "Density" : 3.0621957815035152,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.ListFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "a89f0540-3eab-4ac5-b157-b9ac77c552da",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.4862321040155199,
      "MetricsIntensity" : 0.03285656309009564,
      "Density" : 0.9941870706358993
    },
    "euclideanDistance" : 24.04632839217108,
    "generation" : 0,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321931589537225,
      "LackOfCohesion" : 0.4862321040155199,
      "MetricsIntensity" : 0.03285656309009564,
      "Density" : 3.0541125541125536,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.install.InstallState.Downgrade'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.FilePath.Write'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.model.HealthReport.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.UpdateCenter.HudsonDowngradeJob'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      } ]
    } ]
  }, {
    "solutionId" : "8f4a8568-a3f5-4219-9820-25a89a1c3d5d",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4867326999429383,
      "MetricsIntensity" : 0.03287712998197821,
      "Density" : 0.9975339087546239
    },
    "euclideanDistance" : 25.044582142642245,
    "generation" : 0,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5291457286432162,
      "LackOfCohesion" : 0.4867326999429383,
      "MetricsIntensity" : 0.03287712998197822,
      "Density" : 3.0610810810810802,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='org.acegisecurity.CredentialsExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.ListFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.model.HealthReport.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.UpdateCenter.HudsonDowngradeJob'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.LOGGER, jenkins.model.JenkinsLocationConfiguration.DISABLE_URL_VALIDATION, jenkins.model.JenkinsLocationConfiguration.hudsonUrl, jenkins.model.JenkinsLocationConfiguration.jenkinsUrl], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getUrl(), jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String), jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid(), jenkins.model.JenkinsLocationConfiguration.setUrl(String), jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String), jenkins.model.JenkinsLocationConfiguration.load()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "f864c0e4-9af1-4d6a-8a5c-6e21fa8f7135",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.4868314794578616,
      "MetricsIntensity" : 0.032864296066705254,
      "Density" : 0.9985908050026422
    },
    "euclideanDistance" : 26.04300091515844,
    "generation" : 0,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5318935208437972,
      "LackOfCohesion" : 0.4868314794578616,
      "MetricsIntensity" : 0.032864296066705254,
      "Density" : 3.061015118790497,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Environment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.install.SetupWizard'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='jenkins.ClassLoaderReflectionToolkit.FindResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='jenkins.ClassLoaderReflectionToolkit.FindResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "00f4aeab-8a89-4d69-9dff-2056a8142fe8",
    "objectives" : {
      "NumberOfConcerns" : 0.9983585029546946,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.48538007315146087,
      "MetricsIntensity" : 0.032851127379684396,
      "Density" : 0.9938347718865598
    },
    "euclideanDistance" : 27.041100204433533,
    "generation" : 0,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5296780684104636,
      "LackOfCohesion" : 0.48538007315146087,
      "MetricsIntensity" : 0.032851127379684396,
      "Density" : 3.0530303030303028,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='org.acegisecurity.CredentialsExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.ListFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ResultTrend.description], extractedMethods=[hudson.model.ResultTrend.getID(), hudson.model.ResultTrend.getDescription(), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      } ]
    } ]
  }, {
    "solutionId" : "c19ceab7-c735-47b3-b326-f56d7313e0d2",
    "objectives" : {
      "NumberOfConcerns" : 0.9983585029546946,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.48615318736594193,
      "MetricsIntensity" : 0.032834579655944954,
      "Density" : 0.9947155187599084
    },
    "euclideanDistance" : 27.04114645674053,
    "generation" : 0,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5296780684104634,
      "LackOfCohesion" : 0.48615318736594193,
      "MetricsIntensity" : 0.032834579655944954,
      "Density" : 3.055735930735932,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.ListFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.model.HealthReport.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.UpdateCenter.HudsonDowngradeJob'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.queue.Tasks'"
      } ]
    } ]
  }, {
    "solutionId" : "f5f73c6a-1ad5-4eda-971e-e9ab454510b1",
    "objectives" : {
      "NumberOfConcerns" : 0.9970453053184505,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.48685924932060387,
      "MetricsIntensity" : 0.032851100418984806,
      "Density" : 0.9963008631319359
    },
    "euclideanDistance" : 27.04116909222275,
    "generation" : 0,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5284348263714143,
      "LackOfCohesion" : 0.48685924932060387,
      "MetricsIntensity" : 0.0328511004189848,
      "Density" : 3.0622631293990255,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.slaves.OfflineCause.ByCLI'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='org.acegisecurity.CredentialsExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.ListFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "70e10673-4601-4271-b272-39d8bd679e55",
    "objectives" : {
      "NumberOfConcerns" : 0.9980302035456337,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.48738089637778204,
      "MetricsIntensity" : 0.03285355801933027,
      "Density" : 0.9966531618812753
    },
    "euclideanDistance" : 27.041227806937798,
    "generation" : 0,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5291750503018111,
      "LackOfCohesion" : 0.48738089637778204,
      "MetricsIntensity" : 0.03285355801933028,
      "Density" : 3.0600324499729585,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='org.acegisecurity.CredentialsExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Environment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.install.SetupWizard'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='jenkins.ClassLoaderReflectionToolkit.FindResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='jenkins.ClassLoaderReflectionToolkit.FindResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "fe018542-ed88-4035-9c97-5ee324e6fd1d",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48692449559752143,
      "MetricsIntensity" : 0.03289935578714357,
      "Density" : 0.9985908050026422
    },
    "euclideanDistance" : 28.039888755625615,
    "generation" : 0,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5306532663316585,
      "LackOfCohesion" : 0.48692449559752143,
      "MetricsIntensity" : 0.03289935578714358,
      "Density" : 3.064324324324324,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.install.InstallState.Downgrade'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.FilePath.Write'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.ListFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='jenkins.security.apitoken.ApiTokenStore.HashedToken'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.model.HealthReport.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.security.apitoken.LegacyApiTokenAdministrativeMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.UpdateCenter.HudsonDowngradeJob'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Environment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.install.SetupWizard'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='jenkins.ClassLoaderReflectionToolkit.FindResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='jenkins.ClassLoaderReflectionToolkit.FindResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "f0f31148-8bbc-4688-980e-6b581ccc6210",
    "objectives" : {
      "NumberOfConcerns" : 0.9977019041365726,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.486630961298989,
      "MetricsIntensity" : 0.032865872871894644,
      "Density" : 0.9961247137572662
    },
    "euclideanDistance" : 31.035875424949275,
    "generation" : 0,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5279034690799402,
      "LackOfCohesion" : 0.486630961298989,
      "MetricsIntensity" : 0.032865872871894644,
      "Density" : 3.0600649350649345,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.model.RunnerStack'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.security.SlaveToMasterCallable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.Slave.SlaveDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.Slave.SlaveDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='org.acegisecurity.CredentialsExpiredException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.util.ReflectionUtils'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.FilePath.ListFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.security.LegacyAuthorizationStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Environment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.install.SetupWizard'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='jenkins.ClassLoaderReflectionToolkit.FindResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='jenkins.ClassLoaderReflectionToolkit.FindResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.scm.NullChangeLogParser'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.scm.NullChangeLogParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "0aec38b4-7930-4e88-90bd-20bcb59d4162",
    "objectives" : {
      "NumberOfConcerns" : 0.9970453053184505,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.4855513658119508,
      "MetricsIntensity" : 0.03297688387108138,
      "Density" : 0.9964770125066056
    },
    "euclideanDistance" : 38.029250760184894,
    "generation" : 0,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5292044310171193,
      "LackOfCohesion" : 0.4855513658119508,
      "MetricsIntensity" : 0.03297688387108138,
      "Density" : 3.061147186147186,
      "baselineType" : "CONCERN_MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.util.HttpResponses'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.Proc.RemoteProc'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.Proc.RemoteProc'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.model.Job.SubItemBuildsLocationImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.model.UpdateCenter.DownloadJob.Skipped'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.scm.EmptyChangeLogSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.model.ChoiceParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='jenkins.util.JavaVMArguments'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='jenkins.util.JavaVMArguments'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.model.AbstractBuild.DependencyChange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.model.AbstractBuild.DependencyChange'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Functions.RunUrl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.tools.ZipExtractionInstaller'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.node_monitors.AbstractDiskSpaceMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.model.Queue.LeftItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.model.Queue.LeftItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.util.ProcessTree.AIX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='hudson.util.ProcessTree.AIX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='hudson.util.ProcessTree.AIX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='hudson.util.ProcessTree.AIX'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.model.DescriptorVisibilityFilter.ResourceHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='jenkins.security.ResourceDomainFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.FilePath.SymlinkTo'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.tasks.BuildWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='jenkins.security.apitoken.ApiTokenPropertyDisabledDefaultAdministrativeMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='jenkins.security.ChannelConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='jenkins.security.ChannelConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.util.FormValidation.FileValidator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.util.FormValidation.FileValidator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.util.FormValidation.FileValidator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.util.FormValidation.FileValidator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.util.FormValidation.FileValidator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.util.FormValidation.FileValidator'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='hudson.model.queue.BackFiller.TimeRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='hudson.model.queue.BackFiller.TimeRange'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='hudson.model.queue.BackFiller.TimeRange'"
      } ]
    } ]
  } ]
}